ARM GAS  /tmp/ccr6ZmZv.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	huart3,132,4
  18              		.comm	hdma_usart3_rx,68,4
  19              		.section	.text.thread_1,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	thread_1:
  27              	.LFB133:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  21:Src/main.c    **** #include "main.h"
  22:Src/main.c    **** 
  23:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  24:Src/main.c    **** /* USER CODE BEGIN Includes */
  25:Src/main.c    **** #include "task.h"
  26:Src/main.c    **** #include <stdio.h>
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccr6ZmZv.s 			page 2


  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** UART_HandleTypeDef huart3;
  45:Src/main.c    **** DMA_HandleTypeDef hdma_usart3_rx;
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE BEGIN PV */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  52:Src/main.c    **** void SystemClock_Config(void);
  53:Src/main.c    **** static void MX_GPIO_Init(void);
  54:Src/main.c    **** static void MX_USART3_UART_Init(void);
  55:Src/main.c    **** static void MX_DMA_Init(void);
  56:Src/main.c    **** /* USER CODE BEGIN PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** 
  65:Src/main.c    **** //fist thread
  66:Src/main.c    **** static void thread_1(void){
  29              		.loc 1 66 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  41              	.L2:
  67:Src/main.c    **** 
  68:Src/main.c    ****   //toggle blue LED every 200ms
  69:Src/main.c    ****   while (1)
  70:Src/main.c    ****   {
  71:Src/main.c    ****     
  72:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_7);
  42              		.loc 1 72 0 discriminator 1
  43 0004 8021     		movs	r1, #128
ARM GAS  /tmp/ccr6ZmZv.s 			page 3


  44 0006 0348     		ldr	r0, .L3
  45 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  73:Src/main.c    ****     taskDelay(50);
  46              		.loc 1 73 0 discriminator 1
  47 000c 3220     		movs	r0, #50
  48 000e FFF7FEFF 		bl	taskDelay
  72:Src/main.c    ****     taskDelay(50);
  49              		.loc 1 72 0 discriminator 1
  50 0012 F7E7     		b	.L2
  51              	.L4:
  52              		.align	2
  53              	.L3:
  54 0014 00040048 		.word	1207960576
  55              		.cfi_endproc
  56              	.LFE133:
  58              		.section	.text.thread_2,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv4-sp-d16
  65              	thread_2:
  66              	.LFB134:
  74:Src/main.c    ****   }
  75:Src/main.c    ****   
  76:Src/main.c    **** }
  77:Src/main.c    **** 
  78:Src/main.c    **** static void thread_2(void)
  79:Src/main.c    **** {
  67              		.loc 1 79 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 24
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71 0000 80B5     		push	{r7, lr}
  72              	.LCFI2:
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 7, -8
  75              		.cfi_offset 14, -4
  76 0002 86B0     		sub	sp, sp, #24
  77              	.LCFI3:
  78              		.cfi_def_cfa_offset 32
  79 0004 00AF     		add	r7, sp, #0
  80              	.LCFI4:
  81              		.cfi_def_cfa_register 7
  82              	.L6:
  83              	.LBB4:
  80:Src/main.c    ****   // char buffer[20];
  81:Src/main.c    ****   //toggle red LED every 200ms
  82:Src/main.c    ****   while (1)
  83:Src/main.c    ****   {
  84:Src/main.c    ****     
  85:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_14);
  84              		.loc 1 85 0 discriminator 1
  85 0006 4FF48041 		mov	r1, #16384
  86 000a 0F48     		ldr	r0, .L7
  87 000c FFF7FEFF 		bl	HAL_GPIO_TogglePin
  86:Src/main.c    **** 
ARM GAS  /tmp/ccr6ZmZv.s 			page 4


  87:Src/main.c    ****     char buff[20];
  88:Src/main.c    ****     strcpy(buff,return_task_name());
  88              		.loc 1 88 0 discriminator 1
  89 0010 FFF7FEFF 		bl	return_task_name
  90 0014 0246     		mov	r2, r0
  91 0016 3B46     		mov	r3, r7
  92 0018 1146     		mov	r1, r2
  93 001a 1846     		mov	r0, r3
  94 001c FFF7FEFF 		bl	strcpy
  89:Src/main.c    ****     uint16_t size = strlen(buff);
  95              		.loc 1 89 0 discriminator 1
  96 0020 3B46     		mov	r3, r7
  97 0022 1846     		mov	r0, r3
  98 0024 FFF7FEFF 		bl	strlen
  99 0028 0346     		mov	r3, r0
 100 002a FB82     		strh	r3, [r7, #22]	@ movhi
  90:Src/main.c    ****     __ASM("cpsid i");
 101              		.loc 1 90 0 discriminator 1
 102              		.syntax unified
 103              	@ 90 "Src/main.c" 1
 104 002c 72B6     		cpsid i
 105              	@ 0 "" 2
  91:Src/main.c    **** 	  HAL_UART_Transmit(&huart3, (uint8_t *)buff, size,1);
 106              		.loc 1 91 0 discriminator 1
 107              		.thumb
 108              		.syntax unified
 109 002e FA8A     		ldrh	r2, [r7, #22]
 110 0030 3946     		mov	r1, r7
 111 0032 0123     		movs	r3, #1
 112 0034 0548     		ldr	r0, .L7+4
 113 0036 FFF7FEFF 		bl	HAL_UART_Transmit
  92:Src/main.c    ****     __ASM("cpsie i");
 114              		.loc 1 92 0 discriminator 1
 115              		.syntax unified
 116              	@ 92 "Src/main.c" 1
 117 003a 62B6     		cpsie i
 118              	@ 0 "" 2
  93:Src/main.c    **** 
  94:Src/main.c    ****     taskDelay(1000);
 119              		.loc 1 94 0 discriminator 1
 120              		.thumb
 121              		.syntax unified
 122 003c 4FF47A70 		mov	r0, #1000
 123 0040 FFF7FEFF 		bl	taskDelay
 124              	.LBE4:
  83:Src/main.c    ****     
 125              		.loc 1 83 0 discriminator 1
 126 0044 DFE7     		b	.L6
 127              	.L8:
 128 0046 00BF     		.align	2
 129              	.L7:
 130 0048 00040048 		.word	1207960576
 131 004c 00000000 		.word	huart3
 132              		.cfi_endproc
 133              	.LFE134:
 135              		.section	.text.thread_3,"ax",%progbits
 136              		.align	1
ARM GAS  /tmp/ccr6ZmZv.s 			page 5


 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	thread_3:
 143              	.LFB135:
  95:Src/main.c    ****   }
  96:Src/main.c    ****   
  97:Src/main.c    **** }
  98:Src/main.c    **** 
  99:Src/main.c    **** static void thread_3(void)
 100:Src/main.c    **** {
 144              		.loc 1 100 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 0000 80B5     		push	{r7, lr}
 149              	.LCFI5:
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              	.LCFI6:
 155              		.cfi_def_cfa_register 7
 156              	.L10:
 101:Src/main.c    **** 
 102:Src/main.c    ****   //toggle green every 200ms
 103:Src/main.c    ****   while (1)
 104:Src/main.c    ****   {
 105:Src/main.c    ****     
 106:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_0);
 157              		.loc 1 106 0 discriminator 1
 158 0004 0121     		movs	r1, #1
 159 0006 0448     		ldr	r0, .L11
 160 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 107:Src/main.c    ****     taskDelay(500);
 161              		.loc 1 107 0 discriminator 1
 162 000c 4FF4FA70 		mov	r0, #500
 163 0010 FFF7FEFF 		bl	taskDelay
 106:Src/main.c    ****     taskDelay(500);
 164              		.loc 1 106 0 discriminator 1
 165 0014 F6E7     		b	.L10
 166              	.L12:
 167 0016 00BF     		.align	2
 168              	.L11:
 169 0018 00040048 		.word	1207960576
 170              		.cfi_endproc
 171              	.LFE135:
 173              		.section	.rodata
 174              		.align	2
 175              	.LC0:
 176 0000 626C7565 		.ascii	"blue led\000"
 176      206C6564 
 176      00
 177 0009 000000   		.align	2
 178              	.LC1:
 179 000c 72656420 		.ascii	"red led\000"
ARM GAS  /tmp/ccr6ZmZv.s 			page 6


 179      6C656400 
 180              		.align	2
 181              	.LC2:
 182 0014 7461736B 		.ascii	"task 3\000"
 182      203300
 183              		.section	.text.main,"ax",%progbits
 184              		.align	1
 185              		.global	main
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	main:
 192              	.LFB136:
 108:Src/main.c    ****   }
 109:Src/main.c    ****   
 110:Src/main.c    **** }
 111:Src/main.c    **** 
 112:Src/main.c    **** 
 113:Src/main.c    **** 
 114:Src/main.c    **** 
 115:Src/main.c    **** /* USER CODE END 0 */
 116:Src/main.c    **** 
 117:Src/main.c    **** /**
 118:Src/main.c    ****   * @brief  The application entry point.
 119:Src/main.c    ****   * @retval int
 120:Src/main.c    ****   */
 121:Src/main.c    **** int main(void)
 122:Src/main.c    **** {
 193              		.loc 1 122 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197 0000 80B5     		push	{r7, lr}
 198              	.LCFI7:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 00AF     		add	r7, sp, #0
 203              	.LCFI8:
 204              		.cfi_def_cfa_register 7
 123:Src/main.c    ****   /* USER CODE BEGIN 1 */
 124:Src/main.c    ****   
 125:Src/main.c    ****   /* USER CODE END 1 */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 130:Src/main.c    ****   HAL_Init();
 205              		.loc 1 130 0
 206 0004 FFF7FEFF 		bl	HAL_Init
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* USER CODE BEGIN Init */
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* USER CODE END Init */
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* Configure the system clock */
ARM GAS  /tmp/ccr6ZmZv.s 			page 7


 137:Src/main.c    ****   SystemClock_Config();
 207              		.loc 1 137 0
 208 0008 FFF7FEFF 		bl	SystemClock_Config
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* USER CODE END SysInit */
 142:Src/main.c    **** 
 143:Src/main.c    ****   /* Initialize all configured peripherals */
 144:Src/main.c    ****   MX_GPIO_Init();
 209              		.loc 1 144 0
 210 000c FFF7FEFF 		bl	MX_GPIO_Init
 145:Src/main.c    ****   MX_USART3_UART_Init();
 211              		.loc 1 145 0
 212 0010 FFF7FEFF 		bl	MX_USART3_UART_Init
 146:Src/main.c    ****   MX_DMA_Init();
 213              		.loc 1 146 0
 214 0014 FFF7FEFF 		bl	MX_DMA_Init
 147:Src/main.c    ****   /* USER CODE BEGIN 2 */
 148:Src/main.c    **** 
 149:Src/main.c    ****   TaskCreate("blue led",DEFAULT_TASK_SIZE,thread_1,0);
 215              		.loc 1 149 0
 216 0018 0023     		movs	r3, #0
 217 001a 0B4A     		ldr	r2, .L15
 218 001c 4FF40071 		mov	r1, #512
 219 0020 0A48     		ldr	r0, .L15+4
 220 0022 FFF7FEFF 		bl	TaskCreate
 150:Src/main.c    **** 
 151:Src/main.c    ****   TaskCreate("red led",DEFAULT_TASK_SIZE,thread_2,1);
 221              		.loc 1 151 0
 222 0026 0123     		movs	r3, #1
 223 0028 094A     		ldr	r2, .L15+8
 224 002a 4FF40071 		mov	r1, #512
 225 002e 0948     		ldr	r0, .L15+12
 226 0030 FFF7FEFF 		bl	TaskCreate
 152:Src/main.c    **** 
 153:Src/main.c    ****   TaskCreate("task 3",DEFAULT_TASK_SIZE,thread_3,2);
 227              		.loc 1 153 0
 228 0034 0223     		movs	r3, #2
 229 0036 084A     		ldr	r2, .L15+16
 230 0038 4FF40071 		mov	r1, #512
 231 003c 0748     		ldr	r0, .L15+20
 232 003e FFF7FEFF 		bl	TaskCreate
 154:Src/main.c    **** 
 155:Src/main.c    ****   KernelStart();
 233              		.loc 1 155 0
 234 0042 FFF7FEFF 		bl	KernelStart
 235              	.L14:
 156:Src/main.c    ****   
 157:Src/main.c    **** 
 158:Src/main.c    ****   /* USER CODE END 2 */
 159:Src/main.c    **** 
 160:Src/main.c    ****   /* Infinite loop */
 161:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 162:Src/main.c    ****   while (1)
 236              		.loc 1 162 0 discriminator 1
 237 0046 FEE7     		b	.L14
ARM GAS  /tmp/ccr6ZmZv.s 			page 8


 238              	.L16:
 239              		.align	2
 240              	.L15:
 241 0048 00000000 		.word	thread_1
 242 004c 00000000 		.word	.LC0
 243 0050 00000000 		.word	thread_2
 244 0054 0C000000 		.word	.LC1
 245 0058 00000000 		.word	thread_3
 246 005c 14000000 		.word	.LC2
 247              		.cfi_endproc
 248              	.LFE136:
 250              		.section	.text.SystemClock_Config,"ax",%progbits
 251              		.align	1
 252              		.global	SystemClock_Config
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	SystemClock_Config:
 259              	.LFB137:
 163:Src/main.c    ****   {
 164:Src/main.c    ****     /* USER CODE END WHILE */
 165:Src/main.c    **** 
 166:Src/main.c    ****     /* USER CODE BEGIN 3 */
 167:Src/main.c    ****   }
 168:Src/main.c    ****   /* USER CODE END 3 */
 169:Src/main.c    **** }
 170:Src/main.c    **** 
 171:Src/main.c    **** /**
 172:Src/main.c    ****   * @brief System Clock Configuration
 173:Src/main.c    ****   * @retval None
 174:Src/main.c    ****   */
 175:Src/main.c    **** void SystemClock_Config(void)
 176:Src/main.c    **** {
 260              		.loc 1 176 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 152
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              	.LCFI9:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 7, -8
 268              		.cfi_offset 14, -4
 269 0002 A6B0     		sub	sp, sp, #152
 270              	.LCFI10:
 271              		.cfi_def_cfa_offset 160
 272 0004 00AF     		add	r7, sp, #0
 273              	.LCFI11:
 274              		.cfi_def_cfa_register 7
 177:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 275              		.loc 1 177 0
 276 0006 07F17003 		add	r3, r7, #112
 277 000a 2822     		movs	r2, #40
 278 000c 0021     		movs	r1, #0
 279 000e 1846     		mov	r0, r3
 280 0010 FFF7FEFF 		bl	memset
 178:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/ccr6ZmZv.s 			page 9


 281              		.loc 1 178 0
 282 0014 07F15C03 		add	r3, r7, #92
 283 0018 0022     		movs	r2, #0
 284 001a 1A60     		str	r2, [r3]
 285 001c 5A60     		str	r2, [r3, #4]
 286 001e 9A60     		str	r2, [r3, #8]
 287 0020 DA60     		str	r2, [r3, #12]
 288 0022 1A61     		str	r2, [r3, #16]
 179:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 289              		.loc 1 179 0
 290 0024 3B1D     		adds	r3, r7, #4
 291 0026 5822     		movs	r2, #88
 292 0028 0021     		movs	r1, #0
 293 002a 1846     		mov	r0, r3
 294 002c FFF7FEFF 		bl	memset
 180:Src/main.c    **** 
 181:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 182:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 183:Src/main.c    ****   */
 184:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 295              		.loc 1 184 0
 296 0030 0223     		movs	r3, #2
 297 0032 3B67     		str	r3, [r7, #112]
 185:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 298              		.loc 1 185 0
 299 0034 0123     		movs	r3, #1
 300 0036 FB67     		str	r3, [r7, #124]
 186:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 301              		.loc 1 186 0
 302 0038 1023     		movs	r3, #16
 303 003a C7F88030 		str	r3, [r7, #128]
 187:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 304              		.loc 1 187 0
 305 003e 0023     		movs	r3, #0
 306 0040 C7F88830 		str	r3, [r7, #136]
 188:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 307              		.loc 1 188 0
 308 0044 07F17003 		add	r3, r7, #112
 309 0048 1846     		mov	r0, r3
 310 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
 311 004e 0346     		mov	r3, r0
 312 0050 002B     		cmp	r3, #0
 313 0052 01D0     		beq	.L18
 189:Src/main.c    ****   {
 190:Src/main.c    ****     Error_Handler();
 314              		.loc 1 190 0
 315 0054 FFF7FEFF 		bl	Error_Handler
 316              	.L18:
 191:Src/main.c    ****   }
 192:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 193:Src/main.c    ****   */
 194:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 317              		.loc 1 194 0
 318 0058 0F23     		movs	r3, #15
 319 005a FB65     		str	r3, [r7, #92]
 195:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 196:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
ARM GAS  /tmp/ccr6ZmZv.s 			page 10


 320              		.loc 1 196 0
 321 005c 0023     		movs	r3, #0
 322 005e 3B66     		str	r3, [r7, #96]
 197:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 323              		.loc 1 197 0
 324 0060 0023     		movs	r3, #0
 325 0062 7B66     		str	r3, [r7, #100]
 198:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 326              		.loc 1 198 0
 327 0064 0023     		movs	r3, #0
 328 0066 BB66     		str	r3, [r7, #104]
 199:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 329              		.loc 1 199 0
 330 0068 0023     		movs	r3, #0
 331 006a FB66     		str	r3, [r7, #108]
 200:Src/main.c    **** 
 201:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 332              		.loc 1 201 0
 333 006c 07F15C03 		add	r3, r7, #92
 334 0070 0021     		movs	r1, #0
 335 0072 1846     		mov	r0, r3
 336 0074 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 337 0078 0346     		mov	r3, r0
 338 007a 002B     		cmp	r3, #0
 339 007c 01D0     		beq	.L19
 202:Src/main.c    ****   {
 203:Src/main.c    ****     Error_Handler();
 340              		.loc 1 203 0
 341 007e FFF7FEFF 		bl	Error_Handler
 342              	.L19:
 204:Src/main.c    ****   }
 205:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 343              		.loc 1 205 0
 344 0082 0423     		movs	r3, #4
 345 0084 7B60     		str	r3, [r7, #4]
 206:Src/main.c    ****   PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 346              		.loc 1 206 0
 347 0086 0023     		movs	r3, #0
 348 0088 7B61     		str	r3, [r7, #20]
 207:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 349              		.loc 1 207 0
 350 008a 3B1D     		adds	r3, r7, #4
 351 008c 1846     		mov	r0, r3
 352 008e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 353 0092 0346     		mov	r3, r0
 354 0094 002B     		cmp	r3, #0
 355 0096 01D0     		beq	.L21
 208:Src/main.c    ****   {
 209:Src/main.c    ****     Error_Handler();
 356              		.loc 1 209 0
 357 0098 FFF7FEFF 		bl	Error_Handler
 358              	.L21:
 210:Src/main.c    ****   }
 211:Src/main.c    **** }
 359              		.loc 1 211 0
 360 009c 00BF     		nop
 361 009e 9837     		adds	r7, r7, #152
ARM GAS  /tmp/ccr6ZmZv.s 			page 11


 362              	.LCFI12:
 363              		.cfi_def_cfa_offset 8
 364 00a0 BD46     		mov	sp, r7
 365              	.LCFI13:
 366              		.cfi_def_cfa_register 13
 367              		@ sp needed
 368 00a2 80BD     		pop	{r7, pc}
 369              		.cfi_endproc
 370              	.LFE137:
 372              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 373              		.align	1
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu fpv4-sp-d16
 379              	MX_USART3_UART_Init:
 380              	.LFB138:
 212:Src/main.c    **** 
 213:Src/main.c    **** /**
 214:Src/main.c    ****   * @brief USART3 Initialization Function
 215:Src/main.c    ****   * @param None
 216:Src/main.c    ****   * @retval None
 217:Src/main.c    ****   */
 218:Src/main.c    **** static void MX_USART3_UART_Init(void)
 219:Src/main.c    **** {
 381              		.loc 1 219 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 80B5     		push	{r7, lr}
 386              	.LCFI14:
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 00AF     		add	r7, sp, #0
 391              	.LCFI15:
 392              		.cfi_def_cfa_register 7
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 0 */
 222:Src/main.c    **** 
 223:Src/main.c    ****   /* USER CODE END USART3_Init 0 */
 224:Src/main.c    **** 
 225:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 1 */
 226:Src/main.c    **** 
 227:Src/main.c    ****   /* USER CODE END USART3_Init 1 */
 228:Src/main.c    ****   huart3.Instance = USART3;
 393              		.loc 1 228 0
 394 0004 144B     		ldr	r3, .L25
 395 0006 154A     		ldr	r2, .L25+4
 396 0008 1A60     		str	r2, [r3]
 229:Src/main.c    ****   huart3.Init.BaudRate = 9600;
 397              		.loc 1 229 0
 398 000a 134B     		ldr	r3, .L25
 399 000c 4FF41652 		mov	r2, #9600
 400 0010 5A60     		str	r2, [r3, #4]
 230:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 401              		.loc 1 230 0
ARM GAS  /tmp/ccr6ZmZv.s 			page 12


 402 0012 114B     		ldr	r3, .L25
 403 0014 0022     		movs	r2, #0
 404 0016 9A60     		str	r2, [r3, #8]
 231:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 405              		.loc 1 231 0
 406 0018 0F4B     		ldr	r3, .L25
 407 001a 0022     		movs	r2, #0
 408 001c DA60     		str	r2, [r3, #12]
 232:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 409              		.loc 1 232 0
 410 001e 0E4B     		ldr	r3, .L25
 411 0020 0022     		movs	r2, #0
 412 0022 1A61     		str	r2, [r3, #16]
 233:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 413              		.loc 1 233 0
 414 0024 0C4B     		ldr	r3, .L25
 415 0026 0C22     		movs	r2, #12
 416 0028 5A61     		str	r2, [r3, #20]
 234:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 417              		.loc 1 234 0
 418 002a 0B4B     		ldr	r3, .L25
 419 002c 0022     		movs	r2, #0
 420 002e 9A61     		str	r2, [r3, #24]
 235:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 421              		.loc 1 235 0
 422 0030 094B     		ldr	r3, .L25
 423 0032 0022     		movs	r2, #0
 424 0034 DA61     		str	r2, [r3, #28]
 236:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 425              		.loc 1 236 0
 426 0036 084B     		ldr	r3, .L25
 427 0038 0022     		movs	r2, #0
 428 003a 1A62     		str	r2, [r3, #32]
 237:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 429              		.loc 1 237 0
 430 003c 064B     		ldr	r3, .L25
 431 003e 0022     		movs	r2, #0
 432 0040 5A62     		str	r2, [r3, #36]
 238:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 433              		.loc 1 238 0
 434 0042 0548     		ldr	r0, .L25
 435 0044 FFF7FEFF 		bl	HAL_UART_Init
 436 0048 0346     		mov	r3, r0
 437 004a 002B     		cmp	r3, #0
 438 004c 01D0     		beq	.L24
 239:Src/main.c    ****   {
 240:Src/main.c    ****     Error_Handler();
 439              		.loc 1 240 0
 440 004e FFF7FEFF 		bl	Error_Handler
 441              	.L24:
 241:Src/main.c    ****   }
 242:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 2 */
 243:Src/main.c    **** 
 244:Src/main.c    ****   /* USER CODE END USART3_Init 2 */
 245:Src/main.c    **** 
 246:Src/main.c    **** }
 442              		.loc 1 246 0
ARM GAS  /tmp/ccr6ZmZv.s 			page 13


 443 0052 00BF     		nop
 444 0054 80BD     		pop	{r7, pc}
 445              	.L26:
 446 0056 00BF     		.align	2
 447              	.L25:
 448 0058 00000000 		.word	huart3
 449 005c 00480040 		.word	1073760256
 450              		.cfi_endproc
 451              	.LFE138:
 453              		.section	.text.MX_DMA_Init,"ax",%progbits
 454              		.align	1
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 458              		.fpu fpv4-sp-d16
 460              	MX_DMA_Init:
 461              	.LFB139:
 247:Src/main.c    **** 
 248:Src/main.c    **** /**
 249:Src/main.c    ****   * Enable DMA controller clock
 250:Src/main.c    ****   */
 251:Src/main.c    **** static void MX_DMA_Init(void)
 252:Src/main.c    **** {
 462              		.loc 1 252 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 8
 465              		@ frame_needed = 1, uses_anonymous_args = 0
 466 0000 80B5     		push	{r7, lr}
 467              	.LCFI16:
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 7, -8
 470              		.cfi_offset 14, -4
 471 0002 82B0     		sub	sp, sp, #8
 472              	.LCFI17:
 473              		.cfi_def_cfa_offset 16
 474 0004 00AF     		add	r7, sp, #0
 475              	.LCFI18:
 476              		.cfi_def_cfa_register 7
 477              	.LBB5:
 253:Src/main.c    **** 
 254:Src/main.c    ****   /* DMA controller clock enable */
 255:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 478              		.loc 1 255 0
 479 0006 0C4B     		ldr	r3, .L28
 480 0008 5B69     		ldr	r3, [r3, #20]
 481 000a 0B4A     		ldr	r2, .L28
 482 000c 43F00103 		orr	r3, r3, #1
 483 0010 5361     		str	r3, [r2, #20]
 484 0012 094B     		ldr	r3, .L28
 485 0014 5B69     		ldr	r3, [r3, #20]
 486 0016 03F00103 		and	r3, r3, #1
 487 001a 7B60     		str	r3, [r7, #4]
 488 001c 7B68     		ldr	r3, [r7, #4]
 489              	.LBE5:
 256:Src/main.c    **** 
 257:Src/main.c    ****   /* DMA interrupt init */
 258:Src/main.c    ****   /* DMA1_Channel3_IRQn interrupt configuration */
ARM GAS  /tmp/ccr6ZmZv.s 			page 14


 259:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 490              		.loc 1 259 0
 491 001e 0022     		movs	r2, #0
 492 0020 0021     		movs	r1, #0
 493 0022 0D20     		movs	r0, #13
 494 0024 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 260:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 495              		.loc 1 260 0
 496 0028 0D20     		movs	r0, #13
 497 002a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 261:Src/main.c    **** 
 262:Src/main.c    **** }
 498              		.loc 1 262 0
 499 002e 00BF     		nop
 500 0030 0837     		adds	r7, r7, #8
 501              	.LCFI19:
 502              		.cfi_def_cfa_offset 8
 503 0032 BD46     		mov	sp, r7
 504              	.LCFI20:
 505              		.cfi_def_cfa_register 13
 506              		@ sp needed
 507 0034 80BD     		pop	{r7, pc}
 508              	.L29:
 509 0036 00BF     		.align	2
 510              	.L28:
 511 0038 00100240 		.word	1073876992
 512              		.cfi_endproc
 513              	.LFE139:
 515              		.section	.text.MX_GPIO_Init,"ax",%progbits
 516              		.align	1
 517              		.syntax unified
 518              		.thumb
 519              		.thumb_func
 520              		.fpu fpv4-sp-d16
 522              	MX_GPIO_Init:
 523              	.LFB140:
 263:Src/main.c    **** 
 264:Src/main.c    **** /**
 265:Src/main.c    ****   * @brief GPIO Initialization Function
 266:Src/main.c    ****   * @param None
 267:Src/main.c    ****   * @retval None
 268:Src/main.c    ****   */
 269:Src/main.c    **** static void MX_GPIO_Init(void)
 270:Src/main.c    **** {
 524              		.loc 1 270 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 32
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528 0000 80B5     		push	{r7, lr}
 529              	.LCFI21:
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 7, -8
 532              		.cfi_offset 14, -4
 533 0002 88B0     		sub	sp, sp, #32
 534              	.LCFI22:
 535              		.cfi_def_cfa_offset 40
 536 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccr6ZmZv.s 			page 15


 537              	.LCFI23:
 538              		.cfi_def_cfa_register 7
 271:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 539              		.loc 1 271 0
 540 0006 07F10C03 		add	r3, r7, #12
 541 000a 0022     		movs	r2, #0
 542 000c 1A60     		str	r2, [r3]
 543 000e 5A60     		str	r2, [r3, #4]
 544 0010 9A60     		str	r2, [r3, #8]
 545 0012 DA60     		str	r2, [r3, #12]
 546 0014 1A61     		str	r2, [r3, #16]
 547              	.LBB6:
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* GPIO Ports Clock Enable */
 274:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 548              		.loc 1 274 0
 549 0016 1B4B     		ldr	r3, .L31
 550 0018 5B69     		ldr	r3, [r3, #20]
 551 001a 1A4A     		ldr	r2, .L31
 552 001c 43F48023 		orr	r3, r3, #262144
 553 0020 5361     		str	r3, [r2, #20]
 554 0022 184B     		ldr	r3, .L31
 555 0024 5B69     		ldr	r3, [r3, #20]
 556 0026 03F48023 		and	r3, r3, #262144
 557 002a BB60     		str	r3, [r7, #8]
 558 002c BB68     		ldr	r3, [r7, #8]
 559              	.LBE6:
 560              	.LBB7:
 275:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 561              		.loc 1 275 0
 562 002e 154B     		ldr	r3, .L31
 563 0030 5B69     		ldr	r3, [r3, #20]
 564 0032 144A     		ldr	r2, .L31
 565 0034 43F48013 		orr	r3, r3, #1048576
 566 0038 5361     		str	r3, [r2, #20]
 567 003a 124B     		ldr	r3, .L31
 568 003c 5B69     		ldr	r3, [r3, #20]
 569 003e 03F48013 		and	r3, r3, #1048576
 570 0042 7B60     		str	r3, [r7, #4]
 571 0044 7B68     		ldr	r3, [r7, #4]
 572              	.LBE7:
 276:Src/main.c    **** 
 277:Src/main.c    ****   /*Configure GPIO pin Output Level */
 278:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|LED_BLUE_Pin, GPIO_PIN_RESET);
 573              		.loc 1 278 0
 574 0046 0022     		movs	r2, #0
 575 0048 8121     		movs	r1, #129
 576 004a 0F48     		ldr	r0, .L31+4
 577 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 279:Src/main.c    **** 
 280:Src/main.c    ****   /*Configure GPIO pin Output Level */
 281:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET);
 578              		.loc 1 281 0
 579 0050 0122     		movs	r2, #1
 580 0052 4FF48041 		mov	r1, #16384
 581 0056 0C48     		ldr	r0, .L31+4
 582 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccr6ZmZv.s 			page 16


 282:Src/main.c    **** 
 283:Src/main.c    ****   /*Configure GPIO pins : PB0 PB14 LED_BLUE_Pin */
 284:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_14|LED_BLUE_Pin;
 583              		.loc 1 284 0
 584 005c 44F28103 		movw	r3, #16513
 585 0060 FB60     		str	r3, [r7, #12]
 285:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 586              		.loc 1 285 0
 587 0062 0123     		movs	r3, #1
 588 0064 3B61     		str	r3, [r7, #16]
 286:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 589              		.loc 1 286 0
 590 0066 0023     		movs	r3, #0
 591 0068 7B61     		str	r3, [r7, #20]
 287:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 592              		.loc 1 287 0
 593 006a 0023     		movs	r3, #0
 594 006c BB61     		str	r3, [r7, #24]
 288:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 595              		.loc 1 288 0
 596 006e 07F10C03 		add	r3, r7, #12
 597 0072 1946     		mov	r1, r3
 598 0074 0448     		ldr	r0, .L31+4
 599 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 289:Src/main.c    **** 
 290:Src/main.c    **** }
 600              		.loc 1 290 0
 601 007a 00BF     		nop
 602 007c 2037     		adds	r7, r7, #32
 603              	.LCFI24:
 604              		.cfi_def_cfa_offset 8
 605 007e BD46     		mov	sp, r7
 606              	.LCFI25:
 607              		.cfi_def_cfa_register 13
 608              		@ sp needed
 609 0080 80BD     		pop	{r7, pc}
 610              	.L32:
 611 0082 00BF     		.align	2
 612              	.L31:
 613 0084 00100240 		.word	1073876992
 614 0088 00040048 		.word	1207960576
 615              		.cfi_endproc
 616              	.LFE140:
 618              		.section	.text.Error_Handler,"ax",%progbits
 619              		.align	1
 620              		.global	Error_Handler
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 624              		.fpu fpv4-sp-d16
 626              	Error_Handler:
 627              	.LFB141:
 291:Src/main.c    **** 
 292:Src/main.c    **** /* USER CODE BEGIN 4 */
 293:Src/main.c    **** 
 294:Src/main.c    **** /* USER CODE END 4 */
 295:Src/main.c    **** 
ARM GAS  /tmp/ccr6ZmZv.s 			page 17


 296:Src/main.c    **** /**
 297:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 298:Src/main.c    ****   * @retval None
 299:Src/main.c    ****   */
 300:Src/main.c    **** void Error_Handler(void)
 301:Src/main.c    **** {
 628              		.loc 1 301 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633 0000 80B4     		push	{r7}
 634              	.LCFI26:
 635              		.cfi_def_cfa_offset 4
 636              		.cfi_offset 7, -4
 637 0002 00AF     		add	r7, sp, #0
 638              	.LCFI27:
 639              		.cfi_def_cfa_register 7
 640              	.LBB8:
 641              	.LBB9:
 642              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  /tmp/ccr6ZmZv.s 			page 18


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccr6ZmZv.s 			page 19


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 643              		.loc 2 142 0
 644              		.syntax unified
 645              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 646 0004 72B6     		cpsid i
 647              	@ 0 "" 2
 648              		.thumb
 649              		.syntax unified
 650              	.L34:
ARM GAS  /tmp/ccr6ZmZv.s 			page 20


 651              	.LBE9:
 652              	.LBE8:
 302:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 303:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 304:Src/main.c    ****   __disable_irq();
 305:Src/main.c    ****   while (1)
 653              		.loc 1 305 0 discriminator 1
 654 0006 FEE7     		b	.L34
 655              		.cfi_endproc
 656              	.LFE141:
 658              		.text
 659              	.Letext0:
 660              		.file 3 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_typ
 661              		.file 4 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 662              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 663              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 664              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 665              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 666              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 667              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 668              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 669              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 670              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 671              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 672              		.file 15 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 673              		.file 16 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 674              		.file 17 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stdde
 675              		.file 18 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
ARM GAS  /tmp/ccr6ZmZv.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
                            *COM*:0000000000000084 huart3
                            *COM*:0000000000000044 hdma_usart3_rx
     /tmp/ccr6ZmZv.s:20     .text.thread_1:0000000000000000 $t
     /tmp/ccr6ZmZv.s:26     .text.thread_1:0000000000000000 thread_1
     /tmp/ccr6ZmZv.s:54     .text.thread_1:0000000000000014 $d
     /tmp/ccr6ZmZv.s:59     .text.thread_2:0000000000000000 $t
     /tmp/ccr6ZmZv.s:65     .text.thread_2:0000000000000000 thread_2
     /tmp/ccr6ZmZv.s:130    .text.thread_2:0000000000000048 $d
     /tmp/ccr6ZmZv.s:136    .text.thread_3:0000000000000000 $t
     /tmp/ccr6ZmZv.s:142    .text.thread_3:0000000000000000 thread_3
     /tmp/ccr6ZmZv.s:169    .text.thread_3:0000000000000018 $d
     /tmp/ccr6ZmZv.s:174    .rodata:0000000000000000 $d
     /tmp/ccr6ZmZv.s:184    .text.main:0000000000000000 $t
     /tmp/ccr6ZmZv.s:191    .text.main:0000000000000000 main
     /tmp/ccr6ZmZv.s:258    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccr6ZmZv.s:522    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccr6ZmZv.s:379    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccr6ZmZv.s:460    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccr6ZmZv.s:241    .text.main:0000000000000048 $d
     /tmp/ccr6ZmZv.s:251    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccr6ZmZv.s:626    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccr6ZmZv.s:373    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccr6ZmZv.s:448    .text.MX_USART3_UART_Init:0000000000000058 $d
     /tmp/ccr6ZmZv.s:454    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccr6ZmZv.s:511    .text.MX_DMA_Init:0000000000000038 $d
     /tmp/ccr6ZmZv.s:516    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccr6ZmZv.s:613    .text.MX_GPIO_Init:0000000000000084 $d
     /tmp/ccr6ZmZv.s:619    .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GPIO_TogglePin
taskDelay
return_task_name
strcpy
strlen
HAL_UART_Transmit
HAL_Init
TaskCreate
KernelStart
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_UART_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_WritePin
HAL_GPIO_Init
