ARM GAS  /tmp/cc16gR44.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB130:
  27              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Src/stm32f3xx_it.c ****   * @attention
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/stm32f3xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f3xx_it.c ****   *
  12:Src/stm32f3xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f3xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f3xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f3xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f3xx_it.c ****   *
  17:Src/stm32f3xx_it.c ****   ******************************************************************************
  18:Src/stm32f3xx_it.c ****   */
  19:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f3xx_it.c **** 
  21:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f3xx_it.c **** #include "main.h"
  23:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  24:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f3xx_it.c **** #include "task.h"
  27:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  28:Src/stm32f3xx_it.c **** 
  29:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  31:Src/stm32f3xx_it.c **** 
ARM GAS  /tmp/cc16gR44.s 			page 2


  32:Src/stm32f3xx_it.c **** /* USER CODE END TD */
  33:Src/stm32f3xx_it.c **** 
  34:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  36:Src/stm32f3xx_it.c **** 
  37:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  38:Src/stm32f3xx_it.c **** 
  39:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  41:Src/stm32f3xx_it.c **** 
  42:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  43:Src/stm32f3xx_it.c **** 
  44:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f3xx_it.c **** 
  47:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  48:Src/stm32f3xx_it.c **** 
  49:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  51:Src/stm32f3xx_it.c **** 
  52:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  53:Src/stm32f3xx_it.c **** 
  54:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  56:Src/stm32f3xx_it.c **** 
  57:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  58:Src/stm32f3xx_it.c **** 
  59:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_rx;
  61:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  62:Src/stm32f3xx_it.c **** 
  63:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  64:Src/stm32f3xx_it.c **** 
  65:Src/stm32f3xx_it.c **** /******************************************************************************/
  66:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  67:Src/stm32f3xx_it.c **** /******************************************************************************/
  68:Src/stm32f3xx_it.c **** /**
  69:Src/stm32f3xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Src/stm32f3xx_it.c ****   */
  71:Src/stm32f3xx_it.c **** void NMI_Handler(void)
  72:Src/stm32f3xx_it.c **** {
  28              		.loc 1 72 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  40              	.L2:
  73:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Src/stm32f3xx_it.c **** 
  75:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
ARM GAS  /tmp/cc16gR44.s 			page 3


  76:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Src/stm32f3xx_it.c ****   while (1)
  41              		.loc 1 77 0 discriminator 1
  42 0004 FEE7     		b	.L2
  43              		.cfi_endproc
  44              	.LFE130:
  46              		.section	.text.HardFault_Handler,"ax",%progbits
  47              		.align	1
  48              		.global	HardFault_Handler
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	HardFault_Handler:
  55              	.LFB131:
  78:Src/stm32f3xx_it.c ****   {
  79:Src/stm32f3xx_it.c ****   }
  80:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Src/stm32f3xx_it.c **** }
  82:Src/stm32f3xx_it.c **** 
  83:Src/stm32f3xx_it.c **** /**
  84:Src/stm32f3xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Src/stm32f3xx_it.c ****   */
  86:Src/stm32f3xx_it.c **** void HardFault_Handler(void)
  87:Src/stm32f3xx_it.c **** {
  56              		.loc 1 87 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61 0000 80B4     		push	{r7}
  62              	.LCFI2:
  63              		.cfi_def_cfa_offset 4
  64              		.cfi_offset 7, -4
  65 0002 00AF     		add	r7, sp, #0
  66              	.LCFI3:
  67              		.cfi_def_cfa_register 7
  68              	.L4:
  88:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Src/stm32f3xx_it.c **** 
  90:Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Src/stm32f3xx_it.c ****   while (1)
  69              		.loc 1 91 0 discriminator 1
  70 0004 FEE7     		b	.L4
  71              		.cfi_endproc
  72              	.LFE131:
  74              		.section	.text.MemManage_Handler,"ax",%progbits
  75              		.align	1
  76              		.global	MemManage_Handler
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu fpv4-sp-d16
  82              	MemManage_Handler:
  83              	.LFB132:
  92:Src/stm32f3xx_it.c ****   {
  93:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
ARM GAS  /tmp/cc16gR44.s 			page 4


  94:Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Src/stm32f3xx_it.c ****   }
  96:Src/stm32f3xx_it.c **** }
  97:Src/stm32f3xx_it.c **** 
  98:Src/stm32f3xx_it.c **** /**
  99:Src/stm32f3xx_it.c ****   * @brief This function handles Memory management fault.
 100:Src/stm32f3xx_it.c ****   */
 101:Src/stm32f3xx_it.c **** void MemManage_Handler(void)
 102:Src/stm32f3xx_it.c **** {
  84              		.loc 1 102 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0000 80B4     		push	{r7}
  90              	.LCFI4:
  91              		.cfi_def_cfa_offset 4
  92              		.cfi_offset 7, -4
  93 0002 00AF     		add	r7, sp, #0
  94              	.LCFI5:
  95              		.cfi_def_cfa_register 7
  96              	.L6:
 103:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Src/stm32f3xx_it.c **** 
 105:Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Src/stm32f3xx_it.c ****   while (1)
  97              		.loc 1 106 0 discriminator 1
  98 0004 FEE7     		b	.L6
  99              		.cfi_endproc
 100              	.LFE132:
 102              		.section	.text.BusFault_Handler,"ax",%progbits
 103              		.align	1
 104              		.global	BusFault_Handler
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	BusFault_Handler:
 111              	.LFB133:
 107:Src/stm32f3xx_it.c ****   {
 108:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Src/stm32f3xx_it.c ****   }
 111:Src/stm32f3xx_it.c **** }
 112:Src/stm32f3xx_it.c **** 
 113:Src/stm32f3xx_it.c **** /**
 114:Src/stm32f3xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 115:Src/stm32f3xx_it.c ****   */
 116:Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 117:Src/stm32f3xx_it.c **** {
 112              		.loc 1 117 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 1, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117 0000 80B4     		push	{r7}
 118              	.LCFI6:
ARM GAS  /tmp/cc16gR44.s 			page 5


 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 7, -4
 121 0002 00AF     		add	r7, sp, #0
 122              	.LCFI7:
 123              		.cfi_def_cfa_register 7
 124              	.L8:
 118:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Src/stm32f3xx_it.c **** 
 120:Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Src/stm32f3xx_it.c ****   while (1)
 125              		.loc 1 121 0 discriminator 1
 126 0004 FEE7     		b	.L8
 127              		.cfi_endproc
 128              	.LFE133:
 130              		.section	.text.UsageFault_Handler,"ax",%progbits
 131              		.align	1
 132              		.global	UsageFault_Handler
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	UsageFault_Handler:
 139              	.LFB134:
 122:Src/stm32f3xx_it.c ****   {
 123:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Src/stm32f3xx_it.c ****   }
 126:Src/stm32f3xx_it.c **** }
 127:Src/stm32f3xx_it.c **** 
 128:Src/stm32f3xx_it.c **** /**
 129:Src/stm32f3xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Src/stm32f3xx_it.c ****   */
 131:Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 132:Src/stm32f3xx_it.c **** {
 140              		.loc 1 132 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145 0000 80B4     		push	{r7}
 146              	.LCFI8:
 147              		.cfi_def_cfa_offset 4
 148              		.cfi_offset 7, -4
 149 0002 00AF     		add	r7, sp, #0
 150              	.LCFI9:
 151              		.cfi_def_cfa_register 7
 152              	.L10:
 133:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Src/stm32f3xx_it.c **** 
 135:Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Src/stm32f3xx_it.c ****   while (1)
 153              		.loc 1 136 0 discriminator 1
 154 0004 FEE7     		b	.L10
 155              		.cfi_endproc
 156              	.LFE134:
 158              		.section	.text.DebugMon_Handler,"ax",%progbits
 159              		.align	1
ARM GAS  /tmp/cc16gR44.s 			page 6


 160              		.global	DebugMon_Handler
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv4-sp-d16
 166              	DebugMon_Handler:
 167              	.LFB135:
 137:Src/stm32f3xx_it.c ****   {
 138:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Src/stm32f3xx_it.c ****   }
 141:Src/stm32f3xx_it.c **** }
 142:Src/stm32f3xx_it.c **** 
 143:Src/stm32f3xx_it.c **** /**
 144:Src/stm32f3xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 145:Src/stm32f3xx_it.c ****   */
 146:Src/stm32f3xx_it.c **** 
 147:Src/stm32f3xx_it.c **** 
 148:Src/stm32f3xx_it.c **** /**
 149:Src/stm32f3xx_it.c ****   * @brief This function handles Debug monitor.
 150:Src/stm32f3xx_it.c ****   */
 151:Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 152:Src/stm32f3xx_it.c **** {
 168              		.loc 1 152 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173 0000 80B4     		push	{r7}
 174              	.LCFI10:
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 7, -4
 177 0002 00AF     		add	r7, sp, #0
 178              	.LCFI11:
 179              		.cfi_def_cfa_register 7
 153:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 154:Src/stm32f3xx_it.c **** 
 155:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 156:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 157:Src/stm32f3xx_it.c **** 
 158:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 159:Src/stm32f3xx_it.c **** }
 180              		.loc 1 159 0
 181 0004 00BF     		nop
 182 0006 BD46     		mov	sp, r7
 183              	.LCFI12:
 184              		.cfi_def_cfa_register 13
 185              		@ sp needed
 186 0008 5DF8047B 		ldr	r7, [sp], #4
 187              	.LCFI13:
 188              		.cfi_restore 7
 189              		.cfi_def_cfa_offset 0
 190 000c 7047     		bx	lr
 191              		.cfi_endproc
 192              	.LFE135:
 194              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 195              		.align	1
ARM GAS  /tmp/cc16gR44.s 			page 7


 196              		.global	DMA1_Channel3_IRQHandler
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu fpv4-sp-d16
 202              	DMA1_Channel3_IRQHandler:
 203              	.LFB136:
 160:Src/stm32f3xx_it.c **** 
 161:Src/stm32f3xx_it.c **** /**
 162:Src/stm32f3xx_it.c ****   * @brief This function handles Pendable request for system service.
 163:Src/stm32f3xx_it.c ****   */
 164:Src/stm32f3xx_it.c **** 
 165:Src/stm32f3xx_it.c **** 
 166:Src/stm32f3xx_it.c **** /******************************************************************************/
 167:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 168:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 169:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 170:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 171:Src/stm32f3xx_it.c **** /******************************************************************************/
 172:Src/stm32f3xx_it.c **** 
 173:Src/stm32f3xx_it.c **** /**
 174:Src/stm32f3xx_it.c ****   * @brief This function handles DMA1 channel3 global interrupt.
 175:Src/stm32f3xx_it.c ****   */
 176:Src/stm32f3xx_it.c **** void DMA1_Channel3_IRQHandler(void)
 177:Src/stm32f3xx_it.c **** {
 204              		.loc 1 177 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              	.LCFI14:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 00AF     		add	r7, sp, #0
 214              	.LCFI15:
 215              		.cfi_def_cfa_register 7
 178:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */
 179:Src/stm32f3xx_it.c **** 
 180:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 0 */
 181:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_rx);
 216              		.loc 1 181 0
 217 0004 0248     		ldr	r0, .L13
 218 0006 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 182:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */
 183:Src/stm32f3xx_it.c **** 
 184:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 1 */
 185:Src/stm32f3xx_it.c **** }
 219              		.loc 1 185 0
 220 000a 00BF     		nop
 221 000c 80BD     		pop	{r7, pc}
 222              	.L14:
 223 000e 00BF     		.align	2
 224              	.L13:
 225 0010 00000000 		.word	hdma_usart3_rx
 226              		.cfi_endproc
 227              	.LFE136:
ARM GAS  /tmp/cc16gR44.s 			page 8


 229              		.text
 230              	.Letext0:
 231              		.file 2 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_typ
 232              		.file 3 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 233              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 234              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 235              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 236              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 237              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 238              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 239              		.file 10 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 240              		.file 11 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 241              		.file 12 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stdde
 242              		.file 13 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
ARM GAS  /tmp/cc16gR44.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
     /tmp/cc16gR44.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc16gR44.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc16gR44.s:47     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc16gR44.s:54     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc16gR44.s:75     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc16gR44.s:82     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc16gR44.s:103    .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc16gR44.s:110    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc16gR44.s:131    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc16gR44.s:138    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc16gR44.s:159    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc16gR44.s:166    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc16gR44.s:195    .text.DMA1_Channel3_IRQHandler:0000000000000000 $t
     /tmp/cc16gR44.s:202    .text.DMA1_Channel3_IRQHandler:0000000000000000 DMA1_Channel3_IRQHandler
     /tmp/cc16gR44.s:225    .text.DMA1_Channel3_IRQHandler:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_usart3_rx
