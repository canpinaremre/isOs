ARM GAS  /tmp/ccs8nK3N.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	aPLLMULFactorTable
  18              		.section	.rodata.aPLLMULFactorTable,"a",%progbits
  19              		.align	2
  22              	aPLLMULFactorTable:
  23 0000 02       		.byte	2
  24 0001 03       		.byte	3
  25 0002 04       		.byte	4
  26 0003 05       		.byte	5
  27 0004 06       		.byte	6
  28 0005 07       		.byte	7
  29 0006 08       		.byte	8
  30 0007 09       		.byte	9
  31 0008 0A       		.byte	10
  32 0009 0B       		.byte	11
  33 000a 0C       		.byte	12
  34 000b 0D       		.byte	13
  35 000c 0E       		.byte	14
  36 000d 0F       		.byte	15
  37 000e 10       		.byte	16
  38 000f 10       		.byte	16
  39              		.global	aPredivFactorTable
  40              		.section	.rodata.aPredivFactorTable,"a",%progbits
  41              		.align	2
  44              	aPredivFactorTable:
  45 0000 01       		.byte	1
  46 0001 02       		.byte	2
  47 0002 03       		.byte	3
  48 0003 04       		.byte	4
  49 0004 05       		.byte	5
  50 0005 06       		.byte	6
  51 0006 07       		.byte	7
  52 0007 08       		.byte	8
  53 0008 09       		.byte	9
  54 0009 0A       		.byte	10
  55 000a 0B       		.byte	11
  56 000b 0C       		.byte	12
  57 000c 0D       		.byte	13
  58 000d 0E       		.byte	14
  59 000e 0F       		.byte	15
  60 000f 10       		.byte	16
  61              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
ARM GAS  /tmp/ccs8nK3N.s 			page 2


  62              		.align	1
  63              		.global	HAL_RCC_DeInit
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
  69              	HAL_RCC_DeInit:
  70              	.LFB130:
  71              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @file    stm32f3xx_hal_rcc.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *       
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, I2S, TIM, USB FS)
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
ARM GAS  /tmp/ccs8nK3N.s 			page 3


  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #include "stm32f3xx_hal.h"
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @addtogroup STM32F3xx_HAL_Driver
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC RCC
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** * @brief RCC HAL module driver
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  * @{
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  */
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
ARM GAS  /tmp/ccs8nK3N.s 			page 4


 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                        10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                          9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim    
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and APB2).
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the PLL as System clock source.
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source.
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz)
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB FS (48 MHz)
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The third output may be used to generate the clock for the ADC peripherals (up to 72 M
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The fourth output may be used to generate the clock for the TIM peripherals (144 MHz)
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M4 NMI 
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           HSE and PLL.
ARM GAS  /tmp/ccs8nK3N.s 			page 5


 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) For the STM32F3xx devices, the maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              prefetch is disabled.
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /*
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSE and PLL OFF
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - All interrupts disabled
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - Peripheral clocks
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  72              		.loc 1 217 0
  73              		.cfi_startproc
ARM GAS  /tmp/ccs8nK3N.s 			page 6


  74              		@ args = 0, pretend = 0, frame = 16
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              	.LCFI0:
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 7, -8
  80              		.cfi_offset 14, -4
  81 0002 84B0     		sub	sp, sp, #16
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 24
  84 0004 00AF     		add	r7, sp, #0
  85              	.LCFI2:
  86              		.cfi_def_cfa_register 7
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0;
  87              		.loc 1 218 0
  88 0006 0023     		movs	r3, #0
  89 0008 FB60     		str	r3, [r7, #12]
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSION bit */
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  90              		.loc 1 221 0
  91 000a 494B     		ldr	r3, .L11
  92 000c 1B68     		ldr	r3, [r3]
  93 000e 484A     		ldr	r2, .L11
  94 0010 43F00103 		orr	r3, r3, #1
  95 0014 1360     		str	r3, [r2]
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure HSIRDY bit is set before writing default HSITRIM value */
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  96              		.loc 1 225 0
  97 0016 FFF7FEFF 		bl	HAL_GetTick
  98 001a F860     		str	r0, [r7, #12]
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Wait till HSI is ready */
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  99              		.loc 1 228 0
 100 001c 08E0     		b	.L2
 101              	.L4:
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 102              		.loc 1 230 0
 103 001e FFF7FEFF 		bl	HAL_GetTick
 104 0022 0246     		mov	r2, r0
 105 0024 FB68     		ldr	r3, [r7, #12]
 106 0026 D31A     		subs	r3, r2, r3
 107 0028 022B     		cmp	r3, #2
 108 002a 01D9     		bls	.L2
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 109              		.loc 1 232 0
 110 002c 0323     		movs	r3, #3
 111 002e 7BE0     		b	.L3
 112              	.L2:
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 113              		.loc 1 228 0
 114 0030 3F4B     		ldr	r3, .L11
ARM GAS  /tmp/ccs8nK3N.s 			page 7


 115 0032 1B68     		ldr	r3, [r3]
 116 0034 03F00203 		and	r3, r3, #2
 117 0038 002B     		cmp	r3, #0
 118 003a F0D0     		beq	.L4
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSITRIM default value */
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, RCC_CR_HSITRIM_4);
 119              		.loc 1 237 0
 120 003c 3C4B     		ldr	r3, .L11
 121 003e 1B68     		ldr	r3, [r3]
 122 0040 23F0F803 		bic	r3, r3, #248
 123 0044 3A4A     		ldr	r2, .L11
 124 0046 43F08003 		orr	r3, r3, #128
 125 004a 1360     		str	r3, [r2]
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0] and MCOSEL[2:0] bits */
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2 | RCC_CFGR_MCO
 126              		.loc 1 240 0
 127 004c 384B     		ldr	r3, .L11
 128 004e 5A68     		ldr	r2, [r3, #4]
 129 0050 3749     		ldr	r1, .L11
 130 0052 384B     		ldr	r3, .L11+4
 131 0054 1340     		ands	r3, r3, r2
 132 0056 4B60     		str	r3, [r1, #4]
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure HSI selected as system clock source */
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 133              		.loc 1 244 0
 134 0058 FFF7FEFF 		bl	HAL_GetTick
 135 005c F860     		str	r0, [r7, #12]
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Wait till system clock source is ready */
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
 136              		.loc 1 247 0
 137 005e 0AE0     		b	.L5
 138              	.L6:
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 139              		.loc 1 249 0
 140 0060 FFF7FEFF 		bl	HAL_GetTick
 141 0064 0246     		mov	r2, r0
 142 0066 FB68     		ldr	r3, [r7, #12]
 143 0068 D31A     		subs	r3, r2, r3
 144 006a 41F28832 		movw	r2, #5000
 145 006e 9342     		cmp	r3, r2
 146 0070 01D9     		bls	.L5
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 147              		.loc 1 251 0
 148 0072 0323     		movs	r3, #3
 149 0074 58E0     		b	.L3
 150              	.L5:
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 151              		.loc 1 247 0
ARM GAS  /tmp/ccs8nK3N.s 			page 8


 152 0076 2E4B     		ldr	r3, .L11
 153 0078 5B68     		ldr	r3, [r3, #4]
 154 007a 03F00C03 		and	r3, r3, #12
 155 007e 002B     		cmp	r3, #0
 156 0080 EED1     		bne	.L6
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable for HSI as system clock source */
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 157              		.loc 1 256 0
 158 0082 2D4B     		ldr	r3, .L11+8
 159 0084 2D4A     		ldr	r2, .L11+12
 160 0086 1A60     		str	r2, [r3]
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clock settings  */
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(HAL_InitTick(uwTickPrio) != HAL_OK)
 161              		.loc 1 259 0
 162 0088 2D4B     		ldr	r3, .L11+16
 163 008a 1B68     		ldr	r3, [r3]
 164 008c 1846     		mov	r0, r3
 165 008e FFF7FEFF 		bl	HAL_InitTick
 166 0092 0346     		mov	r3, r0
 167 0094 002B     		cmp	r3, #0
 168 0096 01D0     		beq	.L7
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 169              		.loc 1 261 0
 170 0098 0123     		movs	r3, #1
 171 009a 45E0     		b	.L3
 172              	.L7:
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
 173              		.loc 1 265 0
 174 009c 244B     		ldr	r3, .L11
 175 009e 1B68     		ldr	r3, [r3]
 176 00a0 234A     		ldr	r2, .L11
 177 00a2 23F08473 		bic	r3, r3, #17301504
 178 00a6 23F48033 		bic	r3, r3, #65536
 179 00aa 1360     		str	r3, [r2]
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 180              		.loc 1 268 0
 181 00ac 204B     		ldr	r3, .L11
 182 00ae 1B68     		ldr	r3, [r3]
 183 00b0 1F4A     		ldr	r2, .L11
 184 00b2 23F48023 		bic	r3, r3, #262144
 185 00b6 1360     		str	r3, [r2]
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure PLLRDY is reset */
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 186              		.loc 1 272 0
 187 00b8 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccs8nK3N.s 			page 9


 188 00bc F860     		str	r0, [r7, #12]
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 189              		.loc 1 273 0
 190 00be 08E0     		b	.L8
 191              	.L9:
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 192              		.loc 1 275 0
 193 00c0 FFF7FEFF 		bl	HAL_GetTick
 194 00c4 0246     		mov	r2, r0
 195 00c6 FB68     		ldr	r3, [r7, #12]
 196 00c8 D31A     		subs	r3, r2, r3
 197 00ca 022B     		cmp	r3, #2
 198 00cc 01D9     		bls	.L8
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 199              		.loc 1 277 0
 200 00ce 0323     		movs	r3, #3
 201 00d0 2AE0     		b	.L3
 202              	.L8:
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 203              		.loc 1 273 0
 204 00d2 174B     		ldr	r3, .L11
 205 00d4 1B68     		ldr	r3, [r3]
 206 00d6 03F00073 		and	r3, r3, #33554432
 207 00da 002B     		cmp	r3, #0
 208 00dc F0D1     		bne	.L9
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR register */
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 209              		.loc 1 282 0
 210 00de 144B     		ldr	r3, .L11
 211 00e0 0022     		movs	r2, #0
 212 00e2 5A60     		str	r2, [r3, #4]
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR2 register */
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 213              		.loc 1 285 0
 214 00e4 124B     		ldr	r3, .L11
 215 00e6 0022     		movs	r2, #0
 216 00e8 DA62     		str	r2, [r3, #44]
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR3 register */
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
 217              		.loc 1 288 0
 218 00ea 114B     		ldr	r3, .L11
 219 00ec 0022     		movs	r2, #0
 220 00ee 1A63     		str	r2, [r3, #48]
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Clear all interrupt flags */
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CIR, RCC_CIR_LSIRDYC | RCC_CIR_LSERDYC | RCC_CIR_HSIRDYC | RCC_CIR_HSERDYC | RCC_CIR
 221              		.loc 1 291 0
 222 00f0 0F4B     		ldr	r3, .L11
 223 00f2 9B68     		ldr	r3, [r3, #8]
 224 00f4 0E4A     		ldr	r2, .L11
ARM GAS  /tmp/ccs8nK3N.s 			page 10


 225 00f6 43F41F03 		orr	r3, r3, #10420224
 226 00fa 9360     		str	r3, [r2, #8]
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Disable all interrupts */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 227              		.loc 1 294 0
 228 00fc 0C4B     		ldr	r3, .L11
 229 00fe 0022     		movs	r2, #0
 230 0100 9A60     		str	r2, [r3, #8]
 231 0102 4FF08073 		mov	r3, #16777216
 232 0106 BB60     		str	r3, [r7, #8]
 233              	.LBB168:
 234              	.LBB169:
 235              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
ARM GAS  /tmp/ccs8nK3N.s 			page 11


  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
ARM GAS  /tmp/ccs8nK3N.s 			page 12


 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccs8nK3N.s 			page 13


 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccs8nK3N.s 			page 14


 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccs8nK3N.s 			page 15


 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
ARM GAS  /tmp/ccs8nK3N.s 			page 16


 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccs8nK3N.s 			page 17


 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccs8nK3N.s 			page 18


 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
ARM GAS  /tmp/ccs8nK3N.s 			page 19


 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccs8nK3N.s 			page 20


 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccs8nK3N.s 			page 21


 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccs8nK3N.s 			page 22


 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
ARM GAS  /tmp/ccs8nK3N.s 			page 23


 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccs8nK3N.s 			page 24


 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccs8nK3N.s 			page 25


 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  /tmp/ccs8nK3N.s 			page 26


 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccs8nK3N.s 			page 27


 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 236              		.loc 2 988 0
 237 0108 BB68     		ldr	r3, [r7, #8]
 238              		.syntax unified
 239              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 240 010a 93FAA3F3 		rbit r3, r3
 241              	@ 0 "" 2
 242              		.thumb
 243              		.syntax unified
 244 010e 7B60     		str	r3, [r7, #4]
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 245              		.loc 2 1001 0
 246 0110 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccs8nK3N.s 			page 28


 247              	.LBE169:
 248              	.LBE168:
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset all CSR flags */
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_CLEAR_RESET_FLAGS();
 249              		.loc 1 297 0
 250 0112 B3FA83F3 		clz	r3, r3
 251 0116 DBB2     		uxtb	r3, r3
 252 0118 1A46     		mov	r2, r3
 253 011a 0A4B     		ldr	r3, .L11+20
 254 011c 1344     		add	r3, r3, r2
 255 011e 9B00     		lsls	r3, r3, #2
 256 0120 1A46     		mov	r2, r3
 257 0122 0123     		movs	r3, #1
 258 0124 1360     		str	r3, [r2]
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 259              		.loc 1 299 0
 260 0126 0023     		movs	r3, #0
 261              	.L3:
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 262              		.loc 1 300 0
 263 0128 1846     		mov	r0, r3
 264 012a 1037     		adds	r7, r7, #16
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 8
 267 012c BD46     		mov	sp, r7
 268              	.LCFI4:
 269              		.cfi_def_cfa_register 13
 270              		@ sp needed
 271 012e 80BD     		pop	{r7, pc}
 272              	.L12:
 273              		.align	2
 274              	.L11:
 275 0130 00100240 		.word	1073876992
 276 0134 0CC0FFF8 		.word	-117456884
 277 0138 00000000 		.word	SystemCoreClock
 278 013c 00127A00 		.word	8000000
 279 0140 00000000 		.word	uwTickPrio
 280 0144 20819010 		.word	277905696
 281              		.cfi_endproc
 282              	.LFE130:
 284              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 285              		.align	1
 286              		.global	HAL_RCC_OscConfig
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 290              		.fpu fpv4-sp-d16
 292              	HAL_RCC_OscConfig:
 293              	.LFB131:
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
ARM GAS  /tmp/ccs8nK3N.s 			page 29


 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 294              		.loc 1 317 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 520
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298 0000 80B5     		push	{r7, lr}
 299              	.LCFI5:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 7, -8
 302              		.cfi_offset 14, -4
 303 0002 ADF5027D 		sub	sp, sp, #520
 304              	.LCFI6:
 305              		.cfi_def_cfa_offset 528
 306 0006 00AF     		add	r7, sp, #0
 307              	.LCFI7:
 308              		.cfi_def_cfa_register 7
 309 0008 3B1D     		adds	r3, r7, #4
 310 000a 1860     		str	r0, [r3]
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart;
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t pll_config;
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t pll_config2;
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check Null pointer */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 311              		.loc 1 325 0
 312 000c 3B1D     		adds	r3, r7, #4
 313 000e 1B68     		ldr	r3, [r3]
 314 0010 002B     		cmp	r3, #0
 315 0012 02D1     		bne	.L14
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 316              		.loc 1 327 0
 317 0014 0123     		movs	r3, #1
 318 0016 00F001BF 		b	.L15
 319              	.L14:
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 320              		.loc 1 334 0
 321 001a 3B1D     		adds	r3, r7, #4
 322 001c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccs8nK3N.s 			page 30


 323 001e 1B68     		ldr	r3, [r3]
 324 0020 03F00103 		and	r3, r3, #1
 325 0024 002B     		cmp	r3, #0
 326 0026 00F06081 		beq	.L16
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 327              		.loc 1 340 0
 328 002a AE4B     		ldr	r3, .L154
 329 002c 5B68     		ldr	r3, [r3, #4]
 330 002e 03F00C03 		and	r3, r3, #12
 331 0032 042B     		cmp	r3, #4
 332 0034 0CD0     		beq	.L17
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 333              		.loc 1 341 0
 334 0036 AB4B     		ldr	r3, .L154
 335 0038 5B68     		ldr	r3, [r3, #4]
 336 003a 03F00C03 		and	r3, r3, #12
 337 003e 082B     		cmp	r3, #8
 338 0040 59D1     		bne	.L18
 339              		.loc 1 341 0 is_stmt 0 discriminator 1
 340 0042 A84B     		ldr	r3, .L154
 341 0044 5B68     		ldr	r3, [r3, #4]
 342 0046 03F4C033 		and	r3, r3, #98304
 343 004a B3F5803F 		cmp	r3, #65536
 344 004e 52D1     		bne	.L18
 345              	.L17:
 346 0050 4FF40033 		mov	r3, #131072
 347 0054 C7F8F431 		str	r3, [r7, #500]
 348              	.LBB170:
 349              	.LBB171:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 350              		.loc 2 988 0 is_stmt 1
 351 0058 D7F8F431 		ldr	r3, [r7, #500]
 352              		.syntax unified
 353              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 354 005c 93FAA3F3 		rbit r3, r3
 355              	@ 0 "" 2
 356              		.thumb
 357              		.syntax unified
 358 0060 C7F8F031 		str	r3, [r7, #496]
 359              		.loc 2 1001 0
 360 0064 D7F8F031 		ldr	r3, [r7, #496]
 361              	.LBE171:
 362              	.LBE170:
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 363              		.loc 1 343 0
 364 0068 B3FA83F3 		clz	r3, r3
 365 006c DBB2     		uxtb	r3, r3
 366 006e 5B09     		lsrs	r3, r3, #5
 367 0070 DBB2     		uxtb	r3, r3
 368 0072 43F00103 		orr	r3, r3, #1
 369 0076 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccs8nK3N.s 			page 31


 370 0078 012B     		cmp	r3, #1
 371 007a 02D1     		bne	.L20
 372              		.loc 1 343 0 is_stmt 0 discriminator 1
 373 007c 994B     		ldr	r3, .L154
 374 007e 1B68     		ldr	r3, [r3]
 375 0080 15E0     		b	.L21
 376              	.L20:
 377 0082 4FF40033 		mov	r3, #131072
 378 0086 C7F8EC31 		str	r3, [r7, #492]
 379              	.LBB172:
 380              	.LBB173:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 381              		.loc 2 988 0 is_stmt 1 discriminator 2
 382 008a D7F8EC31 		ldr	r3, [r7, #492]
 383              		.syntax unified
 384              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 385 008e 93FAA3F3 		rbit r3, r3
 386              	@ 0 "" 2
 387              		.thumb
 388              		.syntax unified
 389 0092 C7F8E831 		str	r3, [r7, #488]
 390 0096 4FF40033 		mov	r3, #131072
 391 009a C7F8E431 		str	r3, [r7, #484]
 392              	.LBE173:
 393              	.LBE172:
 394              	.LBB174:
 395              	.LBB175:
 396 009e D7F8E431 		ldr	r3, [r7, #484]
 397              		.syntax unified
 398              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 399 00a2 93FAA3F3 		rbit r3, r3
 400              	@ 0 "" 2
 401              		.thumb
 402              		.syntax unified
 403 00a6 C7F8E031 		str	r3, [r7, #480]
 404              	.LBE175:
 405              	.LBE174:
 406              		.loc 1 343 0 discriminator 2
 407 00aa 8E4B     		ldr	r3, .L154
 408 00ac 5B6A     		ldr	r3, [r3, #36]
 409              	.L21:
 410 00ae 4FF40032 		mov	r2, #131072
 411 00b2 C7F8DC21 		str	r2, [r7, #476]
 412              	.LBB176:
 413              	.LBB177:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 414              		.loc 2 988 0 discriminator 12
 415 00b6 D7F8DC21 		ldr	r2, [r7, #476]
 416              		.syntax unified
 417              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 418 00ba 92FAA2F2 		rbit r2, r2
 419              	@ 0 "" 2
 420              		.thumb
 421              		.syntax unified
 422 00be C7F8D821 		str	r2, [r7, #472]
 423              		.loc 2 1001 0 discriminator 12
 424 00c2 D7F8D821 		ldr	r2, [r7, #472]
ARM GAS  /tmp/ccs8nK3N.s 			page 32


 425              	.LBE177:
 426              	.LBE176:
 427              		.loc 1 343 0 discriminator 12
 428 00c6 B2FA82F2 		clz	r2, r2
 429 00ca D2B2     		uxtb	r2, r2
 430 00cc 42F02002 		orr	r2, r2, #32
 431 00d0 D2B2     		uxtb	r2, r2
 432 00d2 02F01F02 		and	r2, r2, #31
 433 00d6 0121     		movs	r1, #1
 434 00d8 01FA02F2 		lsl	r2, r1, r2
 435 00dc 1340     		ands	r3, r3, r2
 436 00de 002B     		cmp	r3, #0
 437 00e0 00F00281 		beq	.L153
 438              		.loc 1 343 0 is_stmt 0 discriminator 13
 439 00e4 3B1D     		adds	r3, r7, #4
 440 00e6 1B68     		ldr	r3, [r3]
 441 00e8 5B68     		ldr	r3, [r3, #4]
 442 00ea 002B     		cmp	r3, #0
 443 00ec 40F0FC80 		bne	.L153
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 444              		.loc 1 345 0 is_stmt 1
 445 00f0 0123     		movs	r3, #1
 446 00f2 00F093BE 		b	.L15
 447              	.L18:
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 448              		.loc 1 351 0
 449 00f6 3B1D     		adds	r3, r7, #4
 450 00f8 1B68     		ldr	r3, [r3]
 451 00fa 5B68     		ldr	r3, [r3, #4]
 452 00fc B3F5803F 		cmp	r3, #65536
 453 0100 06D1     		bne	.L26
 454              		.loc 1 351 0 is_stmt 0 discriminator 1
 455 0102 784B     		ldr	r3, .L154
 456 0104 1B68     		ldr	r3, [r3]
 457 0106 774A     		ldr	r2, .L154
 458 0108 43F48033 		orr	r3, r3, #65536
 459 010c 1360     		str	r3, [r2]
 460 010e 30E0     		b	.L27
 461              	.L26:
 462              		.loc 1 351 0 discriminator 2
 463 0110 3B1D     		adds	r3, r7, #4
 464 0112 1B68     		ldr	r3, [r3]
 465 0114 5B68     		ldr	r3, [r3, #4]
 466 0116 002B     		cmp	r3, #0
 467 0118 0CD1     		bne	.L28
 468              		.loc 1 351 0 discriminator 3
 469 011a 724B     		ldr	r3, .L154
 470 011c 1B68     		ldr	r3, [r3]
 471 011e 714A     		ldr	r2, .L154
 472 0120 23F48033 		bic	r3, r3, #65536
 473 0124 1360     		str	r3, [r2]
ARM GAS  /tmp/ccs8nK3N.s 			page 33


 474 0126 6F4B     		ldr	r3, .L154
 475 0128 1B68     		ldr	r3, [r3]
 476 012a 6E4A     		ldr	r2, .L154
 477 012c 23F48023 		bic	r3, r3, #262144
 478 0130 1360     		str	r3, [r2]
 479 0132 1EE0     		b	.L27
 480              	.L28:
 481              		.loc 1 351 0 discriminator 4
 482 0134 3B1D     		adds	r3, r7, #4
 483 0136 1B68     		ldr	r3, [r3]
 484 0138 5B68     		ldr	r3, [r3, #4]
 485 013a B3F5A02F 		cmp	r3, #327680
 486 013e 0CD1     		bne	.L29
 487              		.loc 1 351 0 discriminator 5
 488 0140 684B     		ldr	r3, .L154
 489 0142 1B68     		ldr	r3, [r3]
 490 0144 674A     		ldr	r2, .L154
 491 0146 43F48023 		orr	r3, r3, #262144
 492 014a 1360     		str	r3, [r2]
 493 014c 654B     		ldr	r3, .L154
 494 014e 1B68     		ldr	r3, [r3]
 495 0150 644A     		ldr	r2, .L154
 496 0152 43F48033 		orr	r3, r3, #65536
 497 0156 1360     		str	r3, [r2]
 498 0158 0BE0     		b	.L27
 499              	.L29:
 500              		.loc 1 351 0 discriminator 6
 501 015a 624B     		ldr	r3, .L154
 502 015c 1B68     		ldr	r3, [r3]
 503 015e 614A     		ldr	r2, .L154
 504 0160 23F48033 		bic	r3, r3, #65536
 505 0164 1360     		str	r3, [r2]
 506 0166 5F4B     		ldr	r3, .L154
 507 0168 1B68     		ldr	r3, [r3]
 508 016a 5E4A     		ldr	r2, .L154
 509 016c 23F48023 		bic	r3, r3, #262144
 510 0170 1360     		str	r3, [r2]
 511              	.L27:
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the HSE predivision factor --------------------------------*/
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Check the HSE State */
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 512              		.loc 1 359 0 is_stmt 1
 513 0172 3B1D     		adds	r3, r7, #4
 514 0174 1B68     		ldr	r3, [r3]
 515 0176 5B68     		ldr	r3, [r3, #4]
 516 0178 002B     		cmp	r3, #0
 517 017a 59D0     		beq	.L30
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 518              		.loc 1 362 0
 519 017c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccs8nK3N.s 			page 34


 520 0180 C7F80002 		str	r0, [r7, #512]
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is ready */
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 521              		.loc 1 365 0
 522 0184 0AE0     		b	.L31
 523              	.L38:
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 524              		.loc 1 367 0
 525 0186 FFF7FEFF 		bl	HAL_GetTick
 526 018a 0246     		mov	r2, r0
 527 018c D7F80032 		ldr	r3, [r7, #512]
 528 0190 D31A     		subs	r3, r2, r3
 529 0192 642B     		cmp	r3, #100
 530 0194 02D9     		bls	.L31
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 531              		.loc 1 369 0
 532 0196 0323     		movs	r3, #3
 533 0198 00F040BE 		b	.L15
 534              	.L31:
 535 019c 4FF40033 		mov	r3, #131072
 536 01a0 C7F8D431 		str	r3, [r7, #468]
 537              	.LBB178:
 538              	.LBB179:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 539              		.loc 2 988 0
 540 01a4 D7F8D431 		ldr	r3, [r7, #468]
 541              		.syntax unified
 542              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 543 01a8 93FAA3F3 		rbit r3, r3
 544              	@ 0 "" 2
 545              		.thumb
 546              		.syntax unified
 547 01ac C7F8D031 		str	r3, [r7, #464]
 548              		.loc 2 1001 0
 549 01b0 D7F8D031 		ldr	r3, [r7, #464]
 550              	.LBE179:
 551              	.LBE178:
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 552              		.loc 1 365 0
 553 01b4 B3FA83F3 		clz	r3, r3
 554 01b8 DBB2     		uxtb	r3, r3
 555 01ba 5B09     		lsrs	r3, r3, #5
 556 01bc DBB2     		uxtb	r3, r3
 557 01be 43F00103 		orr	r3, r3, #1
 558 01c2 DBB2     		uxtb	r3, r3
 559 01c4 012B     		cmp	r3, #1
 560 01c6 02D1     		bne	.L33
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 561              		.loc 1 365 0 is_stmt 0 discriminator 1
 562 01c8 464B     		ldr	r3, .L154
 563 01ca 1B68     		ldr	r3, [r3]
 564 01cc 15E0     		b	.L34
 565              	.L33:
 566 01ce 4FF40033 		mov	r3, #131072
ARM GAS  /tmp/ccs8nK3N.s 			page 35


 567 01d2 C7F8CC31 		str	r3, [r7, #460]
 568              	.LBB180:
 569              	.LBB181:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 570              		.loc 2 988 0 is_stmt 1 discriminator 2
 571 01d6 D7F8CC31 		ldr	r3, [r7, #460]
 572              		.syntax unified
 573              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 574 01da 93FAA3F3 		rbit r3, r3
 575              	@ 0 "" 2
 576              		.thumb
 577              		.syntax unified
 578 01de C7F8C831 		str	r3, [r7, #456]
 579 01e2 4FF40033 		mov	r3, #131072
 580 01e6 C7F8C431 		str	r3, [r7, #452]
 581              	.LBE181:
 582              	.LBE180:
 583              	.LBB182:
 584              	.LBB183:
 585 01ea D7F8C431 		ldr	r3, [r7, #452]
 586              		.syntax unified
 587              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 588 01ee 93FAA3F3 		rbit r3, r3
 589              	@ 0 "" 2
 590              		.thumb
 591              		.syntax unified
 592 01f2 C7F8C031 		str	r3, [r7, #448]
 593              	.LBE183:
 594              	.LBE182:
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 595              		.loc 1 365 0 discriminator 2
 596 01f6 3B4B     		ldr	r3, .L154
 597 01f8 5B6A     		ldr	r3, [r3, #36]
 598              	.L34:
 599 01fa 4FF40032 		mov	r2, #131072
 600 01fe C7F8BC21 		str	r2, [r7, #444]
 601              	.LBB184:
 602              	.LBB185:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 603              		.loc 2 988 0 discriminator 12
 604 0202 D7F8BC21 		ldr	r2, [r7, #444]
 605              		.syntax unified
 606              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 607 0206 92FAA2F2 		rbit r2, r2
 608              	@ 0 "" 2
 609              		.thumb
 610              		.syntax unified
 611 020a C7F8B821 		str	r2, [r7, #440]
 612              		.loc 2 1001 0 discriminator 12
 613 020e D7F8B821 		ldr	r2, [r7, #440]
 614              	.LBE185:
 615              	.LBE184:
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 616              		.loc 1 365 0 discriminator 12
 617 0212 B2FA82F2 		clz	r2, r2
 618 0216 D2B2     		uxtb	r2, r2
 619 0218 42F02002 		orr	r2, r2, #32
ARM GAS  /tmp/ccs8nK3N.s 			page 36


 620 021c D2B2     		uxtb	r2, r2
 621 021e 02F01F02 		and	r2, r2, #31
 622 0222 0121     		movs	r1, #1
 623 0224 01FA02F2 		lsl	r2, r1, r2
 624 0228 1340     		ands	r3, r3, r2
 625 022a 002B     		cmp	r3, #0
 626 022c ABD0     		beq	.L38
 627 022e 5CE0     		b	.L16
 628              	.L30:
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 629              		.loc 1 376 0
 630 0230 FFF7FEFF 		bl	HAL_GetTick
 631 0234 C7F80002 		str	r0, [r7, #512]
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 632              		.loc 1 379 0
 633 0238 0AE0     		b	.L39
 634              	.L46:
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 635              		.loc 1 381 0
 636 023a FFF7FEFF 		bl	HAL_GetTick
 637 023e 0246     		mov	r2, r0
 638 0240 D7F80032 		ldr	r3, [r7, #512]
 639 0244 D31A     		subs	r3, r2, r3
 640 0246 642B     		cmp	r3, #100
 641 0248 02D9     		bls	.L39
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 642              		.loc 1 383 0
 643 024a 0323     		movs	r3, #3
 644 024c 00F0E6BD 		b	.L15
 645              	.L39:
 646 0250 4FF40033 		mov	r3, #131072
 647 0254 C7F8B431 		str	r3, [r7, #436]
 648              	.LBB186:
 649              	.LBB187:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 650              		.loc 2 988 0
 651 0258 D7F8B431 		ldr	r3, [r7, #436]
 652              		.syntax unified
 653              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 654 025c 93FAA3F3 		rbit r3, r3
 655              	@ 0 "" 2
 656              		.thumb
 657              		.syntax unified
 658 0260 C7F8B031 		str	r3, [r7, #432]
 659              		.loc 2 1001 0
 660 0264 D7F8B031 		ldr	r3, [r7, #432]
 661              	.LBE187:
ARM GAS  /tmp/ccs8nK3N.s 			page 37


 662              	.LBE186:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 663              		.loc 1 379 0
 664 0268 B3FA83F3 		clz	r3, r3
 665 026c DBB2     		uxtb	r3, r3
 666 026e 5B09     		lsrs	r3, r3, #5
 667 0270 DBB2     		uxtb	r3, r3
 668 0272 43F00103 		orr	r3, r3, #1
 669 0276 DBB2     		uxtb	r3, r3
 670 0278 012B     		cmp	r3, #1
 671 027a 02D1     		bne	.L41
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 672              		.loc 1 379 0 is_stmt 0 discriminator 1
 673 027c 194B     		ldr	r3, .L154
 674 027e 1B68     		ldr	r3, [r3]
 675 0280 15E0     		b	.L42
 676              	.L41:
 677 0282 4FF40033 		mov	r3, #131072
 678 0286 C7F8AC31 		str	r3, [r7, #428]
 679              	.LBB188:
 680              	.LBB189:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 681              		.loc 2 988 0 is_stmt 1 discriminator 2
 682 028a D7F8AC31 		ldr	r3, [r7, #428]
 683              		.syntax unified
 684              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 685 028e 93FAA3F3 		rbit r3, r3
 686              	@ 0 "" 2
 687              		.thumb
 688              		.syntax unified
 689 0292 C7F8A831 		str	r3, [r7, #424]
 690 0296 4FF40033 		mov	r3, #131072
 691 029a C7F8A431 		str	r3, [r7, #420]
 692              	.LBE189:
 693              	.LBE188:
 694              	.LBB190:
 695              	.LBB191:
 696 029e D7F8A431 		ldr	r3, [r7, #420]
 697              		.syntax unified
 698              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 699 02a2 93FAA3F3 		rbit r3, r3
 700              	@ 0 "" 2
 701              		.thumb
 702              		.syntax unified
 703 02a6 C7F8A031 		str	r3, [r7, #416]
 704              	.LBE191:
 705              	.LBE190:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 706              		.loc 1 379 0 discriminator 2
 707 02aa 0E4B     		ldr	r3, .L154
 708 02ac 5B6A     		ldr	r3, [r3, #36]
 709              	.L42:
 710 02ae 4FF40032 		mov	r2, #131072
 711 02b2 C7F89C21 		str	r2, [r7, #412]
 712              	.LBB192:
 713              	.LBB193:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccs8nK3N.s 			page 38


 714              		.loc 2 988 0 discriminator 12
 715 02b6 D7F89C21 		ldr	r2, [r7, #412]
 716              		.syntax unified
 717              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 718 02ba 92FAA2F2 		rbit r2, r2
 719              	@ 0 "" 2
 720              		.thumb
 721              		.syntax unified
 722 02be C7F89821 		str	r2, [r7, #408]
 723              		.loc 2 1001 0 discriminator 12
 724 02c2 D7F89821 		ldr	r2, [r7, #408]
 725              	.LBE193:
 726              	.LBE192:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 727              		.loc 1 379 0 discriminator 12
 728 02c6 B2FA82F2 		clz	r2, r2
 729 02ca D2B2     		uxtb	r2, r2
 730 02cc 42F02002 		orr	r2, r2, #32
 731 02d0 D2B2     		uxtb	r2, r2
 732 02d2 02F01F02 		and	r2, r2, #31
 733 02d6 0121     		movs	r1, #1
 734 02d8 01FA02F2 		lsl	r2, r1, r2
 735 02dc 1340     		ands	r3, r3, r2
 736 02de 002B     		cmp	r3, #0
 737 02e0 ABD1     		bne	.L46
 738 02e2 02E0     		b	.L16
 739              	.L155:
 740              		.align	2
 741              	.L154:
 742 02e4 00100240 		.word	1073876992
 743              	.L153:
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 744              		.loc 1 343 0
 745 02e8 00BF     		nop
 746              	.L16:
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 747              		.loc 1 390 0
 748 02ea 3B1D     		adds	r3, r7, #4
 749 02ec 1B68     		ldr	r3, [r3]
 750 02ee 1B68     		ldr	r3, [r3]
 751 02f0 03F00203 		and	r3, r3, #2
 752 02f4 002B     		cmp	r3, #0
 753 02f6 00F07081 		beq	.L47
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 754              		.loc 1 397 0
ARM GAS  /tmp/ccs8nK3N.s 			page 39


 755 02fa D04B     		ldr	r3, .L156
 756 02fc 5B68     		ldr	r3, [r3, #4]
 757 02fe 03F00C03 		and	r3, r3, #12
 758 0302 002B     		cmp	r3, #0
 759 0304 0CD0     		beq	.L48
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 760              		.loc 1 398 0
 761 0306 CD4B     		ldr	r3, .L156
 762 0308 5B68     		ldr	r3, [r3, #4]
 763 030a 03F00C03 		and	r3, r3, #12
 764 030e 082B     		cmp	r3, #8
 765 0310 6DD1     		bne	.L49
 766              		.loc 1 398 0 is_stmt 0 discriminator 1
 767 0312 CA4B     		ldr	r3, .L156
 768 0314 5B68     		ldr	r3, [r3, #4]
 769 0316 03F4C033 		and	r3, r3, #98304
 770 031a B3F5004F 		cmp	r3, #32768
 771 031e 66D1     		bne	.L49
 772              	.L48:
 773 0320 0223     		movs	r3, #2
 774 0322 C7F89431 		str	r3, [r7, #404]
 775              	.LBB194:
 776              	.LBB195:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 777              		.loc 2 988 0 is_stmt 1
 778 0326 D7F89431 		ldr	r3, [r7, #404]
 779              		.syntax unified
 780              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 781 032a 93FAA3F3 		rbit r3, r3
 782              	@ 0 "" 2
 783              		.thumb
 784              		.syntax unified
 785 032e C7F89031 		str	r3, [r7, #400]
 786              		.loc 2 1001 0
 787 0332 D7F89031 		ldr	r3, [r7, #400]
 788              	.LBE195:
 789              	.LBE194:
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 790              		.loc 1 401 0
 791 0336 B3FA83F3 		clz	r3, r3
 792 033a DBB2     		uxtb	r3, r3
 793 033c 5B09     		lsrs	r3, r3, #5
 794 033e DBB2     		uxtb	r3, r3
 795 0340 43F00103 		orr	r3, r3, #1
 796 0344 DBB2     		uxtb	r3, r3
 797 0346 012B     		cmp	r3, #1
 798 0348 02D1     		bne	.L51
 799              		.loc 1 401 0 is_stmt 0 discriminator 1
 800 034a BC4B     		ldr	r3, .L156
 801 034c 1B68     		ldr	r3, [r3]
 802 034e 13E0     		b	.L52
 803              	.L51:
 804 0350 0223     		movs	r3, #2
 805 0352 C7F88C31 		str	r3, [r7, #396]
 806              	.LBB196:
ARM GAS  /tmp/ccs8nK3N.s 			page 40


 807              	.LBB197:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 808              		.loc 2 988 0 is_stmt 1 discriminator 2
 809 0356 D7F88C31 		ldr	r3, [r7, #396]
 810              		.syntax unified
 811              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 812 035a 93FAA3F3 		rbit r3, r3
 813              	@ 0 "" 2
 814              		.thumb
 815              		.syntax unified
 816 035e C7F88831 		str	r3, [r7, #392]
 817 0362 0223     		movs	r3, #2
 818 0364 C7F88431 		str	r3, [r7, #388]
 819              	.LBE197:
 820              	.LBE196:
 821              	.LBB198:
 822              	.LBB199:
 823 0368 D7F88431 		ldr	r3, [r7, #388]
 824              		.syntax unified
 825              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 826 036c 93FAA3F3 		rbit r3, r3
 827              	@ 0 "" 2
 828              		.thumb
 829              		.syntax unified
 830 0370 C7F88031 		str	r3, [r7, #384]
 831              	.LBE199:
 832              	.LBE198:
 833              		.loc 1 401 0 discriminator 2
 834 0374 B14B     		ldr	r3, .L156
 835 0376 5B6A     		ldr	r3, [r3, #36]
 836              	.L52:
 837 0378 0222     		movs	r2, #2
 838 037a C7F87C21 		str	r2, [r7, #380]
 839              	.LBB200:
 840              	.LBB201:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 841              		.loc 2 988 0 discriminator 12
 842 037e D7F87C21 		ldr	r2, [r7, #380]
 843              		.syntax unified
 844              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 845 0382 92FAA2F2 		rbit r2, r2
 846              	@ 0 "" 2
 847              		.thumb
 848              		.syntax unified
 849 0386 C7F87821 		str	r2, [r7, #376]
 850              		.loc 2 1001 0 discriminator 12
 851 038a D7F87821 		ldr	r2, [r7, #376]
 852              	.LBE201:
 853              	.LBE200:
 854              		.loc 1 401 0 discriminator 12
 855 038e B2FA82F2 		clz	r2, r2
 856 0392 D2B2     		uxtb	r2, r2
 857 0394 42F02002 		orr	r2, r2, #32
 858 0398 D2B2     		uxtb	r2, r2
 859 039a 02F01F02 		and	r2, r2, #31
 860 039e 0121     		movs	r1, #1
 861 03a0 01FA02F2 		lsl	r2, r1, r2
ARM GAS  /tmp/ccs8nK3N.s 			page 41


 862 03a4 1340     		ands	r3, r3, r2
 863 03a6 002B     		cmp	r3, #0
 864 03a8 07D0     		beq	.L56
 865              		.loc 1 401 0 is_stmt 0 discriminator 13
 866 03aa 3B1D     		adds	r3, r7, #4
 867 03ac 1B68     		ldr	r3, [r3]
 868 03ae DB68     		ldr	r3, [r3, #12]
 869 03b0 012B     		cmp	r3, #1
 870 03b2 02D0     		beq	.L56
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 871              		.loc 1 403 0 is_stmt 1
 872 03b4 0123     		movs	r3, #1
 873 03b6 00F031BD 		b	.L15
 874              	.L56:
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 875              		.loc 1 409 0
 876 03ba A04B     		ldr	r3, .L156
 877 03bc 1B68     		ldr	r3, [r3]
 878 03be 23F0F802 		bic	r2, r3, #248
 879 03c2 3B1D     		adds	r3, r7, #4
 880 03c4 1B68     		ldr	r3, [r3]
 881 03c6 1B69     		ldr	r3, [r3, #16]
 882 03c8 F821     		movs	r1, #248
 883 03ca C7F87411 		str	r1, [r7, #372]
 884              	.LBB202:
 885              	.LBB203:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 886              		.loc 2 988 0
 887 03ce D7F87411 		ldr	r1, [r7, #372]
 888              		.syntax unified
 889              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 890 03d2 91FAA1F1 		rbit r1, r1
 891              	@ 0 "" 2
 892              		.thumb
 893              		.syntax unified
 894 03d6 C7F87011 		str	r1, [r7, #368]
 895              		.loc 2 1001 0
 896 03da D7F87011 		ldr	r1, [r7, #368]
 897              	.LBE203:
 898              	.LBE202:
 899              		.loc 1 409 0
 900 03de B1FA81F1 		clz	r1, r1
 901 03e2 C9B2     		uxtb	r1, r1
 902 03e4 8B40     		lsls	r3, r3, r1
 903 03e6 9549     		ldr	r1, .L156
 904 03e8 1343     		orrs	r3, r3, r2
 905 03ea 0B60     		str	r3, [r1]
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 906              		.loc 1 401 0
 907 03ec F5E0     		b	.L47
 908              	.L49:
ARM GAS  /tmp/ccs8nK3N.s 			page 42


 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI State */
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 909              		.loc 1 415 0
 910 03ee 3B1D     		adds	r3, r7, #4
 911 03f0 1B68     		ldr	r3, [r3]
 912 03f2 DB68     		ldr	r3, [r3, #12]
 913 03f4 002B     		cmp	r3, #0
 914 03f6 00F08580 		beq	.L58
 915 03fa 0123     		movs	r3, #1
 916 03fc C7F86C31 		str	r3, [r7, #364]
 917              	.LBB204:
 918              	.LBB205:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 919              		.loc 2 988 0
 920 0400 D7F86C31 		ldr	r3, [r7, #364]
 921              		.syntax unified
 922              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 923 0404 93FAA3F3 		rbit r3, r3
 924              	@ 0 "" 2
 925              		.thumb
 926              		.syntax unified
 927 0408 C7F86831 		str	r3, [r7, #360]
 928              		.loc 2 1001 0
 929 040c D7F86831 		ldr	r3, [r7, #360]
 930              	.LBE205:
 931              	.LBE204:
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 932              		.loc 1 418 0
 933 0410 B3FA83F3 		clz	r3, r3
 934 0414 DBB2     		uxtb	r3, r3
 935 0416 03F18453 		add	r3, r3, #276824064
 936 041a 03F58413 		add	r3, r3, #1081344
 937 041e 9B00     		lsls	r3, r3, #2
 938 0420 1A46     		mov	r2, r3
 939 0422 0123     		movs	r3, #1
 940 0424 1360     		str	r3, [r2]
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 941              		.loc 1 421 0
 942 0426 FFF7FEFF 		bl	HAL_GetTick
 943 042a C7F80002 		str	r0, [r7, #512]
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is ready */
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 944              		.loc 1 424 0
 945 042e 0AE0     		b	.L60
 946              	.L67:
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 947              		.loc 1 426 0
ARM GAS  /tmp/ccs8nK3N.s 			page 43


 948 0430 FFF7FEFF 		bl	HAL_GetTick
 949 0434 0246     		mov	r2, r0
 950 0436 D7F80032 		ldr	r3, [r7, #512]
 951 043a D31A     		subs	r3, r2, r3
 952 043c 022B     		cmp	r3, #2
 953 043e 02D9     		bls	.L60
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 954              		.loc 1 428 0
 955 0440 0323     		movs	r3, #3
 956 0442 00F0EBBC 		b	.L15
 957              	.L60:
 958 0446 0223     		movs	r3, #2
 959 0448 C7F86431 		str	r3, [r7, #356]
 960              	.LBB206:
 961              	.LBB207:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 962              		.loc 2 988 0
 963 044c D7F86431 		ldr	r3, [r7, #356]
 964              		.syntax unified
 965              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 966 0450 93FAA3F3 		rbit r3, r3
 967              	@ 0 "" 2
 968              		.thumb
 969              		.syntax unified
 970 0454 C7F86031 		str	r3, [r7, #352]
 971              		.loc 2 1001 0
 972 0458 D7F86031 		ldr	r3, [r7, #352]
 973              	.LBE207:
 974              	.LBE206:
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 975              		.loc 1 424 0
 976 045c B3FA83F3 		clz	r3, r3
 977 0460 DBB2     		uxtb	r3, r3
 978 0462 5B09     		lsrs	r3, r3, #5
 979 0464 DBB2     		uxtb	r3, r3
 980 0466 43F00103 		orr	r3, r3, #1
 981 046a DBB2     		uxtb	r3, r3
 982 046c 012B     		cmp	r3, #1
 983 046e 02D1     		bne	.L62
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 984              		.loc 1 424 0 is_stmt 0 discriminator 1
 985 0470 724B     		ldr	r3, .L156
 986 0472 1B68     		ldr	r3, [r3]
 987 0474 13E0     		b	.L63
 988              	.L62:
 989 0476 0223     		movs	r3, #2
 990 0478 C7F85C31 		str	r3, [r7, #348]
 991              	.LBB208:
 992              	.LBB209:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 993              		.loc 2 988 0 is_stmt 1 discriminator 2
 994 047c D7F85C31 		ldr	r3, [r7, #348]
 995              		.syntax unified
 996              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 997 0480 93FAA3F3 		rbit r3, r3
 998              	@ 0 "" 2
ARM GAS  /tmp/ccs8nK3N.s 			page 44


 999              		.thumb
 1000              		.syntax unified
 1001 0484 C7F85831 		str	r3, [r7, #344]
 1002 0488 0223     		movs	r3, #2
 1003 048a C7F85431 		str	r3, [r7, #340]
 1004              	.LBE209:
 1005              	.LBE208:
 1006              	.LBB210:
 1007              	.LBB211:
 1008 048e D7F85431 		ldr	r3, [r7, #340]
 1009              		.syntax unified
 1010              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1011 0492 93FAA3F3 		rbit r3, r3
 1012              	@ 0 "" 2
 1013              		.thumb
 1014              		.syntax unified
 1015 0496 C7F85031 		str	r3, [r7, #336]
 1016              	.LBE211:
 1017              	.LBE210:
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1018              		.loc 1 424 0 discriminator 2
 1019 049a 684B     		ldr	r3, .L156
 1020 049c 5B6A     		ldr	r3, [r3, #36]
 1021              	.L63:
 1022 049e 0222     		movs	r2, #2
 1023 04a0 C7F84C21 		str	r2, [r7, #332]
 1024              	.LBB212:
 1025              	.LBB213:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1026              		.loc 2 988 0 discriminator 12
 1027 04a4 D7F84C21 		ldr	r2, [r7, #332]
 1028              		.syntax unified
 1029              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1030 04a8 92FAA2F2 		rbit r2, r2
 1031              	@ 0 "" 2
 1032              		.thumb
 1033              		.syntax unified
 1034 04ac C7F84821 		str	r2, [r7, #328]
 1035              		.loc 2 1001 0 discriminator 12
 1036 04b0 D7F84821 		ldr	r2, [r7, #328]
 1037              	.LBE213:
 1038              	.LBE212:
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1039              		.loc 1 424 0 discriminator 12
 1040 04b4 B2FA82F2 		clz	r2, r2
 1041 04b8 D2B2     		uxtb	r2, r2
 1042 04ba 42F02002 		orr	r2, r2, #32
 1043 04be D2B2     		uxtb	r2, r2
 1044 04c0 02F01F02 		and	r2, r2, #31
 1045 04c4 0121     		movs	r1, #1
 1046 04c6 01FA02F2 		lsl	r2, r1, r2
 1047 04ca 1340     		ands	r3, r3, r2
 1048 04cc 002B     		cmp	r3, #0
 1049 04ce AFD0     		beq	.L67
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                 
ARM GAS  /tmp/ccs8nK3N.s 			page 45


 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 1050              		.loc 1 433 0
 1051 04d0 5A4B     		ldr	r3, .L156
 1052 04d2 1B68     		ldr	r3, [r3]
 1053 04d4 23F0F802 		bic	r2, r3, #248
 1054 04d8 3B1D     		adds	r3, r7, #4
 1055 04da 1B68     		ldr	r3, [r3]
 1056 04dc 1B69     		ldr	r3, [r3, #16]
 1057 04de F821     		movs	r1, #248
 1058 04e0 C7F84411 		str	r1, [r7, #324]
 1059              	.LBB214:
 1060              	.LBB215:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1061              		.loc 2 988 0
 1062 04e4 D7F84411 		ldr	r1, [r7, #324]
 1063              		.syntax unified
 1064              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1065 04e8 91FAA1F1 		rbit r1, r1
 1066              	@ 0 "" 2
 1067              		.thumb
 1068              		.syntax unified
 1069 04ec C7F84011 		str	r1, [r7, #320]
 1070              		.loc 2 1001 0
 1071 04f0 D7F84011 		ldr	r1, [r7, #320]
 1072              	.LBE215:
 1073              	.LBE214:
 1074              		.loc 1 433 0
 1075 04f4 B1FA81F1 		clz	r1, r1
 1076 04f8 C9B2     		uxtb	r1, r1
 1077 04fa 8B40     		lsls	r3, r3, r1
 1078 04fc 4F49     		ldr	r1, .L156
 1079 04fe 1343     		orrs	r3, r3, r2
 1080 0500 0B60     		str	r3, [r1]
 1081 0502 6AE0     		b	.L47
 1082              	.L58:
 1083 0504 0123     		movs	r3, #1
 1084 0506 C7F83C31 		str	r3, [r7, #316]
 1085              	.LBB216:
 1086              	.LBB217:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1087              		.loc 2 988 0
 1088 050a D7F83C31 		ldr	r3, [r7, #316]
 1089              		.syntax unified
 1090              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1091 050e 93FAA3F3 		rbit r3, r3
 1092              	@ 0 "" 2
 1093              		.thumb
 1094              		.syntax unified
 1095 0512 C7F83831 		str	r3, [r7, #312]
 1096              		.loc 2 1001 0
 1097 0516 D7F83831 		ldr	r3, [r7, #312]
 1098              	.LBE217:
 1099              	.LBE216:
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccs8nK3N.s 			page 46


 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 1100              		.loc 1 438 0
 1101 051a B3FA83F3 		clz	r3, r3
 1102 051e DBB2     		uxtb	r3, r3
 1103 0520 03F18453 		add	r3, r3, #276824064
 1104 0524 03F58413 		add	r3, r3, #1081344
 1105 0528 9B00     		lsls	r3, r3, #2
 1106 052a 1A46     		mov	r2, r3
 1107 052c 0023     		movs	r3, #0
 1108 052e 1360     		str	r3, [r2]
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1109              		.loc 1 441 0
 1110 0530 FFF7FEFF 		bl	HAL_GetTick
 1111 0534 C7F80002 		str	r0, [r7, #512]
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 1112              		.loc 1 444 0
 1113 0538 0AE0     		b	.L70
 1114              	.L77:
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 1115              		.loc 1 446 0
 1116 053a FFF7FEFF 		bl	HAL_GetTick
 1117 053e 0246     		mov	r2, r0
 1118 0540 D7F80032 		ldr	r3, [r7, #512]
 1119 0544 D31A     		subs	r3, r2, r3
 1120 0546 022B     		cmp	r3, #2
 1121 0548 02D9     		bls	.L70
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1122              		.loc 1 448 0
 1123 054a 0323     		movs	r3, #3
 1124 054c 00F066BC 		b	.L15
 1125              	.L70:
 1126 0550 0223     		movs	r3, #2
 1127 0552 C7F83431 		str	r3, [r7, #308]
 1128              	.LBB218:
 1129              	.LBB219:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1130              		.loc 2 988 0
 1131 0556 D7F83431 		ldr	r3, [r7, #308]
 1132              		.syntax unified
 1133              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1134 055a 93FAA3F3 		rbit r3, r3
 1135              	@ 0 "" 2
 1136              		.thumb
 1137              		.syntax unified
 1138 055e C7F83031 		str	r3, [r7, #304]
 1139              		.loc 2 1001 0
 1140 0562 D7F83031 		ldr	r3, [r7, #304]
 1141              	.LBE219:
 1142              	.LBE218:
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccs8nK3N.s 			page 47


 1143              		.loc 1 444 0
 1144 0566 B3FA83F3 		clz	r3, r3
 1145 056a DBB2     		uxtb	r3, r3
 1146 056c 5B09     		lsrs	r3, r3, #5
 1147 056e DBB2     		uxtb	r3, r3
 1148 0570 43F00103 		orr	r3, r3, #1
 1149 0574 DBB2     		uxtb	r3, r3
 1150 0576 012B     		cmp	r3, #1
 1151 0578 02D1     		bne	.L72
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1152              		.loc 1 444 0 is_stmt 0 discriminator 1
 1153 057a 304B     		ldr	r3, .L156
 1154 057c 1B68     		ldr	r3, [r3]
 1155 057e 13E0     		b	.L73
 1156              	.L72:
 1157 0580 0223     		movs	r3, #2
 1158 0582 C7F82C31 		str	r3, [r7, #300]
 1159              	.LBB220:
 1160              	.LBB221:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1161              		.loc 2 988 0 is_stmt 1 discriminator 2
 1162 0586 D7F82C31 		ldr	r3, [r7, #300]
 1163              		.syntax unified
 1164              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1165 058a 93FAA3F3 		rbit r3, r3
 1166              	@ 0 "" 2
 1167              		.thumb
 1168              		.syntax unified
 1169 058e C7F82831 		str	r3, [r7, #296]
 1170 0592 0223     		movs	r3, #2
 1171 0594 C7F82431 		str	r3, [r7, #292]
 1172              	.LBE221:
 1173              	.LBE220:
 1174              	.LBB222:
 1175              	.LBB223:
 1176 0598 D7F82431 		ldr	r3, [r7, #292]
 1177              		.syntax unified
 1178              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1179 059c 93FAA3F3 		rbit r3, r3
 1180              	@ 0 "" 2
 1181              		.thumb
 1182              		.syntax unified
 1183 05a0 C7F82031 		str	r3, [r7, #288]
 1184              	.LBE223:
 1185              	.LBE222:
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1186              		.loc 1 444 0 discriminator 2
 1187 05a4 254B     		ldr	r3, .L156
 1188 05a6 5B6A     		ldr	r3, [r3, #36]
 1189              	.L73:
 1190 05a8 0222     		movs	r2, #2
 1191 05aa C7F81C21 		str	r2, [r7, #284]
 1192              	.LBB224:
 1193              	.LBB225:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1194              		.loc 2 988 0 discriminator 12
 1195 05ae D7F81C21 		ldr	r2, [r7, #284]
ARM GAS  /tmp/ccs8nK3N.s 			page 48


 1196              		.syntax unified
 1197              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1198 05b2 92FAA2F2 		rbit r2, r2
 1199              	@ 0 "" 2
 1200              		.thumb
 1201              		.syntax unified
 1202 05b6 C7F81821 		str	r2, [r7, #280]
 1203              		.loc 2 1001 0 discriminator 12
 1204 05ba D7F81821 		ldr	r2, [r7, #280]
 1205              	.LBE225:
 1206              	.LBE224:
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1207              		.loc 1 444 0 discriminator 12
 1208 05be B2FA82F2 		clz	r2, r2
 1209 05c2 D2B2     		uxtb	r2, r2
 1210 05c4 42F02002 		orr	r2, r2, #32
 1211 05c8 D2B2     		uxtb	r2, r2
 1212 05ca 02F01F02 		and	r2, r2, #31
 1213 05ce 0121     		movs	r1, #1
 1214 05d0 01FA02F2 		lsl	r2, r1, r2
 1215 05d4 1340     		ands	r3, r3, r2
 1216 05d6 002B     		cmp	r3, #0
 1217 05d8 AFD1     		bne	.L77
 1218              	.L47:
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 1219              		.loc 1 455 0
 1220 05da 3B1D     		adds	r3, r7, #4
 1221 05dc 1B68     		ldr	r3, [r3]
 1222 05de 1B68     		ldr	r3, [r3]
 1223 05e0 03F00803 		and	r3, r3, #8
 1224 05e4 002B     		cmp	r3, #0
 1225 05e6 00F0DA80 		beq	.L78
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSI State */
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 1226              		.loc 1 461 0
 1227 05ea 3B1D     		adds	r3, r7, #4
 1228 05ec 1B68     		ldr	r3, [r3]
 1229 05ee 5B69     		ldr	r3, [r3, #20]
 1230 05f0 002B     		cmp	r3, #0
 1231 05f2 69D0     		beq	.L79
 1232 05f4 0123     		movs	r3, #1
 1233 05f6 C7F81431 		str	r3, [r7, #276]
 1234              	.LBB226:
 1235              	.LBB227:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1236              		.loc 2 988 0
 1237 05fa D7F81431 		ldr	r3, [r7, #276]
ARM GAS  /tmp/ccs8nK3N.s 			page 49


 1238              		.syntax unified
 1239              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1240 05fe 93FAA3F3 		rbit r3, r3
 1241              	@ 0 "" 2
 1242              		.thumb
 1243              		.syntax unified
 1244 0602 C7F81031 		str	r3, [r7, #272]
 1245              		.loc 2 1001 0
 1246 0606 D7F81031 		ldr	r3, [r7, #272]
 1247              	.LBE227:
 1248              	.LBE226:
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 1249              		.loc 1 464 0
 1250 060a B3FA83F3 		clz	r3, r3
 1251 060e DBB2     		uxtb	r3, r3
 1252 0610 1A46     		mov	r2, r3
 1253 0612 0B4B     		ldr	r3, .L156+4
 1254 0614 1344     		add	r3, r3, r2
 1255 0616 9B00     		lsls	r3, r3, #2
 1256 0618 1A46     		mov	r2, r3
 1257 061a 0123     		movs	r3, #1
 1258 061c 1360     		str	r3, [r2]
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1259              		.loc 1 467 0
 1260 061e FFF7FEFF 		bl	HAL_GetTick
 1261 0622 C7F80002 		str	r0, [r7, #512]
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 1262              		.loc 1 470 0
 1263 0626 0DE0     		b	.L81
 1264              	.L86:
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 1265              		.loc 1 472 0
 1266 0628 FFF7FEFF 		bl	HAL_GetTick
 1267 062c 0246     		mov	r2, r0
 1268 062e D7F80032 		ldr	r3, [r7, #512]
 1269 0632 D31A     		subs	r3, r2, r3
 1270 0634 022B     		cmp	r3, #2
 1271 0636 05D9     		bls	.L81
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1272              		.loc 1 474 0
 1273 0638 0323     		movs	r3, #3
 1274 063a EFE3     		b	.L15
 1275              	.L157:
 1276              		.align	2
 1277              	.L156:
 1278 063c 00100240 		.word	1073876992
 1279 0640 20819010 		.word	277905696
 1280              	.L81:
 1281 0644 0223     		movs	r3, #2
ARM GAS  /tmp/ccs8nK3N.s 			page 50


 1282 0646 C7F80C31 		str	r3, [r7, #268]
 1283              	.LBB228:
 1284              	.LBB229:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1285              		.loc 2 988 0
 1286 064a D7F80C31 		ldr	r3, [r7, #268]
 1287              		.syntax unified
 1288              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1289 064e 93FAA3F2 		rbit r2, r3
 1290              	@ 0 "" 2
 1291              		.thumb
 1292              		.syntax unified
 1293 0652 07F58473 		add	r3, r7, #264
 1294 0656 1A60     		str	r2, [r3]
 1295 0658 07F58273 		add	r3, r7, #260
 1296 065c 0222     		movs	r2, #2
 1297 065e 1A60     		str	r2, [r3]
 1298              	.LBE229:
 1299              	.LBE228:
 1300              	.LBB230:
 1301              	.LBB231:
 1302 0660 07F58273 		add	r3, r7, #260
 1303 0664 1B68     		ldr	r3, [r3]
 1304              		.syntax unified
 1305              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1306 0666 93FAA3F2 		rbit r2, r3
 1307              	@ 0 "" 2
 1308              		.thumb
 1309              		.syntax unified
 1310 066a 07F58073 		add	r3, r7, #256
 1311 066e 1A60     		str	r2, [r3]
 1312 0670 07F1FC03 		add	r3, r7, #252
 1313 0674 0222     		movs	r2, #2
 1314 0676 1A60     		str	r2, [r3]
 1315              	.LBE231:
 1316              	.LBE230:
 1317              	.LBB232:
 1318              	.LBB233:
 1319 0678 07F1FC03 		add	r3, r7, #252
 1320 067c 1B68     		ldr	r3, [r3]
 1321              		.syntax unified
 1322              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1323 067e 93FAA3F2 		rbit r2, r3
 1324              	@ 0 "" 2
 1325              		.thumb
 1326              		.syntax unified
 1327 0682 07F1F803 		add	r3, r7, #248
 1328 0686 1A60     		str	r2, [r3]
 1329              	.LBE233:
 1330              	.LBE232:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1331              		.loc 1 470 0
 1332 0688 A44B     		ldr	r3, .L158
 1333 068a 5A6A     		ldr	r2, [r3, #36]
 1334 068c 07F1F403 		add	r3, r7, #244
 1335 0690 0221     		movs	r1, #2
 1336 0692 1960     		str	r1, [r3]
ARM GAS  /tmp/ccs8nK3N.s 			page 51


 1337              	.LBB234:
 1338              	.LBB235:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1339              		.loc 2 988 0
 1340 0694 07F1F403 		add	r3, r7, #244
 1341 0698 1B68     		ldr	r3, [r3]
 1342              		.syntax unified
 1343              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1344 069a 93FAA3F1 		rbit r1, r3
 1345              	@ 0 "" 2
 1346              		.thumb
 1347              		.syntax unified
 1348 069e 07F1F003 		add	r3, r7, #240
 1349 06a2 1960     		str	r1, [r3]
 1350              		.loc 2 1001 0
 1351 06a4 07F1F003 		add	r3, r7, #240
 1352 06a8 1B68     		ldr	r3, [r3]
 1353              	.LBE235:
 1354              	.LBE234:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1355              		.loc 1 470 0
 1356 06aa B3FA83F3 		clz	r3, r3
 1357 06ae DBB2     		uxtb	r3, r3
 1358 06b0 43F06003 		orr	r3, r3, #96
 1359 06b4 DBB2     		uxtb	r3, r3
 1360 06b6 03F01F03 		and	r3, r3, #31
 1361 06ba 0121     		movs	r1, #1
 1362 06bc 01FA03F3 		lsl	r3, r1, r3
 1363 06c0 1340     		ands	r3, r3, r2
 1364 06c2 002B     		cmp	r3, #0
 1365 06c4 B0D0     		beq	.L86
 1366 06c6 6AE0     		b	.L78
 1367              	.L79:
 1368 06c8 07F1EC03 		add	r3, r7, #236
 1369 06cc 0122     		movs	r2, #1
 1370 06ce 1A60     		str	r2, [r3]
 1371              	.LBB236:
 1372              	.LBB237:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1373              		.loc 2 988 0
 1374 06d0 07F1EC03 		add	r3, r7, #236
 1375 06d4 1B68     		ldr	r3, [r3]
 1376              		.syntax unified
 1377              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1378 06d6 93FAA3F2 		rbit r2, r3
 1379              	@ 0 "" 2
 1380              		.thumb
 1381              		.syntax unified
 1382 06da 07F1E803 		add	r3, r7, #232
 1383 06de 1A60     		str	r2, [r3]
 1384              		.loc 2 1001 0
 1385 06e0 07F1E803 		add	r3, r7, #232
 1386 06e4 1B68     		ldr	r3, [r3]
 1387              	.LBE237:
 1388              	.LBE236:
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
ARM GAS  /tmp/ccs8nK3N.s 			page 52


 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 1389              		.loc 1 481 0
 1390 06e6 B3FA83F3 		clz	r3, r3
 1391 06ea DBB2     		uxtb	r3, r3
 1392 06ec 1A46     		mov	r2, r3
 1393 06ee 8C4B     		ldr	r3, .L158+4
 1394 06f0 1344     		add	r3, r3, r2
 1395 06f2 9B00     		lsls	r3, r3, #2
 1396 06f4 1A46     		mov	r2, r3
 1397 06f6 0023     		movs	r3, #0
 1398 06f8 1360     		str	r3, [r2]
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1399              		.loc 1 484 0
 1400 06fa FFF7FEFF 		bl	HAL_GetTick
 1401 06fe C7F80002 		str	r0, [r7, #512]
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 1402              		.loc 1 487 0
 1403 0702 09E0     		b	.L88
 1404              	.L93:
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 1405              		.loc 1 489 0
 1406 0704 FFF7FEFF 		bl	HAL_GetTick
 1407 0708 0246     		mov	r2, r0
 1408 070a D7F80032 		ldr	r3, [r7, #512]
 1409 070e D31A     		subs	r3, r2, r3
 1410 0710 022B     		cmp	r3, #2
 1411 0712 01D9     		bls	.L88
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1412              		.loc 1 491 0
 1413 0714 0323     		movs	r3, #3
 1414 0716 81E3     		b	.L15
 1415              	.L88:
 1416 0718 07F1E403 		add	r3, r7, #228
 1417 071c 0222     		movs	r2, #2
 1418 071e 1A60     		str	r2, [r3]
 1419              	.LBB238:
 1420              	.LBB239:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1421              		.loc 2 988 0
 1422 0720 07F1E403 		add	r3, r7, #228
 1423 0724 1B68     		ldr	r3, [r3]
 1424              		.syntax unified
 1425              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1426 0726 93FAA3F2 		rbit r2, r3
 1427              	@ 0 "" 2
 1428              		.thumb
 1429              		.syntax unified
ARM GAS  /tmp/ccs8nK3N.s 			page 53


 1430 072a 07F1E003 		add	r3, r7, #224
 1431 072e 1A60     		str	r2, [r3]
 1432 0730 07F1DC03 		add	r3, r7, #220
 1433 0734 0222     		movs	r2, #2
 1434 0736 1A60     		str	r2, [r3]
 1435              	.LBE239:
 1436              	.LBE238:
 1437              	.LBB240:
 1438              	.LBB241:
 1439 0738 07F1DC03 		add	r3, r7, #220
 1440 073c 1B68     		ldr	r3, [r3]
 1441              		.syntax unified
 1442              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1443 073e 93FAA3F2 		rbit r2, r3
 1444              	@ 0 "" 2
 1445              		.thumb
 1446              		.syntax unified
 1447 0742 07F1D803 		add	r3, r7, #216
 1448 0746 1A60     		str	r2, [r3]
 1449 0748 07F1D403 		add	r3, r7, #212
 1450 074c 0222     		movs	r2, #2
 1451 074e 1A60     		str	r2, [r3]
 1452              	.LBE241:
 1453              	.LBE240:
 1454              	.LBB242:
 1455              	.LBB243:
 1456 0750 07F1D403 		add	r3, r7, #212
 1457 0754 1B68     		ldr	r3, [r3]
 1458              		.syntax unified
 1459              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1460 0756 93FAA3F2 		rbit r2, r3
 1461              	@ 0 "" 2
 1462              		.thumb
 1463              		.syntax unified
 1464 075a 07F1D003 		add	r3, r7, #208
 1465 075e 1A60     		str	r2, [r3]
 1466              	.LBE243:
 1467              	.LBE242:
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1468              		.loc 1 487 0
 1469 0760 6E4B     		ldr	r3, .L158
 1470 0762 5A6A     		ldr	r2, [r3, #36]
 1471 0764 07F1CC03 		add	r3, r7, #204
 1472 0768 0221     		movs	r1, #2
 1473 076a 1960     		str	r1, [r3]
 1474              	.LBB244:
 1475              	.LBB245:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1476              		.loc 2 988 0
 1477 076c 07F1CC03 		add	r3, r7, #204
 1478 0770 1B68     		ldr	r3, [r3]
 1479              		.syntax unified
 1480              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1481 0772 93FAA3F1 		rbit r1, r3
 1482              	@ 0 "" 2
 1483              		.thumb
 1484              		.syntax unified
ARM GAS  /tmp/ccs8nK3N.s 			page 54


 1485 0776 07F1C803 		add	r3, r7, #200
 1486 077a 1960     		str	r1, [r3]
 1487              		.loc 2 1001 0
 1488 077c 07F1C803 		add	r3, r7, #200
 1489 0780 1B68     		ldr	r3, [r3]
 1490              	.LBE245:
 1491              	.LBE244:
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1492              		.loc 1 487 0
 1493 0782 B3FA83F3 		clz	r3, r3
 1494 0786 DBB2     		uxtb	r3, r3
 1495 0788 43F06003 		orr	r3, r3, #96
 1496 078c DBB2     		uxtb	r3, r3
 1497 078e 03F01F03 		and	r3, r3, #31
 1498 0792 0121     		movs	r1, #1
 1499 0794 01FA03F3 		lsl	r3, r1, r3
 1500 0798 1340     		ands	r3, r3, r2
 1501 079a 002B     		cmp	r3, #0
 1502 079c B2D1     		bne	.L93
 1503              	.L78:
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 1504              		.loc 1 497 0
 1505 079e 3B1D     		adds	r3, r7, #4
 1506 07a0 1B68     		ldr	r3, [r3]
 1507 07a2 1B68     		ldr	r3, [r3]
 1508 07a4 03F00403 		and	r3, r3, #4
 1509 07a8 002B     		cmp	r3, #0
 1510 07aa 00F05781 		beq	.L94
 1511              	.LBB246:
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 1512              		.loc 1 499 0
 1513 07ae 0023     		movs	r3, #0
 1514 07b0 87F80732 		strb	r3, [r7, #519]
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 1515              		.loc 1 506 0
 1516 07b4 594B     		ldr	r3, .L158
 1517 07b6 DB69     		ldr	r3, [r3, #28]
 1518 07b8 03F08053 		and	r3, r3, #268435456
 1519 07bc 002B     		cmp	r3, #0
 1520 07be 12D1     		bne	.L95
 1521              	.LBB247:
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 1522              		.loc 1 508 0
 1523 07c0 564B     		ldr	r3, .L158
ARM GAS  /tmp/ccs8nK3N.s 			page 55


 1524 07c2 DB69     		ldr	r3, [r3, #28]
 1525 07c4 554A     		ldr	r2, .L158
 1526 07c6 43F08053 		orr	r3, r3, #268435456
 1527 07ca D361     		str	r3, [r2, #28]
 1528 07cc 534B     		ldr	r3, .L158
 1529 07ce DB69     		ldr	r3, [r3, #28]
 1530 07d0 03F08052 		and	r2, r3, #268435456
 1531 07d4 07F10C03 		add	r3, r7, #12
 1532 07d8 1A60     		str	r2, [r3]
 1533 07da 07F10C03 		add	r3, r7, #12
 1534 07de 1B68     		ldr	r3, [r3]
 1535              	.LBE247:
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pwrclkchanged = SET;
 1536              		.loc 1 509 0
 1537 07e0 0123     		movs	r3, #1
 1538 07e2 87F80732 		strb	r3, [r7, #519]
 1539              	.L95:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 1540              		.loc 1 512 0
 1541 07e6 4F4B     		ldr	r3, .L158+8
 1542 07e8 1B68     		ldr	r3, [r3]
 1543 07ea 03F48073 		and	r3, r3, #256
 1544 07ee 002B     		cmp	r3, #0
 1545 07f0 1AD1     		bne	.L96
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 1546              		.loc 1 515 0
 1547 07f2 4C4B     		ldr	r3, .L158+8
 1548 07f4 1B68     		ldr	r3, [r3]
 1549 07f6 4B4A     		ldr	r2, .L158+8
 1550 07f8 43F48073 		orr	r3, r3, #256
 1551 07fc 1360     		str	r3, [r2]
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1552              		.loc 1 518 0
 1553 07fe FFF7FEFF 		bl	HAL_GetTick
 1554 0802 C7F80002 		str	r0, [r7, #512]
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 1555              		.loc 1 520 0
 1556 0806 09E0     		b	.L97
 1557              	.L98:
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 1558              		.loc 1 522 0
 1559 0808 FFF7FEFF 		bl	HAL_GetTick
 1560 080c 0246     		mov	r2, r0
 1561 080e D7F80032 		ldr	r3, [r7, #512]
 1562 0812 D31A     		subs	r3, r2, r3
 1563 0814 642B     		cmp	r3, #100
 1564 0816 01D9     		bls	.L97
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/ccs8nK3N.s 			page 56


 1565              		.loc 1 524 0
 1566 0818 0323     		movs	r3, #3
 1567 081a FFE2     		b	.L15
 1568              	.L97:
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1569              		.loc 1 520 0
 1570 081c 414B     		ldr	r3, .L158+8
 1571 081e 1B68     		ldr	r3, [r3]
 1572 0820 03F48073 		and	r3, r3, #256
 1573 0824 002B     		cmp	r3, #0
 1574 0826 EFD0     		beq	.L98
 1575              	.L96:
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 1576              		.loc 1 530 0
 1577 0828 3B1D     		adds	r3, r7, #4
 1578 082a 1B68     		ldr	r3, [r3]
 1579 082c 9B68     		ldr	r3, [r3, #8]
 1580 082e 012B     		cmp	r3, #1
 1581 0830 06D1     		bne	.L99
 1582              		.loc 1 530 0 is_stmt 0 discriminator 1
 1583 0832 3A4B     		ldr	r3, .L158
 1584 0834 1B6A     		ldr	r3, [r3, #32]
 1585 0836 394A     		ldr	r2, .L158
 1586 0838 43F00103 		orr	r3, r3, #1
 1587 083c 1362     		str	r3, [r2, #32]
 1588 083e 2FE0     		b	.L100
 1589              	.L99:
 1590              		.loc 1 530 0 discriminator 2
 1591 0840 3B1D     		adds	r3, r7, #4
 1592 0842 1B68     		ldr	r3, [r3]
 1593 0844 9B68     		ldr	r3, [r3, #8]
 1594 0846 002B     		cmp	r3, #0
 1595 0848 0CD1     		bne	.L101
 1596              		.loc 1 530 0 discriminator 3
 1597 084a 344B     		ldr	r3, .L158
 1598 084c 1B6A     		ldr	r3, [r3, #32]
 1599 084e 334A     		ldr	r2, .L158
 1600 0850 23F00103 		bic	r3, r3, #1
 1601 0854 1362     		str	r3, [r2, #32]
 1602 0856 314B     		ldr	r3, .L158
 1603 0858 1B6A     		ldr	r3, [r3, #32]
 1604 085a 304A     		ldr	r2, .L158
 1605 085c 23F00403 		bic	r3, r3, #4
 1606 0860 1362     		str	r3, [r2, #32]
 1607 0862 1DE0     		b	.L100
 1608              	.L101:
 1609              		.loc 1 530 0 discriminator 4
 1610 0864 3B1D     		adds	r3, r7, #4
 1611 0866 1B68     		ldr	r3, [r3]
 1612 0868 9B68     		ldr	r3, [r3, #8]
 1613 086a 052B     		cmp	r3, #5
 1614 086c 0CD1     		bne	.L102
ARM GAS  /tmp/ccs8nK3N.s 			page 57


 1615              		.loc 1 530 0 discriminator 5
 1616 086e 2B4B     		ldr	r3, .L158
 1617 0870 1B6A     		ldr	r3, [r3, #32]
 1618 0872 2A4A     		ldr	r2, .L158
 1619 0874 43F00403 		orr	r3, r3, #4
 1620 0878 1362     		str	r3, [r2, #32]
 1621 087a 284B     		ldr	r3, .L158
 1622 087c 1B6A     		ldr	r3, [r3, #32]
 1623 087e 274A     		ldr	r2, .L158
 1624 0880 43F00103 		orr	r3, r3, #1
 1625 0884 1362     		str	r3, [r2, #32]
 1626 0886 0BE0     		b	.L100
 1627              	.L102:
 1628              		.loc 1 530 0 discriminator 6
 1629 0888 244B     		ldr	r3, .L158
 1630 088a 1B6A     		ldr	r3, [r3, #32]
 1631 088c 234A     		ldr	r2, .L158
 1632 088e 23F00103 		bic	r3, r3, #1
 1633 0892 1362     		str	r3, [r2, #32]
 1634 0894 214B     		ldr	r3, .L158
 1635 0896 1B6A     		ldr	r3, [r3, #32]
 1636 0898 204A     		ldr	r2, .L158
 1637 089a 23F00403 		bic	r3, r3, #4
 1638 089e 1362     		str	r3, [r2, #32]
 1639              	.L100:
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 1640              		.loc 1 532 0 is_stmt 1
 1641 08a0 3B1D     		adds	r3, r7, #4
 1642 08a2 1B68     		ldr	r3, [r3]
 1643 08a4 9B68     		ldr	r3, [r3, #8]
 1644 08a6 002B     		cmp	r3, #0
 1645 08a8 6AD0     		beq	.L103
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1646              		.loc 1 535 0
 1647 08aa FFF7FEFF 		bl	HAL_GetTick
 1648 08ae C7F80002 		str	r0, [r7, #512]
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 1649              		.loc 1 538 0
 1650 08b2 0BE0     		b	.L104
 1651              	.L111:
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1652              		.loc 1 540 0
 1653 08b4 FFF7FEFF 		bl	HAL_GetTick
 1654 08b8 0246     		mov	r2, r0
 1655 08ba D7F80032 		ldr	r3, [r7, #512]
 1656 08be D31A     		subs	r3, r2, r3
 1657 08c0 41F28832 		movw	r2, #5000
 1658 08c4 9342     		cmp	r3, r2
 1659 08c6 01D9     		bls	.L104
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/ccs8nK3N.s 			page 58


 1660              		.loc 1 542 0
 1661 08c8 0323     		movs	r3, #3
 1662 08ca A7E2     		b	.L15
 1663              	.L104:
 1664 08cc 07F1C403 		add	r3, r7, #196
 1665 08d0 0222     		movs	r2, #2
 1666 08d2 1A60     		str	r2, [r3]
 1667              	.LBB248:
 1668              	.LBB249:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1669              		.loc 2 988 0
 1670 08d4 07F1C403 		add	r3, r7, #196
 1671 08d8 1B68     		ldr	r3, [r3]
 1672              		.syntax unified
 1673              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1674 08da 93FAA3F2 		rbit r2, r3
 1675              	@ 0 "" 2
 1676              		.thumb
 1677              		.syntax unified
 1678 08de 07F1C003 		add	r3, r7, #192
 1679 08e2 1A60     		str	r2, [r3]
 1680 08e4 07F1BC03 		add	r3, r7, #188
 1681 08e8 0222     		movs	r2, #2
 1682 08ea 1A60     		str	r2, [r3]
 1683              	.LBE249:
 1684              	.LBE248:
 1685              	.LBB250:
 1686              	.LBB251:
 1687 08ec 07F1BC03 		add	r3, r7, #188
 1688 08f0 1B68     		ldr	r3, [r3]
 1689              		.syntax unified
 1690              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1691 08f2 93FAA3F2 		rbit r2, r3
 1692              	@ 0 "" 2
 1693              		.thumb
 1694              		.syntax unified
 1695 08f6 07F1B803 		add	r3, r7, #184
 1696 08fa 1A60     		str	r2, [r3]
 1697              		.loc 2 1001 0
 1698 08fc 07F1B803 		add	r3, r7, #184
 1699 0900 1B68     		ldr	r3, [r3]
 1700              	.LBE251:
 1701              	.LBE250:
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1702              		.loc 1 538 0
 1703 0902 B3FA83F3 		clz	r3, r3
 1704 0906 DBB2     		uxtb	r3, r3
 1705 0908 5B09     		lsrs	r3, r3, #5
 1706 090a DBB2     		uxtb	r3, r3
 1707 090c 43F00203 		orr	r3, r3, #2
 1708 0910 DBB2     		uxtb	r3, r3
 1709 0912 022B     		cmp	r3, #2
 1710 0914 08D1     		bne	.L107
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1711              		.loc 1 538 0 is_stmt 0 discriminator 4
 1712 0916 014B     		ldr	r3, .L158
 1713 0918 1B6A     		ldr	r3, [r3, #32]
ARM GAS  /tmp/ccs8nK3N.s 			page 59


 1714 091a 13E0     		b	.L108
 1715              	.L159:
 1716              		.align	2
 1717              	.L158:
 1718 091c 00100240 		.word	1073876992
 1719 0920 20819010 		.word	277905696
 1720 0924 00700040 		.word	1073770496
 1721              	.L107:
 1722 0928 07F1B403 		add	r3, r7, #180
 1723 092c 0222     		movs	r2, #2
 1724 092e 1A60     		str	r2, [r3]
 1725              	.LBB252:
 1726              	.LBB253:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1727              		.loc 2 988 0 is_stmt 1 discriminator 5
 1728 0930 07F1B403 		add	r3, r7, #180
 1729 0934 1B68     		ldr	r3, [r3]
 1730              		.syntax unified
 1731              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1732 0936 93FAA3F2 		rbit r2, r3
 1733              	@ 0 "" 2
 1734              		.thumb
 1735              		.syntax unified
 1736 093a 07F1B003 		add	r3, r7, #176
 1737 093e 1A60     		str	r2, [r3]
 1738              	.LBE253:
 1739              	.LBE252:
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1740              		.loc 1 538 0 discriminator 5
 1741 0940 C04B     		ldr	r3, .L160
 1742 0942 5B6A     		ldr	r3, [r3, #36]
 1743              	.L108:
 1744 0944 07F1AC02 		add	r2, r7, #172
 1745 0948 0221     		movs	r1, #2
 1746 094a 1160     		str	r1, [r2]
 1747              	.LBB254:
 1748              	.LBB255:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1749              		.loc 2 988 0 discriminator 11
 1750 094c 07F1AC02 		add	r2, r7, #172
 1751 0950 1268     		ldr	r2, [r2]
 1752              		.syntax unified
 1753              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1754 0952 92FAA2F1 		rbit r1, r2
 1755              	@ 0 "" 2
 1756              		.thumb
 1757              		.syntax unified
 1758 0956 07F1A802 		add	r2, r7, #168
 1759 095a 1160     		str	r1, [r2]
 1760              		.loc 2 1001 0 discriminator 11
 1761 095c 07F1A802 		add	r2, r7, #168
 1762 0960 1268     		ldr	r2, [r2]
 1763              	.LBE255:
 1764              	.LBE254:
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1765              		.loc 1 538 0 discriminator 11
 1766 0962 B2FA82F2 		clz	r2, r2
ARM GAS  /tmp/ccs8nK3N.s 			page 60


 1767 0966 D2B2     		uxtb	r2, r2
 1768 0968 42F04002 		orr	r2, r2, #64
 1769 096c D2B2     		uxtb	r2, r2
 1770 096e 02F01F02 		and	r2, r2, #31
 1771 0972 0121     		movs	r1, #1
 1772 0974 01FA02F2 		lsl	r2, r1, r2
 1773 0978 1340     		ands	r3, r3, r2
 1774 097a 002B     		cmp	r3, #0
 1775 097c 9AD0     		beq	.L111
 1776 097e 63E0     		b	.L112
 1777              	.L103:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1778              		.loc 1 549 0
 1779 0980 FFF7FEFF 		bl	HAL_GetTick
 1780 0984 C7F80002 		str	r0, [r7, #512]
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1781              		.loc 1 552 0
 1782 0988 0BE0     		b	.L113
 1783              	.L120:
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1784              		.loc 1 554 0
 1785 098a FFF7FEFF 		bl	HAL_GetTick
 1786 098e 0246     		mov	r2, r0
 1787 0990 D7F80032 		ldr	r3, [r7, #512]
 1788 0994 D31A     		subs	r3, r2, r3
 1789 0996 41F28832 		movw	r2, #5000
 1790 099a 9342     		cmp	r3, r2
 1791 099c 01D9     		bls	.L113
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1792              		.loc 1 556 0
 1793 099e 0323     		movs	r3, #3
 1794 09a0 3CE2     		b	.L15
 1795              	.L113:
 1796 09a2 07F1A403 		add	r3, r7, #164
 1797 09a6 0222     		movs	r2, #2
 1798 09a8 1A60     		str	r2, [r3]
 1799              	.LBB256:
 1800              	.LBB257:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1801              		.loc 2 988 0
 1802 09aa 07F1A403 		add	r3, r7, #164
 1803 09ae 1B68     		ldr	r3, [r3]
 1804              		.syntax unified
 1805              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1806 09b0 93FAA3F2 		rbit r2, r3
 1807              	@ 0 "" 2
 1808              		.thumb
ARM GAS  /tmp/ccs8nK3N.s 			page 61


 1809              		.syntax unified
 1810 09b4 07F1A003 		add	r3, r7, #160
 1811 09b8 1A60     		str	r2, [r3]
 1812 09ba 07F19C03 		add	r3, r7, #156
 1813 09be 0222     		movs	r2, #2
 1814 09c0 1A60     		str	r2, [r3]
 1815              	.LBE257:
 1816              	.LBE256:
 1817              	.LBB258:
 1818              	.LBB259:
 1819 09c2 07F19C03 		add	r3, r7, #156
 1820 09c6 1B68     		ldr	r3, [r3]
 1821              		.syntax unified
 1822              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1823 09c8 93FAA3F2 		rbit r2, r3
 1824              	@ 0 "" 2
 1825              		.thumb
 1826              		.syntax unified
 1827 09cc 07F19803 		add	r3, r7, #152
 1828 09d0 1A60     		str	r2, [r3]
 1829              		.loc 2 1001 0
 1830 09d2 07F19803 		add	r3, r7, #152
 1831 09d6 1B68     		ldr	r3, [r3]
 1832              	.LBE259:
 1833              	.LBE258:
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1834              		.loc 1 552 0
 1835 09d8 B3FA83F3 		clz	r3, r3
 1836 09dc DBB2     		uxtb	r3, r3
 1837 09de 5B09     		lsrs	r3, r3, #5
 1838 09e0 DBB2     		uxtb	r3, r3
 1839 09e2 43F00203 		orr	r3, r3, #2
 1840 09e6 DBB2     		uxtb	r3, r3
 1841 09e8 022B     		cmp	r3, #2
 1842 09ea 02D1     		bne	.L116
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1843              		.loc 1 552 0 is_stmt 0 discriminator 4
 1844 09ec 954B     		ldr	r3, .L160
 1845 09ee 1B6A     		ldr	r3, [r3, #32]
 1846 09f0 0DE0     		b	.L117
 1847              	.L116:
 1848 09f2 07F19403 		add	r3, r7, #148
 1849 09f6 0222     		movs	r2, #2
 1850 09f8 1A60     		str	r2, [r3]
 1851              	.LBB260:
 1852              	.LBB261:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1853              		.loc 2 988 0 is_stmt 1 discriminator 5
 1854 09fa 07F19403 		add	r3, r7, #148
 1855 09fe 1B68     		ldr	r3, [r3]
 1856              		.syntax unified
 1857              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1858 0a00 93FAA3F2 		rbit r2, r3
 1859              	@ 0 "" 2
 1860              		.thumb
 1861              		.syntax unified
 1862 0a04 07F19003 		add	r3, r7, #144
ARM GAS  /tmp/ccs8nK3N.s 			page 62


 1863 0a08 1A60     		str	r2, [r3]
 1864              	.LBE261:
 1865              	.LBE260:
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1866              		.loc 1 552 0 discriminator 5
 1867 0a0a 8E4B     		ldr	r3, .L160
 1868 0a0c 5B6A     		ldr	r3, [r3, #36]
 1869              	.L117:
 1870 0a0e 07F18C02 		add	r2, r7, #140
 1871 0a12 0221     		movs	r1, #2
 1872 0a14 1160     		str	r1, [r2]
 1873              	.LBB262:
 1874              	.LBB263:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1875              		.loc 2 988 0 discriminator 11
 1876 0a16 07F18C02 		add	r2, r7, #140
 1877 0a1a 1268     		ldr	r2, [r2]
 1878              		.syntax unified
 1879              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1880 0a1c 92FAA2F1 		rbit r1, r2
 1881              	@ 0 "" 2
 1882              		.thumb
 1883              		.syntax unified
 1884 0a20 07F18802 		add	r2, r7, #136
 1885 0a24 1160     		str	r1, [r2]
 1886              		.loc 2 1001 0 discriminator 11
 1887 0a26 07F18802 		add	r2, r7, #136
 1888 0a2a 1268     		ldr	r2, [r2]
 1889              	.LBE263:
 1890              	.LBE262:
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1891              		.loc 1 552 0 discriminator 11
 1892 0a2c B2FA82F2 		clz	r2, r2
 1893 0a30 D2B2     		uxtb	r2, r2
 1894 0a32 42F04002 		orr	r2, r2, #64
 1895 0a36 D2B2     		uxtb	r2, r2
 1896 0a38 02F01F02 		and	r2, r2, #31
 1897 0a3c 0121     		movs	r1, #1
 1898 0a3e 01FA02F2 		lsl	r2, r1, r2
 1899 0a42 1340     		ands	r3, r3, r2
 1900 0a44 002B     		cmp	r3, #0
 1901 0a46 A0D1     		bne	.L120
 1902              	.L112:
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1903              		.loc 1 562 0
 1904 0a48 97F80732 		ldrb	r3, [r7, #519]	@ zero_extendqisi2
 1905 0a4c 012B     		cmp	r3, #1
 1906 0a4e 05D1     		bne	.L94
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1907              		.loc 1 564 0
 1908 0a50 7C4B     		ldr	r3, .L160
ARM GAS  /tmp/ccs8nK3N.s 			page 63


 1909 0a52 DB69     		ldr	r3, [r3, #28]
 1910 0a54 7B4A     		ldr	r2, .L160
 1911 0a56 23F08053 		bic	r3, r3, #268435456
 1912 0a5a D361     		str	r3, [r2, #28]
 1913              	.L94:
 1914              	.LBE246:
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1915              		.loc 1 571 0
 1916 0a5c 3B1D     		adds	r3, r7, #4
 1917 0a5e 1B68     		ldr	r3, [r3]
 1918 0a60 9B69     		ldr	r3, [r3, #24]
 1919 0a62 002B     		cmp	r3, #0
 1920 0a64 00F0D981 		beq	.L121
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1921              		.loc 1 574 0
 1922 0a68 764B     		ldr	r3, .L160
 1923 0a6a 5B68     		ldr	r3, [r3, #4]
 1924 0a6c 03F00C03 		and	r3, r3, #12
 1925 0a70 082B     		cmp	r3, #8
 1926 0a72 00F0A681 		beq	.L122
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     { 
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1927              		.loc 1 576 0
 1928 0a76 3B1D     		adds	r3, r7, #4
 1929 0a78 1B68     		ldr	r3, [r3]
 1930 0a7a 9B69     		ldr	r3, [r3, #24]
 1931 0a7c 022B     		cmp	r3, #2
 1932 0a7e 40F01E81 		bne	.L123
 1933 0a82 07F18403 		add	r3, r7, #132
 1934 0a86 4FF08072 		mov	r2, #16777216
 1935 0a8a 1A60     		str	r2, [r3]
 1936              	.LBB264:
 1937              	.LBB265:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1938              		.loc 2 988 0
 1939 0a8c 07F18403 		add	r3, r7, #132
 1940 0a90 1B68     		ldr	r3, [r3]
 1941              		.syntax unified
 1942              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1943 0a92 93FAA3F2 		rbit r2, r3
 1944              	@ 0 "" 2
 1945              		.thumb
 1946              		.syntax unified
 1947 0a96 07F18003 		add	r3, r7, #128
 1948 0a9a 1A60     		str	r2, [r3]
 1949              		.loc 2 1001 0
 1950 0a9c 07F18003 		add	r3, r7, #128
 1951 0aa0 1B68     		ldr	r3, [r3]
 1952              	.LBE265:
ARM GAS  /tmp/ccs8nK3N.s 			page 64


 1953              	.LBE264:
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Check the parameters */
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1954              		.loc 1 586 0
 1955 0aa2 B3FA83F3 		clz	r3, r3
 1956 0aa6 DBB2     		uxtb	r3, r3
 1957 0aa8 03F18453 		add	r3, r3, #276824064
 1958 0aac 03F58413 		add	r3, r3, #1081344
 1959 0ab0 9B00     		lsls	r3, r3, #2
 1960 0ab2 1A46     		mov	r2, r3
 1961 0ab4 0023     		movs	r3, #0
 1962 0ab6 1360     		str	r3, [r2]
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1963              		.loc 1 589 0
 1964 0ab8 FFF7FEFF 		bl	HAL_GetTick
 1965 0abc C7F80002 		str	r0, [r7, #512]
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1966              		.loc 1 592 0
 1967 0ac0 09E0     		b	.L125
 1968              	.L132:
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1969              		.loc 1 594 0
 1970 0ac2 FFF7FEFF 		bl	HAL_GetTick
 1971 0ac6 0246     		mov	r2, r0
 1972 0ac8 D7F80032 		ldr	r3, [r7, #512]
 1973 0acc D31A     		subs	r3, r2, r3
 1974 0ace 022B     		cmp	r3, #2
 1975 0ad0 01D9     		bls	.L125
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1976              		.loc 1 596 0
 1977 0ad2 0323     		movs	r3, #3
 1978 0ad4 A2E1     		b	.L15
 1979              	.L125:
 1980 0ad6 07F17C03 		add	r3, r7, #124
 1981 0ada 4FF00072 		mov	r2, #33554432
 1982 0ade 1A60     		str	r2, [r3]
 1983              	.LBB266:
 1984              	.LBB267:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1985              		.loc 2 988 0
 1986 0ae0 07F17C03 		add	r3, r7, #124
 1987 0ae4 1B68     		ldr	r3, [r3]
 1988              		.syntax unified
ARM GAS  /tmp/ccs8nK3N.s 			page 65


 1989              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1990 0ae6 93FAA3F2 		rbit r2, r3
 1991              	@ 0 "" 2
 1992              		.thumb
 1993              		.syntax unified
 1994 0aea 07F17803 		add	r3, r7, #120
 1995 0aee 1A60     		str	r2, [r3]
 1996              		.loc 2 1001 0
 1997 0af0 07F17803 		add	r3, r7, #120
 1998 0af4 1B68     		ldr	r3, [r3]
 1999              	.LBE267:
 2000              	.LBE266:
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2001              		.loc 1 592 0
 2002 0af6 B3FA83F3 		clz	r3, r3
 2003 0afa DBB2     		uxtb	r3, r3
 2004 0afc 5B09     		lsrs	r3, r3, #5
 2005 0afe DBB2     		uxtb	r3, r3
 2006 0b00 43F00103 		orr	r3, r3, #1
 2007 0b04 DBB2     		uxtb	r3, r3
 2008 0b06 012B     		cmp	r3, #1
 2009 0b08 02D1     		bne	.L127
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2010              		.loc 1 592 0 is_stmt 0 discriminator 1
 2011 0b0a 4E4B     		ldr	r3, .L160
 2012 0b0c 1B68     		ldr	r3, [r3]
 2013 0b0e 1BE0     		b	.L128
 2014              	.L127:
 2015 0b10 07F17403 		add	r3, r7, #116
 2016 0b14 4FF00072 		mov	r2, #33554432
 2017 0b18 1A60     		str	r2, [r3]
 2018              	.LBB268:
 2019              	.LBB269:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2020              		.loc 2 988 0 is_stmt 1 discriminator 2
 2021 0b1a 07F17403 		add	r3, r7, #116
 2022 0b1e 1B68     		ldr	r3, [r3]
 2023              		.syntax unified
 2024              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2025 0b20 93FAA3F2 		rbit r2, r3
 2026              	@ 0 "" 2
 2027              		.thumb
 2028              		.syntax unified
 2029 0b24 07F17003 		add	r3, r7, #112
 2030 0b28 1A60     		str	r2, [r3]
 2031 0b2a 07F16C03 		add	r3, r7, #108
 2032 0b2e 4FF00072 		mov	r2, #33554432
 2033 0b32 1A60     		str	r2, [r3]
 2034              	.LBE269:
 2035              	.LBE268:
 2036              	.LBB270:
 2037              	.LBB271:
 2038 0b34 07F16C03 		add	r3, r7, #108
 2039 0b38 1B68     		ldr	r3, [r3]
 2040              		.syntax unified
 2041              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2042 0b3a 93FAA3F2 		rbit r2, r3
ARM GAS  /tmp/ccs8nK3N.s 			page 66


 2043              	@ 0 "" 2
 2044              		.thumb
 2045              		.syntax unified
 2046 0b3e 07F16803 		add	r3, r7, #104
 2047 0b42 1A60     		str	r2, [r3]
 2048              	.LBE271:
 2049              	.LBE270:
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2050              		.loc 1 592 0 discriminator 2
 2051 0b44 3F4B     		ldr	r3, .L160
 2052 0b46 5B6A     		ldr	r3, [r3, #36]
 2053              	.L128:
 2054 0b48 07F16402 		add	r2, r7, #100
 2055 0b4c 4FF00071 		mov	r1, #33554432
 2056 0b50 1160     		str	r1, [r2]
 2057              	.LBB272:
 2058              	.LBB273:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2059              		.loc 2 988 0 discriminator 12
 2060 0b52 07F16402 		add	r2, r7, #100
 2061 0b56 1268     		ldr	r2, [r2]
 2062              		.syntax unified
 2063              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2064 0b58 92FAA2F1 		rbit r1, r2
 2065              	@ 0 "" 2
 2066              		.thumb
 2067              		.syntax unified
 2068 0b5c 07F16002 		add	r2, r7, #96
 2069 0b60 1160     		str	r1, [r2]
 2070              		.loc 2 1001 0 discriminator 12
 2071 0b62 07F16002 		add	r2, r7, #96
 2072 0b66 1268     		ldr	r2, [r2]
 2073              	.LBE273:
 2074              	.LBE272:
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2075              		.loc 1 592 0 discriminator 12
 2076 0b68 B2FA82F2 		clz	r2, r2
 2077 0b6c D2B2     		uxtb	r2, r2
 2078 0b6e 42F02002 		orr	r2, r2, #32
 2079 0b72 D2B2     		uxtb	r2, r2
 2080 0b74 02F01F02 		and	r2, r2, #31
 2081 0b78 0121     		movs	r1, #1
 2082 0b7a 01FA02F2 		lsl	r2, r1, r2
 2083 0b7e 1340     		ands	r3, r3, r2
 2084 0b80 002B     		cmp	r3, #0
 2085 0b82 9ED1     		bne	.L132
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 2086              		.loc 1 602 0
 2087 0b84 2F4B     		ldr	r3, .L160
 2088 0b86 DB6A     		ldr	r3, [r3, #44]
 2089 0b88 23F00F02 		bic	r2, r3, #15
 2090 0b8c 3B1D     		adds	r3, r7, #4
ARM GAS  /tmp/ccs8nK3N.s 			page 67


 2091 0b8e 1B68     		ldr	r3, [r3]
 2092 0b90 5B6A     		ldr	r3, [r3, #36]
 2093 0b92 2C49     		ldr	r1, .L160
 2094 0b94 1343     		orrs	r3, r3, r2
 2095 0b96 CB62     		str	r3, [r1, #44]
 2096 0b98 2A4B     		ldr	r3, .L160
 2097 0b9a 5B68     		ldr	r3, [r3, #4]
 2098 0b9c 23F47612 		bic	r2, r3, #4030464
 2099 0ba0 3B1D     		adds	r3, r7, #4
 2100 0ba2 1B68     		ldr	r3, [r3]
 2101 0ba4 196A     		ldr	r1, [r3, #32]
 2102 0ba6 3B1D     		adds	r3, r7, #4
 2103 0ba8 1B68     		ldr	r3, [r3]
 2104 0baa DB69     		ldr	r3, [r3, #28]
 2105 0bac 0B43     		orrs	r3, r3, r1
 2106 0bae 2549     		ldr	r1, .L160
 2107 0bb0 1343     		orrs	r3, r3, r2
 2108 0bb2 4B60     		str	r3, [r1, #4]
 2109 0bb4 07F15C03 		add	r3, r7, #92
 2110 0bb8 4FF08072 		mov	r2, #16777216
 2111 0bbc 1A60     		str	r2, [r3]
 2112              	.LBB274:
 2113              	.LBB275:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2114              		.loc 2 988 0
 2115 0bbe 07F15C03 		add	r3, r7, #92
 2116 0bc2 1B68     		ldr	r3, [r3]
 2117              		.syntax unified
 2118              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2119 0bc4 93FAA3F2 		rbit r2, r3
 2120              	@ 0 "" 2
 2121              		.thumb
 2122              		.syntax unified
 2123 0bc8 07F15803 		add	r3, r7, #88
 2124 0bcc 1A60     		str	r2, [r3]
 2125              		.loc 2 1001 0
 2126 0bce 07F15803 		add	r3, r7, #88
 2127 0bd2 1B68     		ldr	r3, [r3]
 2128              	.LBE275:
 2129              	.LBE274:
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the main PLL clock source and multiplication factor. */
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Enable the main PLL. */
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 2130              		.loc 1 611 0
 2131 0bd4 B3FA83F3 		clz	r3, r3
 2132 0bd8 DBB2     		uxtb	r3, r3
 2133 0bda 03F18453 		add	r3, r3, #276824064
 2134 0bde 03F58413 		add	r3, r3, #1081344
 2135 0be2 9B00     		lsls	r3, r3, #2
 2136 0be4 1A46     		mov	r2, r3
 2137 0be6 0123     		movs	r3, #1
ARM GAS  /tmp/ccs8nK3N.s 			page 68


 2138 0be8 1360     		str	r3, [r2]
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 2139              		.loc 1 614 0
 2140 0bea FFF7FEFF 		bl	HAL_GetTick
 2141 0bee C7F80002 		str	r0, [r7, #512]
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is ready */
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 2142              		.loc 1 617 0
 2143 0bf2 09E0     		b	.L134
 2144              	.L141:
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 2145              		.loc 1 619 0
 2146 0bf4 FFF7FEFF 		bl	HAL_GetTick
 2147 0bf8 0246     		mov	r2, r0
 2148 0bfa D7F80032 		ldr	r3, [r7, #512]
 2149 0bfe D31A     		subs	r3, r2, r3
 2150 0c00 022B     		cmp	r3, #2
 2151 0c02 01D9     		bls	.L134
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 2152              		.loc 1 621 0
 2153 0c04 0323     		movs	r3, #3
 2154 0c06 09E1     		b	.L15
 2155              	.L134:
 2156 0c08 07F15403 		add	r3, r7, #84
 2157 0c0c 4FF00072 		mov	r2, #33554432
 2158 0c10 1A60     		str	r2, [r3]
 2159              	.LBB276:
 2160              	.LBB277:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2161              		.loc 2 988 0
 2162 0c12 07F15403 		add	r3, r7, #84
 2163 0c16 1B68     		ldr	r3, [r3]
 2164              		.syntax unified
 2165              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2166 0c18 93FAA3F2 		rbit r2, r3
 2167              	@ 0 "" 2
 2168              		.thumb
 2169              		.syntax unified
 2170 0c1c 07F15003 		add	r3, r7, #80
 2171 0c20 1A60     		str	r2, [r3]
 2172              		.loc 2 1001 0
 2173 0c22 07F15003 		add	r3, r7, #80
 2174 0c26 1B68     		ldr	r3, [r3]
 2175              	.LBE277:
 2176              	.LBE276:
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2177              		.loc 1 617 0
 2178 0c28 B3FA83F3 		clz	r3, r3
 2179 0c2c DBB2     		uxtb	r3, r3
 2180 0c2e 5B09     		lsrs	r3, r3, #5
 2181 0c30 DBB2     		uxtb	r3, r3
 2182 0c32 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccs8nK3N.s 			page 69


 2183 0c36 DBB2     		uxtb	r3, r3
 2184 0c38 012B     		cmp	r3, #1
 2185 0c3a 05D1     		bne	.L136
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2186              		.loc 1 617 0 is_stmt 0 discriminator 1
 2187 0c3c 014B     		ldr	r3, .L160
 2188 0c3e 1B68     		ldr	r3, [r3]
 2189 0c40 1EE0     		b	.L137
 2190              	.L161:
 2191 0c42 00BF     		.align	2
 2192              	.L160:
 2193 0c44 00100240 		.word	1073876992
 2194              	.L136:
 2195 0c48 07F14C03 		add	r3, r7, #76
 2196 0c4c 4FF00072 		mov	r2, #33554432
 2197 0c50 1A60     		str	r2, [r3]
 2198              	.LBB278:
 2199              	.LBB279:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2200              		.loc 2 988 0 is_stmt 1 discriminator 2
 2201 0c52 07F14C03 		add	r3, r7, #76
 2202 0c56 1B68     		ldr	r3, [r3]
 2203              		.syntax unified
 2204              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2205 0c58 93FAA3F2 		rbit r2, r3
 2206              	@ 0 "" 2
 2207              		.thumb
 2208              		.syntax unified
 2209 0c5c 07F14803 		add	r3, r7, #72
 2210 0c60 1A60     		str	r2, [r3]
 2211 0c62 07F14403 		add	r3, r7, #68
 2212 0c66 4FF00072 		mov	r2, #33554432
 2213 0c6a 1A60     		str	r2, [r3]
 2214              	.LBE279:
 2215              	.LBE278:
 2216              	.LBB280:
 2217              	.LBB281:
 2218 0c6c 07F14403 		add	r3, r7, #68
 2219 0c70 1B68     		ldr	r3, [r3]
 2220              		.syntax unified
 2221              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2222 0c72 93FAA3F2 		rbit r2, r3
 2223              	@ 0 "" 2
 2224              		.thumb
 2225              		.syntax unified
 2226 0c76 07F14003 		add	r3, r7, #64
 2227 0c7a 1A60     		str	r2, [r3]
 2228              	.LBE281:
 2229              	.LBE280:
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2230              		.loc 1 617 0 discriminator 2
 2231 0c7c 6A4B     		ldr	r3, .L162
 2232 0c7e 5B6A     		ldr	r3, [r3, #36]
 2233              	.L137:
 2234 0c80 07F13C02 		add	r2, r7, #60
 2235 0c84 4FF00071 		mov	r1, #33554432
 2236 0c88 1160     		str	r1, [r2]
ARM GAS  /tmp/ccs8nK3N.s 			page 70


 2237              	.LBB282:
 2238              	.LBB283:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2239              		.loc 2 988 0 discriminator 12
 2240 0c8a 07F13C02 		add	r2, r7, #60
 2241 0c8e 1268     		ldr	r2, [r2]
 2242              		.syntax unified
 2243              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2244 0c90 92FAA2F1 		rbit r1, r2
 2245              	@ 0 "" 2
 2246              		.thumb
 2247              		.syntax unified
 2248 0c94 07F13802 		add	r2, r7, #56
 2249 0c98 1160     		str	r1, [r2]
 2250              		.loc 2 1001 0 discriminator 12
 2251 0c9a 07F13802 		add	r2, r7, #56
 2252 0c9e 1268     		ldr	r2, [r2]
 2253              	.LBE283:
 2254              	.LBE282:
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2255              		.loc 1 617 0 discriminator 12
 2256 0ca0 B2FA82F2 		clz	r2, r2
 2257 0ca4 D2B2     		uxtb	r2, r2
 2258 0ca6 42F02002 		orr	r2, r2, #32
 2259 0caa D2B2     		uxtb	r2, r2
 2260 0cac 02F01F02 		and	r2, r2, #31
 2261 0cb0 0121     		movs	r1, #1
 2262 0cb2 01FA02F2 		lsl	r2, r1, r2
 2263 0cb6 1340     		ands	r3, r3, r2
 2264 0cb8 002B     		cmp	r3, #0
 2265 0cba 9BD0     		beq	.L141
 2266 0cbc ADE0     		b	.L121
 2267              	.L123:
 2268 0cbe 07F13403 		add	r3, r7, #52
 2269 0cc2 4FF08072 		mov	r2, #16777216
 2270 0cc6 1A60     		str	r2, [r3]
 2271              	.LBB284:
 2272              	.LBB285:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2273              		.loc 2 988 0
 2274 0cc8 07F13403 		add	r3, r7, #52
 2275 0ccc 1B68     		ldr	r3, [r3]
 2276              		.syntax unified
 2277              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2278 0cce 93FAA3F2 		rbit r2, r3
 2279              	@ 0 "" 2
 2280              		.thumb
 2281              		.syntax unified
 2282 0cd2 07F13003 		add	r3, r7, #48
 2283 0cd6 1A60     		str	r2, [r3]
 2284              		.loc 2 1001 0
 2285 0cd8 07F13003 		add	r3, r7, #48
 2286 0cdc 1B68     		ldr	r3, [r3]
 2287              	.LBE285:
 2288              	.LBE284:
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
ARM GAS  /tmp/ccs8nK3N.s 			page 71


 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 2289              		.loc 1 628 0
 2290 0cde B3FA83F3 		clz	r3, r3
 2291 0ce2 DBB2     		uxtb	r3, r3
 2292 0ce4 03F18453 		add	r3, r3, #276824064
 2293 0ce8 03F58413 		add	r3, r3, #1081344
 2294 0cec 9B00     		lsls	r3, r3, #2
 2295 0cee 1A46     		mov	r2, r3
 2296 0cf0 0023     		movs	r3, #0
 2297 0cf2 1360     		str	r3, [r2]
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 2298              		.loc 1 631 0
 2299 0cf4 FFF7FEFF 		bl	HAL_GetTick
 2300 0cf8 C7F80002 		str	r0, [r7, #512]
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 2301              		.loc 1 634 0
 2302 0cfc 09E0     		b	.L143
 2303              	.L150:
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 2304              		.loc 1 636 0
 2305 0cfe FFF7FEFF 		bl	HAL_GetTick
 2306 0d02 0246     		mov	r2, r0
 2307 0d04 D7F80032 		ldr	r3, [r7, #512]
 2308 0d08 D31A     		subs	r3, r2, r3
 2309 0d0a 022B     		cmp	r3, #2
 2310 0d0c 01D9     		bls	.L143
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 2311              		.loc 1 638 0
 2312 0d0e 0323     		movs	r3, #3
 2313 0d10 84E0     		b	.L15
 2314              	.L143:
 2315 0d12 07F12C03 		add	r3, r7, #44
 2316 0d16 4FF00072 		mov	r2, #33554432
 2317 0d1a 1A60     		str	r2, [r3]
 2318              	.LBB286:
 2319              	.LBB287:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2320              		.loc 2 988 0
 2321 0d1c 07F12C03 		add	r3, r7, #44
 2322 0d20 1B68     		ldr	r3, [r3]
 2323              		.syntax unified
 2324              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2325 0d22 93FAA3F2 		rbit r2, r3
 2326              	@ 0 "" 2
 2327              		.thumb
 2328              		.syntax unified
 2329 0d26 07F12803 		add	r3, r7, #40
ARM GAS  /tmp/ccs8nK3N.s 			page 72


 2330 0d2a 1A60     		str	r2, [r3]
 2331              		.loc 2 1001 0
 2332 0d2c 07F12803 		add	r3, r7, #40
 2333 0d30 1B68     		ldr	r3, [r3]
 2334              	.LBE287:
 2335              	.LBE286:
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2336              		.loc 1 634 0
 2337 0d32 B3FA83F3 		clz	r3, r3
 2338 0d36 DBB2     		uxtb	r3, r3
 2339 0d38 5B09     		lsrs	r3, r3, #5
 2340 0d3a DBB2     		uxtb	r3, r3
 2341 0d3c 43F00103 		orr	r3, r3, #1
 2342 0d40 DBB2     		uxtb	r3, r3
 2343 0d42 012B     		cmp	r3, #1
 2344 0d44 02D1     		bne	.L145
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2345              		.loc 1 634 0 is_stmt 0 discriminator 1
 2346 0d46 384B     		ldr	r3, .L162
 2347 0d48 1B68     		ldr	r3, [r3]
 2348 0d4a 1BE0     		b	.L146
 2349              	.L145:
 2350 0d4c 07F12403 		add	r3, r7, #36
 2351 0d50 4FF00072 		mov	r2, #33554432
 2352 0d54 1A60     		str	r2, [r3]
 2353              	.LBB288:
 2354              	.LBB289:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2355              		.loc 2 988 0 is_stmt 1 discriminator 2
 2356 0d56 07F12403 		add	r3, r7, #36
 2357 0d5a 1B68     		ldr	r3, [r3]
 2358              		.syntax unified
 2359              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2360 0d5c 93FAA3F2 		rbit r2, r3
 2361              	@ 0 "" 2
 2362              		.thumb
 2363              		.syntax unified
 2364 0d60 07F12003 		add	r3, r7, #32
 2365 0d64 1A60     		str	r2, [r3]
 2366 0d66 07F11C03 		add	r3, r7, #28
 2367 0d6a 4FF00072 		mov	r2, #33554432
 2368 0d6e 1A60     		str	r2, [r3]
 2369              	.LBE289:
 2370              	.LBE288:
 2371              	.LBB290:
 2372              	.LBB291:
 2373 0d70 07F11C03 		add	r3, r7, #28
 2374 0d74 1B68     		ldr	r3, [r3]
 2375              		.syntax unified
 2376              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2377 0d76 93FAA3F2 		rbit r2, r3
 2378              	@ 0 "" 2
 2379              		.thumb
 2380              		.syntax unified
 2381 0d7a 07F11803 		add	r3, r7, #24
 2382 0d7e 1A60     		str	r2, [r3]
 2383              	.LBE291:
ARM GAS  /tmp/ccs8nK3N.s 			page 73


 2384              	.LBE290:
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2385              		.loc 1 634 0 discriminator 2
 2386 0d80 294B     		ldr	r3, .L162
 2387 0d82 5B6A     		ldr	r3, [r3, #36]
 2388              	.L146:
 2389 0d84 07F11402 		add	r2, r7, #20
 2390 0d88 4FF00071 		mov	r1, #33554432
 2391 0d8c 1160     		str	r1, [r2]
 2392              	.LBB292:
 2393              	.LBB293:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2394              		.loc 2 988 0 discriminator 12
 2395 0d8e 07F11402 		add	r2, r7, #20
 2396 0d92 1268     		ldr	r2, [r2]
 2397              		.syntax unified
 2398              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2399 0d94 92FAA2F1 		rbit r1, r2
 2400              	@ 0 "" 2
 2401              		.thumb
 2402              		.syntax unified
 2403 0d98 07F11002 		add	r2, r7, #16
 2404 0d9c 1160     		str	r1, [r2]
 2405              		.loc 2 1001 0 discriminator 12
 2406 0d9e 07F11002 		add	r2, r7, #16
 2407 0da2 1268     		ldr	r2, [r2]
 2408              	.LBE293:
 2409              	.LBE292:
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2410              		.loc 1 634 0 discriminator 12
 2411 0da4 B2FA82F2 		clz	r2, r2
 2412 0da8 D2B2     		uxtb	r2, r2
 2413 0daa 42F02002 		orr	r2, r2, #32
 2414 0dae D2B2     		uxtb	r2, r2
 2415 0db0 02F01F02 		and	r2, r2, #31
 2416 0db4 0121     		movs	r1, #1
 2417 0db6 01FA02F2 		lsl	r2, r1, r2
 2418 0dba 1340     		ands	r3, r3, r2
 2419 0dbc 002B     		cmp	r3, #0
 2420 0dbe 9ED1     		bne	.L150
 2421 0dc0 2BE0     		b	.L121
 2422              	.L122:
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 2423              		.loc 1 646 0
 2424 0dc2 3B1D     		adds	r3, r7, #4
 2425 0dc4 1B68     		ldr	r3, [r3]
 2426 0dc6 9B69     		ldr	r3, [r3, #24]
 2427 0dc8 012B     		cmp	r3, #1
 2428 0dca 01D1     		bne	.L151
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccs8nK3N.s 			page 74


 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 2429              		.loc 1 648 0
 2430 0dcc 0123     		movs	r3, #1
 2431 0dce 25E0     		b	.L15
 2432              	.L151:
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pll_config = RCC->CFGR;
 2433              		.loc 1 653 0
 2434 0dd0 154B     		ldr	r3, .L162
 2435 0dd2 5B68     		ldr	r3, [r3, #4]
 2436 0dd4 C7F8FC31 		str	r3, [r7, #508]
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pll_config2 = RCC->CFGR2;
 2437              		.loc 1 655 0
 2438 0dd8 134B     		ldr	r3, .L162
 2439 0dda DB6A     		ldr	r3, [r3, #44]
 2440 0ddc C7F8F831 		str	r3, [r7, #504]
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_CFGR_PLLSRC)   != RCC_OscInitStruct->PLL.PLLSource) ||      
 2441              		.loc 1 656 0
 2442 0de0 D7F8FC31 		ldr	r3, [r7, #508]
 2443 0de4 03F4C032 		and	r2, r3, #98304
 2444 0de8 3B1D     		adds	r3, r7, #4
 2445 0dea 1B68     		ldr	r3, [r3]
 2446 0dec DB69     		ldr	r3, [r3, #28]
 2447 0dee 9A42     		cmp	r2, r3
 2448 0df0 11D1     		bne	.L152
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL)    ||      
 2449              		.loc 1 657 0 discriminator 1
 2450 0df2 D7F8FC31 		ldr	r3, [r7, #508]
 2451 0df6 03F47012 		and	r2, r3, #3932160
 2452 0dfa 3B1D     		adds	r3, r7, #4
 2453 0dfc 1B68     		ldr	r3, [r3]
 2454 0dfe 1B6A     		ldr	r3, [r3, #32]
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_CFGR_PLLSRC)   != RCC_OscInitStruct->PLL.PLLSource) ||      
 2455              		.loc 1 656 0 discriminator 1
 2456 0e00 9A42     		cmp	r2, r3
 2457 0e02 08D1     		bne	.L152
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config2, RCC_CFGR2_PREDIV)  != RCC_OscInitStruct->PLL.PREDIV))     
 2458              		.loc 1 658 0
 2459 0e04 D7F8F831 		ldr	r3, [r7, #504]
 2460 0e08 03F00F02 		and	r2, r3, #15
 2461 0e0c 3B1D     		adds	r3, r7, #4
 2462 0e0e 1B68     		ldr	r3, [r3]
 2463 0e10 5B6A     		ldr	r3, [r3, #36]
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL)    ||      
 2464              		.loc 1 657 0
 2465 0e12 9A42     		cmp	r2, r3
 2466 0e14 01D0     		beq	.L121
 2467              	.L152:
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_CFGR_PLLSRC)   != RCC_OscInitStruct->PLL.PLLSource) ||      
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL))
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccs8nK3N.s 			page 75


 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_ERROR;
 2468              		.loc 1 664 0
 2469 0e16 0123     		movs	r3, #1
 2470 0e18 00E0     		b	.L15
 2471              	.L121:
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 2472              		.loc 1 670 0
 2473 0e1a 0023     		movs	r3, #0
 2474              	.L15:
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2475              		.loc 1 671 0
 2476 0e1c 1846     		mov	r0, r3
 2477 0e1e 07F50277 		add	r7, r7, #520
 2478              	.LCFI8:
 2479              		.cfi_def_cfa_offset 8
 2480 0e22 BD46     		mov	sp, r7
 2481              	.LCFI9:
 2482              		.cfi_def_cfa_register 13
 2483              		@ sp needed
 2484 0e24 80BD     		pop	{r7, pc}
 2485              	.L163:
 2486 0e26 00BF     		.align	2
 2487              	.L162:
 2488 0e28 00100240 		.word	1073876992
 2489              		.cfi_endproc
 2490              	.LFE131:
 2492              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 2493              		.align	1
 2494              		.global	HAL_RCC_ClockConfig
 2495              		.syntax unified
 2496              		.thumb
 2497              		.thumb_func
 2498              		.fpu fpv4-sp-d16
 2500              	HAL_RCC_ClockConfig:
 2501              	.LFB132:
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
ARM GAS  /tmp/ccs8nK3N.s 			page 76


 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         currently used as system clock source.
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2502              		.loc 1 697 0
 2503              		.cfi_startproc
 2504              		@ args = 0, pretend = 0, frame = 120
 2505              		@ frame_needed = 1, uses_anonymous_args = 0
 2506 0000 80B5     		push	{r7, lr}
 2507              	.LCFI10:
 2508              		.cfi_def_cfa_offset 8
 2509              		.cfi_offset 7, -8
 2510              		.cfi_offset 14, -4
 2511 0002 9EB0     		sub	sp, sp, #120
 2512              	.LCFI11:
 2513              		.cfi_def_cfa_offset 128
 2514 0004 00AF     		add	r7, sp, #0
 2515              	.LCFI12:
 2516              		.cfi_def_cfa_register 7
 2517 0006 7860     		str	r0, [r7, #4]
 2518 0008 3960     		str	r1, [r7]
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 2519              		.loc 1 698 0
 2520 000a 0023     		movs	r3, #0
 2521 000c 7B67     		str	r3, [r7, #116]
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check Null pointer */
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 2522              		.loc 1 701 0
 2523 000e 7B68     		ldr	r3, [r7, #4]
 2524 0010 002B     		cmp	r3, #0
 2525 0012 01D1     		bne	.L165
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 2526              		.loc 1 703 0
 2527 0014 0123     		movs	r3, #1
 2528 0016 62E1     		b	.L166
 2529              	.L165:
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     (HCLK) of the device. */
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 2530              		.loc 1 715 0
 2531 0018 904B     		ldr	r3, .L197
ARM GAS  /tmp/ccs8nK3N.s 			page 77


 2532 001a 1B68     		ldr	r3, [r3]
 2533 001c 03F00703 		and	r3, r3, #7
 2534 0020 3A68     		ldr	r2, [r7]
 2535 0022 9A42     		cmp	r2, r3
 2536 0024 10D9     		bls	.L167
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 2537              		.loc 1 718 0
 2538 0026 8D4B     		ldr	r3, .L197
 2539 0028 1B68     		ldr	r3, [r3]
 2540 002a 23F00702 		bic	r2, r3, #7
 2541 002e 8B49     		ldr	r1, .L197
 2542 0030 3B68     		ldr	r3, [r7]
 2543 0032 1343     		orrs	r3, r3, r2
 2544 0034 0B60     		str	r3, [r1]
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 2545              		.loc 1 722 0
 2546 0036 894B     		ldr	r3, .L197
 2547 0038 1B68     		ldr	r3, [r3]
 2548 003a 03F00703 		and	r3, r3, #7
 2549 003e 3A68     		ldr	r2, [r7]
 2550 0040 9A42     		cmp	r2, r3
 2551 0042 01D0     		beq	.L167
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 2552              		.loc 1 724 0
 2553 0044 0123     		movs	r3, #1
 2554 0046 4AE1     		b	.L166
 2555              	.L167:
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 2556              		.loc 1 729 0
 2557 0048 7B68     		ldr	r3, [r7, #4]
 2558 004a 1B68     		ldr	r3, [r3]
 2559 004c 03F00203 		and	r3, r3, #2
 2560 0050 002B     		cmp	r3, #0
 2561 0052 08D0     		beq	.L168
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2562              		.loc 1 732 0
 2563 0054 824B     		ldr	r3, .L197+4
 2564 0056 5B68     		ldr	r3, [r3, #4]
 2565 0058 23F0F002 		bic	r2, r3, #240
 2566 005c 7B68     		ldr	r3, [r7, #4]
 2567 005e 9B68     		ldr	r3, [r3, #8]
 2568 0060 7F49     		ldr	r1, .L197+4
 2569 0062 1343     		orrs	r3, r3, r2
 2570 0064 4B60     		str	r3, [r1, #4]
 2571              	.L168:
ARM GAS  /tmp/ccs8nK3N.s 			page 78


 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 2572              		.loc 1 736 0
 2573 0066 7B68     		ldr	r3, [r7, #4]
 2574 0068 1B68     		ldr	r3, [r3]
 2575 006a 03F00103 		and	r3, r3, #1
 2576 006e 002B     		cmp	r3, #0
 2577 0070 00F0DC80 		beq	.L169
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 2578              		.loc 1 741 0
 2579 0074 7B68     		ldr	r3, [r7, #4]
 2580 0076 5B68     		ldr	r3, [r3, #4]
 2581 0078 012B     		cmp	r3, #1
 2582 007a 3CD1     		bne	.L170
 2583 007c 4FF40033 		mov	r3, #131072
 2584 0080 3B67     		str	r3, [r7, #112]
 2585              	.LBB294:
 2586              	.LBB295:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2587              		.loc 2 988 0
 2588 0082 3B6F     		ldr	r3, [r7, #112]
 2589              		.syntax unified
 2590              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2591 0084 93FAA3F3 		rbit r3, r3
 2592              	@ 0 "" 2
 2593              		.thumb
 2594              		.syntax unified
 2595 0088 FB66     		str	r3, [r7, #108]
 2596              		.loc 2 1001 0
 2597 008a FB6E     		ldr	r3, [r7, #108]
 2598              	.LBE295:
 2599              	.LBE294:
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 2600              		.loc 1 744 0
 2601 008c B3FA83F3 		clz	r3, r3
 2602 0090 DBB2     		uxtb	r3, r3
 2603 0092 5B09     		lsrs	r3, r3, #5
 2604 0094 DBB2     		uxtb	r3, r3
 2605 0096 43F00103 		orr	r3, r3, #1
 2606 009a DBB2     		uxtb	r3, r3
 2607 009c 012B     		cmp	r3, #1
 2608 009e 02D1     		bne	.L172
 2609              		.loc 1 744 0 is_stmt 0 discriminator 1
 2610 00a0 6F4B     		ldr	r3, .L197+4
 2611 00a2 1B68     		ldr	r3, [r3]
 2612 00a4 0FE0     		b	.L173
 2613              	.L172:
 2614 00a6 4FF40033 		mov	r3, #131072
 2615 00aa BB66     		str	r3, [r7, #104]
ARM GAS  /tmp/ccs8nK3N.s 			page 79


 2616              	.LBB296:
 2617              	.LBB297:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2618              		.loc 2 988 0 is_stmt 1 discriminator 2
 2619 00ac BB6E     		ldr	r3, [r7, #104]
 2620              		.syntax unified
 2621              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2622 00ae 93FAA3F3 		rbit r3, r3
 2623              	@ 0 "" 2
 2624              		.thumb
 2625              		.syntax unified
 2626 00b2 7B66     		str	r3, [r7, #100]
 2627 00b4 4FF40033 		mov	r3, #131072
 2628 00b8 3B66     		str	r3, [r7, #96]
 2629              	.LBE297:
 2630              	.LBE296:
 2631              	.LBB298:
 2632              	.LBB299:
 2633 00ba 3B6E     		ldr	r3, [r7, #96]
 2634              		.syntax unified
 2635              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2636 00bc 93FAA3F3 		rbit r3, r3
 2637              	@ 0 "" 2
 2638              		.thumb
 2639              		.syntax unified
 2640 00c0 FB65     		str	r3, [r7, #92]
 2641              	.LBE299:
 2642              	.LBE298:
 2643              		.loc 1 744 0 discriminator 2
 2644 00c2 674B     		ldr	r3, .L197+4
 2645 00c4 5B6A     		ldr	r3, [r3, #36]
 2646              	.L173:
 2647 00c6 4FF40032 		mov	r2, #131072
 2648 00ca BA65     		str	r2, [r7, #88]
 2649              	.LBB300:
 2650              	.LBB301:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2651              		.loc 2 988 0 discriminator 12
 2652 00cc BA6D     		ldr	r2, [r7, #88]
 2653              		.syntax unified
 2654              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2655 00ce 92FAA2F2 		rbit r2, r2
 2656              	@ 0 "" 2
 2657              		.thumb
 2658              		.syntax unified
 2659 00d2 7A65     		str	r2, [r7, #84]
 2660              		.loc 2 1001 0 discriminator 12
 2661 00d4 7A6D     		ldr	r2, [r7, #84]
 2662              	.LBE301:
 2663              	.LBE300:
 2664              		.loc 1 744 0 discriminator 12
 2665 00d6 B2FA82F2 		clz	r2, r2
 2666 00da D2B2     		uxtb	r2, r2
 2667 00dc 42F02002 		orr	r2, r2, #32
 2668 00e0 D2B2     		uxtb	r2, r2
 2669 00e2 02F01F02 		and	r2, r2, #31
 2670 00e6 0121     		movs	r1, #1
ARM GAS  /tmp/ccs8nK3N.s 			page 80


 2671 00e8 01FA02F2 		lsl	r2, r1, r2
 2672 00ec 1340     		ands	r3, r3, r2
 2673 00ee 002B     		cmp	r3, #0
 2674 00f0 7BD1     		bne	.L177
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 2675              		.loc 1 746 0
 2676 00f2 0123     		movs	r3, #1
 2677 00f4 F3E0     		b	.L166
 2678              	.L170:
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 2679              		.loc 1 750 0
 2680 00f6 7B68     		ldr	r3, [r7, #4]
 2681 00f8 5B68     		ldr	r3, [r3, #4]
 2682 00fa 022B     		cmp	r3, #2
 2683 00fc 3CD1     		bne	.L178
 2684 00fe 4FF00073 		mov	r3, #33554432
 2685 0102 3B65     		str	r3, [r7, #80]
 2686              	.LBB302:
 2687              	.LBB303:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2688              		.loc 2 988 0
 2689 0104 3B6D     		ldr	r3, [r7, #80]
 2690              		.syntax unified
 2691              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2692 0106 93FAA3F3 		rbit r3, r3
 2693              	@ 0 "" 2
 2694              		.thumb
 2695              		.syntax unified
 2696 010a FB64     		str	r3, [r7, #76]
 2697              		.loc 2 1001 0
 2698 010c FB6C     		ldr	r3, [r7, #76]
 2699              	.LBE303:
 2700              	.LBE302:
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 2701              		.loc 1 753 0
 2702 010e B3FA83F3 		clz	r3, r3
 2703 0112 DBB2     		uxtb	r3, r3
 2704 0114 5B09     		lsrs	r3, r3, #5
 2705 0116 DBB2     		uxtb	r3, r3
 2706 0118 43F00103 		orr	r3, r3, #1
 2707 011c DBB2     		uxtb	r3, r3
 2708 011e 012B     		cmp	r3, #1
 2709 0120 02D1     		bne	.L180
 2710              		.loc 1 753 0 is_stmt 0 discriminator 1
 2711 0122 4F4B     		ldr	r3, .L197+4
 2712 0124 1B68     		ldr	r3, [r3]
 2713 0126 0FE0     		b	.L181
 2714              	.L180:
 2715 0128 4FF00073 		mov	r3, #33554432
 2716 012c BB64     		str	r3, [r7, #72]
 2717              	.LBB304:
ARM GAS  /tmp/ccs8nK3N.s 			page 81


 2718              	.LBB305:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2719              		.loc 2 988 0 is_stmt 1 discriminator 2
 2720 012e BB6C     		ldr	r3, [r7, #72]
 2721              		.syntax unified
 2722              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2723 0130 93FAA3F3 		rbit r3, r3
 2724              	@ 0 "" 2
 2725              		.thumb
 2726              		.syntax unified
 2727 0134 7B64     		str	r3, [r7, #68]
 2728 0136 4FF00073 		mov	r3, #33554432
 2729 013a 3B64     		str	r3, [r7, #64]
 2730              	.LBE305:
 2731              	.LBE304:
 2732              	.LBB306:
 2733              	.LBB307:
 2734 013c 3B6C     		ldr	r3, [r7, #64]
 2735              		.syntax unified
 2736              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2737 013e 93FAA3F3 		rbit r3, r3
 2738              	@ 0 "" 2
 2739              		.thumb
 2740              		.syntax unified
 2741 0142 FB63     		str	r3, [r7, #60]
 2742              	.LBE307:
 2743              	.LBE306:
 2744              		.loc 1 753 0 discriminator 2
 2745 0144 464B     		ldr	r3, .L197+4
 2746 0146 5B6A     		ldr	r3, [r3, #36]
 2747              	.L181:
 2748 0148 4FF00072 		mov	r2, #33554432
 2749 014c BA63     		str	r2, [r7, #56]
 2750              	.LBB308:
 2751              	.LBB309:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2752              		.loc 2 988 0 discriminator 12
 2753 014e BA6B     		ldr	r2, [r7, #56]
 2754              		.syntax unified
 2755              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2756 0150 92FAA2F2 		rbit r2, r2
 2757              	@ 0 "" 2
 2758              		.thumb
 2759              		.syntax unified
 2760 0154 7A63     		str	r2, [r7, #52]
 2761              		.loc 2 1001 0 discriminator 12
 2762 0156 7A6B     		ldr	r2, [r7, #52]
 2763              	.LBE309:
 2764              	.LBE308:
 2765              		.loc 1 753 0 discriminator 12
 2766 0158 B2FA82F2 		clz	r2, r2
 2767 015c D2B2     		uxtb	r2, r2
 2768 015e 42F02002 		orr	r2, r2, #32
 2769 0162 D2B2     		uxtb	r2, r2
 2770 0164 02F01F02 		and	r2, r2, #31
 2771 0168 0121     		movs	r1, #1
 2772 016a 01FA02F2 		lsl	r2, r1, r2
ARM GAS  /tmp/ccs8nK3N.s 			page 82


 2773 016e 1340     		ands	r3, r3, r2
 2774 0170 002B     		cmp	r3, #0
 2775 0172 3AD1     		bne	.L177
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 2776              		.loc 1 755 0
 2777 0174 0123     		movs	r3, #1
 2778 0176 B2E0     		b	.L166
 2779              	.L178:
 2780 0178 0223     		movs	r3, #2
 2781 017a 3B63     		str	r3, [r7, #48]
 2782              	.LBB310:
 2783              	.LBB311:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2784              		.loc 2 988 0
 2785 017c 3B6B     		ldr	r3, [r7, #48]
 2786              		.syntax unified
 2787              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2788 017e 93FAA3F3 		rbit r3, r3
 2789              	@ 0 "" 2
 2790              		.thumb
 2791              		.syntax unified
 2792 0182 FB62     		str	r3, [r7, #44]
 2793              		.loc 2 1001 0
 2794 0184 FB6A     		ldr	r3, [r7, #44]
 2795              	.LBE311:
 2796              	.LBE310:
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 2797              		.loc 1 762 0
 2798 0186 B3FA83F3 		clz	r3, r3
 2799 018a DBB2     		uxtb	r3, r3
 2800 018c 5B09     		lsrs	r3, r3, #5
 2801 018e DBB2     		uxtb	r3, r3
 2802 0190 43F00103 		orr	r3, r3, #1
 2803 0194 DBB2     		uxtb	r3, r3
 2804 0196 012B     		cmp	r3, #1
 2805 0198 02D1     		bne	.L186
 2806              		.loc 1 762 0 is_stmt 0 discriminator 1
 2807 019a 314B     		ldr	r3, .L197+4
 2808 019c 1B68     		ldr	r3, [r3]
 2809 019e 0DE0     		b	.L187
 2810              	.L186:
 2811 01a0 0223     		movs	r3, #2
 2812 01a2 BB62     		str	r3, [r7, #40]
 2813              	.LBB312:
 2814              	.LBB313:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2815              		.loc 2 988 0 is_stmt 1 discriminator 2
 2816 01a4 BB6A     		ldr	r3, [r7, #40]
 2817              		.syntax unified
 2818              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccs8nK3N.s 			page 83


 2819 01a6 93FAA3F3 		rbit r3, r3
 2820              	@ 0 "" 2
 2821              		.thumb
 2822              		.syntax unified
 2823 01aa 7B62     		str	r3, [r7, #36]
 2824 01ac 0223     		movs	r3, #2
 2825 01ae 3B62     		str	r3, [r7, #32]
 2826              	.LBE313:
 2827              	.LBE312:
 2828              	.LBB314:
 2829              	.LBB315:
 2830 01b0 3B6A     		ldr	r3, [r7, #32]
 2831              		.syntax unified
 2832              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2833 01b2 93FAA3F3 		rbit r3, r3
 2834              	@ 0 "" 2
 2835              		.thumb
 2836              		.syntax unified
 2837 01b6 FB61     		str	r3, [r7, #28]
 2838              	.LBE315:
 2839              	.LBE314:
 2840              		.loc 1 762 0 discriminator 2
 2841 01b8 294B     		ldr	r3, .L197+4
 2842 01ba 5B6A     		ldr	r3, [r3, #36]
 2843              	.L187:
 2844 01bc 0222     		movs	r2, #2
 2845 01be BA61     		str	r2, [r7, #24]
 2846              	.LBB316:
 2847              	.LBB317:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2848              		.loc 2 988 0 discriminator 12
 2849 01c0 BA69     		ldr	r2, [r7, #24]
 2850              		.syntax unified
 2851              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2852 01c2 92FAA2F2 		rbit r2, r2
 2853              	@ 0 "" 2
 2854              		.thumb
 2855              		.syntax unified
 2856 01c6 7A61     		str	r2, [r7, #20]
 2857              		.loc 2 1001 0 discriminator 12
 2858 01c8 7A69     		ldr	r2, [r7, #20]
 2859              	.LBE317:
 2860              	.LBE316:
 2861              		.loc 1 762 0 discriminator 12
 2862 01ca B2FA82F2 		clz	r2, r2
 2863 01ce D2B2     		uxtb	r2, r2
 2864 01d0 42F02002 		orr	r2, r2, #32
 2865 01d4 D2B2     		uxtb	r2, r2
 2866 01d6 02F01F02 		and	r2, r2, #31
 2867 01da 0121     		movs	r1, #1
 2868 01dc 01FA02F2 		lsl	r2, r1, r2
 2869 01e0 1340     		ands	r3, r3, r2
 2870 01e2 002B     		cmp	r3, #0
 2871 01e4 01D1     		bne	.L177
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 2872              		.loc 1 764 0
ARM GAS  /tmp/ccs8nK3N.s 			page 84


 2873 01e6 0123     		movs	r3, #1
 2874 01e8 79E0     		b	.L166
 2875              	.L177:
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 2876              		.loc 1 768 0
 2877 01ea 1D4B     		ldr	r3, .L197+4
 2878 01ec 5B68     		ldr	r3, [r3, #4]
 2879 01ee 23F00302 		bic	r2, r3, #3
 2880 01f2 7B68     		ldr	r3, [r7, #4]
 2881 01f4 5B68     		ldr	r3, [r3, #4]
 2882 01f6 1A49     		ldr	r1, .L197+4
 2883 01f8 1343     		orrs	r3, r3, r2
 2884 01fa 4B60     		str	r3, [r1, #4]
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Get Start Tick */
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 2885              		.loc 1 771 0
 2886 01fc FFF7FEFF 		bl	HAL_GetTick
 2887 0200 7867     		str	r0, [r7, #116]
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 2888              		.loc 1 773 0
 2889 0202 0AE0     		b	.L191
 2890              	.L192:
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 2891              		.loc 1 775 0
 2892 0204 FFF7FEFF 		bl	HAL_GetTick
 2893 0208 0246     		mov	r2, r0
 2894 020a 7B6F     		ldr	r3, [r7, #116]
 2895 020c D31A     		subs	r3, r2, r3
 2896 020e 41F28832 		movw	r2, #5000
 2897 0212 9342     		cmp	r3, r2
 2898 0214 01D9     		bls	.L191
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_TIMEOUT;
 2899              		.loc 1 777 0
 2900 0216 0323     		movs	r3, #3
 2901 0218 61E0     		b	.L166
 2902              	.L191:
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2903              		.loc 1 773 0
 2904 021a 114B     		ldr	r3, .L197+4
 2905 021c 5B68     		ldr	r3, [r3, #4]
 2906 021e 03F00C02 		and	r2, r3, #12
 2907 0222 7B68     		ldr	r3, [r7, #4]
 2908 0224 5B68     		ldr	r3, [r3, #4]
 2909 0226 9B00     		lsls	r3, r3, #2
 2910 0228 9A42     		cmp	r2, r3
 2911 022a EBD1     		bne	.L192
 2912              	.L169:
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccs8nK3N.s 			page 85


 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 2913              		.loc 1 782 0
 2914 022c 0B4B     		ldr	r3, .L197
 2915 022e 1B68     		ldr	r3, [r3]
 2916 0230 03F00703 		and	r3, r3, #7
 2917 0234 3A68     		ldr	r2, [r7]
 2918 0236 9A42     		cmp	r2, r3
 2919 0238 14D2     		bcs	.L193
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 2920              		.loc 1 785 0
 2921 023a 084B     		ldr	r3, .L197
 2922 023c 1B68     		ldr	r3, [r3]
 2923 023e 23F00702 		bic	r2, r3, #7
 2924 0242 0649     		ldr	r1, .L197
 2925 0244 3B68     		ldr	r3, [r7]
 2926 0246 1343     		orrs	r3, r3, r2
 2927 0248 0B60     		str	r3, [r1]
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 2928              		.loc 1 789 0
 2929 024a 044B     		ldr	r3, .L197
 2930 024c 1B68     		ldr	r3, [r3]
 2931 024e 03F00703 		and	r3, r3, #7
 2932 0252 3A68     		ldr	r2, [r7]
 2933 0254 9A42     		cmp	r2, r3
 2934 0256 05D0     		beq	.L193
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 2935              		.loc 1 791 0
 2936 0258 0123     		movs	r3, #1
 2937 025a 40E0     		b	.L166
 2938              	.L198:
 2939              		.align	2
 2940              	.L197:
 2941 025c 00200240 		.word	1073881088
 2942 0260 00100240 		.word	1073876992
 2943              	.L193:
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 2944              		.loc 1 796 0
 2945 0264 7B68     		ldr	r3, [r7, #4]
 2946 0266 1B68     		ldr	r3, [r3]
 2947 0268 03F00403 		and	r3, r3, #4
 2948 026c 002B     		cmp	r3, #0
 2949 026e 08D0     		beq	.L194
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 2950              		.loc 1 799 0
ARM GAS  /tmp/ccs8nK3N.s 			page 86


 2951 0270 1D4B     		ldr	r3, .L199
 2952 0272 5B68     		ldr	r3, [r3, #4]
 2953 0274 23F4E062 		bic	r2, r3, #1792
 2954 0278 7B68     		ldr	r3, [r7, #4]
 2955 027a DB68     		ldr	r3, [r3, #12]
 2956 027c 1A49     		ldr	r1, .L199
 2957 027e 1343     		orrs	r3, r3, r2
 2958 0280 4B60     		str	r3, [r1, #4]
 2959              	.L194:
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 2960              		.loc 1 803 0
 2961 0282 7B68     		ldr	r3, [r7, #4]
 2962 0284 1B68     		ldr	r3, [r3]
 2963 0286 03F00803 		and	r3, r3, #8
 2964 028a 002B     		cmp	r3, #0
 2965 028c 09D0     		beq	.L195
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 2966              		.loc 1 806 0
 2967 028e 164B     		ldr	r3, .L199
 2968 0290 5B68     		ldr	r3, [r3, #4]
 2969 0292 23F46052 		bic	r2, r3, #14336
 2970 0296 7B68     		ldr	r3, [r7, #4]
 2971 0298 1B69     		ldr	r3, [r3, #16]
 2972 029a DB00     		lsls	r3, r3, #3
 2973 029c 1249     		ldr	r1, .L199
 2974 029e 1343     		orrs	r3, r3, r2
 2975 02a0 4B60     		str	r3, [r1, #4]
 2976              	.L195:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 2977              		.loc 1 810 0
 2978 02a2 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2979 02a6 0146     		mov	r1, r0
 2980 02a8 0F4B     		ldr	r3, .L199
 2981 02aa 5B68     		ldr	r3, [r3, #4]
 2982 02ac 03F0F003 		and	r3, r3, #240
 2983 02b0 F022     		movs	r2, #240
 2984 02b2 3A61     		str	r2, [r7, #16]
 2985              	.LBB318:
 2986              	.LBB319:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2987              		.loc 2 988 0
 2988 02b4 3A69     		ldr	r2, [r7, #16]
 2989              		.syntax unified
 2990              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2991 02b6 92FAA2F2 		rbit r2, r2
 2992              	@ 0 "" 2
 2993              		.thumb
 2994              		.syntax unified
 2995 02ba FA60     		str	r2, [r7, #12]
ARM GAS  /tmp/ccs8nK3N.s 			page 87


 2996              		.loc 2 1001 0
 2997 02bc FA68     		ldr	r2, [r7, #12]
 2998              	.LBE319:
 2999              	.LBE318:
 3000              		.loc 1 810 0
 3001 02be B2FA82F2 		clz	r2, r2
 3002 02c2 D2B2     		uxtb	r2, r2
 3003 02c4 D340     		lsrs	r3, r3, r2
 3004 02c6 094A     		ldr	r2, .L199+4
 3005 02c8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3006 02ca 21FA03F3 		lsr	r3, r1, r3
 3007 02ce 084A     		ldr	r2, .L199+8
 3008 02d0 1360     		str	r3, [r2]
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_InitTick (uwTickPrio);
 3009              		.loc 1 813 0
 3010 02d2 084B     		ldr	r3, .L199+12
 3011 02d4 1B68     		ldr	r3, [r3]
 3012 02d6 1846     		mov	r0, r3
 3013 02d8 FFF7FEFF 		bl	HAL_InitTick
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 3014              		.loc 1 815 0
 3015 02dc 0023     		movs	r3, #0
 3016              	.L166:
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3017              		.loc 1 816 0
 3018 02de 1846     		mov	r0, r3
 3019 02e0 7837     		adds	r7, r7, #120
 3020              	.LCFI13:
 3021              		.cfi_def_cfa_offset 8
 3022 02e2 BD46     		mov	sp, r7
 3023              	.LCFI14:
 3024              		.cfi_def_cfa_register 13
 3025              		@ sp needed
 3026 02e4 80BD     		pop	{r7, pc}
 3027              	.L200:
 3028 02e6 00BF     		.align	2
 3029              	.L199:
 3030 02e8 00100240 		.word	1073876992
 3031 02ec 00000000 		.word	AHBPrescTable
 3032 02f0 00000000 		.word	SystemCoreClock
 3033 02f4 00000000 		.word	uwTickPrio
 3034              		.cfi_endproc
 3035              	.LFE132:
 3037              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 3038              		.align	1
 3039              		.global	HAL_RCC_MCOConfig
 3040              		.syntax unified
 3041              		.thumb
 3042              		.thumb_func
 3043              		.fpu fpv4-sp-d16
 3045              	HAL_RCC_MCOConfig:
 3046              	.LFB133:
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
ARM GAS  /tmp/ccs8nK3N.s 			page 88


 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim   
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================  
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     frequencies.
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
ARM GAS  /tmp/ccs8nK3N.s 			page 89


 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3047              		.loc 1 889 0
 3048              		.cfi_startproc
 3049              		@ args = 0, pretend = 0, frame = 40
 3050              		@ frame_needed = 1, uses_anonymous_args = 0
 3051 0000 80B5     		push	{r7, lr}
 3052              	.LCFI15:
 3053              		.cfi_def_cfa_offset 8
 3054              		.cfi_offset 7, -8
 3055              		.cfi_offset 14, -4
 3056 0002 8AB0     		sub	sp, sp, #40
 3057              	.LCFI16:
 3058              		.cfi_def_cfa_offset 48
 3059 0004 00AF     		add	r7, sp, #0
 3060              	.LCFI17:
 3061              		.cfi_def_cfa_register 7
 3062 0006 F860     		str	r0, [r7, #12]
 3063 0008 B960     		str	r1, [r7, #8]
 3064 000a 7A60     		str	r2, [r7, #4]
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 3065              		.loc 1 898 0
 3066 000c 0223     		movs	r3, #2
 3067 000e BB61     		str	r3, [r7, #24]
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 3068              		.loc 1 899 0
 3069 0010 0323     		movs	r3, #3
 3070 0012 3B62     		str	r3, [r7, #32]
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 3071              		.loc 1 900 0
 3072 0014 0023     		movs	r3, #0
 3073 0016 FB61     		str	r3, [r7, #28]
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 3074              		.loc 1 901 0
 3075 0018 4FF48073 		mov	r3, #256
 3076 001c 7B61     		str	r3, [r7, #20]
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
ARM GAS  /tmp/ccs8nK3N.s 			page 90


 3077              		.loc 1 902 0
 3078 001e 0023     		movs	r3, #0
 3079 0020 7B62     		str	r3, [r7, #36]
 3080              	.LBB320:
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 3081              		.loc 1 905 0
 3082 0022 104B     		ldr	r3, .L202
 3083 0024 5B69     		ldr	r3, [r3, #20]
 3084 0026 0F4A     		ldr	r2, .L202
 3085 0028 43F40033 		orr	r3, r3, #131072
 3086 002c 5361     		str	r3, [r2, #20]
 3087 002e 0D4B     		ldr	r3, .L202
 3088 0030 5B69     		ldr	r3, [r3, #20]
 3089 0032 03F40033 		and	r3, r3, #131072
 3090 0036 3B61     		str	r3, [r7, #16]
 3091 0038 3B69     		ldr	r3, [r7, #16]
 3092              	.LBE320:
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 3093              		.loc 1 907 0
 3094 003a 07F11403 		add	r3, r7, #20
 3095 003e 1946     		mov	r1, r3
 3096 0040 4FF09040 		mov	r0, #1207959552
 3097 0044 FFF7FEFF 		bl	HAL_GPIO_Init
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO clock source */
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 3098              		.loc 1 910 0
 3099 0048 064B     		ldr	r3, .L202
 3100 004a 5B68     		ldr	r3, [r3, #4]
 3101 004c 23F0EE42 		bic	r2, r3, #1996488704
 3102 0050 B968     		ldr	r1, [r7, #8]
 3103 0052 7B68     		ldr	r3, [r7, #4]
 3104 0054 0B43     		orrs	r3, r3, r1
 3105 0056 0349     		ldr	r1, .L202
 3106 0058 1343     		orrs	r3, r3, r2
 3107 005a 4B60     		str	r3, [r1, #4]
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3108              		.loc 1 911 0
 3109 005c 00BF     		nop
 3110 005e 2837     		adds	r7, r7, #40
 3111              	.LCFI18:
 3112              		.cfi_def_cfa_offset 8
 3113 0060 BD46     		mov	sp, r7
 3114              	.LCFI19:
 3115              		.cfi_def_cfa_register 13
 3116              		@ sp needed
 3117 0062 80BD     		pop	{r7, pc}
 3118              	.L203:
 3119              		.align	2
 3120              	.L202:
 3121 0064 00100240 		.word	1073876992
 3122              		.cfi_endproc
 3123              	.LFE133:
 3125              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
ARM GAS  /tmp/ccs8nK3N.s 			page 91


 3126              		.align	1
 3127              		.global	HAL_RCC_EnableCSS
 3128              		.syntax unified
 3129              		.thumb
 3130              		.thumb_func
 3131              		.fpu fpv4-sp-d16
 3133              	HAL_RCC_EnableCSS:
 3134              	.LFB134:
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3135              		.loc 1 923 0
 3136              		.cfi_startproc
 3137              		@ args = 0, pretend = 0, frame = 8
 3138              		@ frame_needed = 1, uses_anonymous_args = 0
 3139              		@ link register save eliminated.
 3140 0000 80B4     		push	{r7}
 3141              	.LCFI20:
 3142              		.cfi_def_cfa_offset 4
 3143              		.cfi_offset 7, -4
 3144 0002 83B0     		sub	sp, sp, #12
 3145              	.LCFI21:
 3146              		.cfi_def_cfa_offset 16
 3147 0004 00AF     		add	r7, sp, #0
 3148              	.LCFI22:
 3149              		.cfi_def_cfa_register 7
 3150 0006 4FF40023 		mov	r3, #524288
 3151 000a 7B60     		str	r3, [r7, #4]
 3152              	.LBB321:
 3153              	.LBB322:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3154              		.loc 2 988 0
 3155 000c 7B68     		ldr	r3, [r7, #4]
 3156              		.syntax unified
 3157              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3158 000e 93FAA3F3 		rbit r3, r3
 3159              	@ 0 "" 2
 3160              		.thumb
 3161              		.syntax unified
 3162 0012 3B60     		str	r3, [r7]
 3163              		.loc 2 1001 0
 3164 0014 3B68     		ldr	r3, [r7]
 3165              	.LBE322:
 3166              	.LBE321:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 3167              		.loc 1 924 0
 3168 0016 B3FA83F3 		clz	r3, r3
 3169 001a DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccs8nK3N.s 			page 92


 3170 001c 03F18453 		add	r3, r3, #276824064
 3171 0020 03F58413 		add	r3, r3, #1081344
 3172 0024 9B00     		lsls	r3, r3, #2
 3173 0026 1A46     		mov	r2, r3
 3174 0028 0123     		movs	r3, #1
 3175 002a 1360     		str	r3, [r2]
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3176              		.loc 1 925 0
 3177 002c 00BF     		nop
 3178 002e 0C37     		adds	r7, r7, #12
 3179              	.LCFI23:
 3180              		.cfi_def_cfa_offset 4
 3181 0030 BD46     		mov	sp, r7
 3182              	.LCFI24:
 3183              		.cfi_def_cfa_register 13
 3184              		@ sp needed
 3185 0032 5DF8047B 		ldr	r7, [sp], #4
 3186              	.LCFI25:
 3187              		.cfi_restore 7
 3188              		.cfi_def_cfa_offset 0
 3189 0036 7047     		bx	lr
 3190              		.cfi_endproc
 3191              	.LFE134:
 3193              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 3194              		.align	1
 3195              		.global	HAL_RCC_DisableCSS
 3196              		.syntax unified
 3197              		.thumb
 3198              		.thumb_func
 3199              		.fpu fpv4-sp-d16
 3201              	HAL_RCC_DisableCSS:
 3202              	.LFB135:
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3203              		.loc 1 932 0
 3204              		.cfi_startproc
 3205              		@ args = 0, pretend = 0, frame = 8
 3206              		@ frame_needed = 1, uses_anonymous_args = 0
 3207              		@ link register save eliminated.
 3208 0000 80B4     		push	{r7}
 3209              	.LCFI26:
 3210              		.cfi_def_cfa_offset 4
 3211              		.cfi_offset 7, -4
 3212 0002 83B0     		sub	sp, sp, #12
 3213              	.LCFI27:
 3214              		.cfi_def_cfa_offset 16
 3215 0004 00AF     		add	r7, sp, #0
 3216              	.LCFI28:
 3217              		.cfi_def_cfa_register 7
 3218 0006 4FF40023 		mov	r3, #524288
 3219 000a 7B60     		str	r3, [r7, #4]
 3220              	.LBB323:
ARM GAS  /tmp/ccs8nK3N.s 			page 93


 3221              	.LBB324:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3222              		.loc 2 988 0
 3223 000c 7B68     		ldr	r3, [r7, #4]
 3224              		.syntax unified
 3225              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3226 000e 93FAA3F3 		rbit r3, r3
 3227              	@ 0 "" 2
 3228              		.thumb
 3229              		.syntax unified
 3230 0012 3B60     		str	r3, [r7]
 3231              		.loc 2 1001 0
 3232 0014 3B68     		ldr	r3, [r7]
 3233              	.LBE324:
 3234              	.LBE323:
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 3235              		.loc 1 933 0
 3236 0016 B3FA83F3 		clz	r3, r3
 3237 001a DBB2     		uxtb	r3, r3
 3238 001c 03F18453 		add	r3, r3, #276824064
 3239 0020 03F58413 		add	r3, r3, #1081344
 3240 0024 9B00     		lsls	r3, r3, #2
 3241 0026 1A46     		mov	r2, r3
 3242 0028 0023     		movs	r3, #0
 3243 002a 1360     		str	r3, [r2]
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3244              		.loc 1 934 0
 3245 002c 00BF     		nop
 3246 002e 0C37     		adds	r7, r7, #12
 3247              	.LCFI29:
 3248              		.cfi_def_cfa_offset 4
 3249 0030 BD46     		mov	sp, r7
 3250              	.LCFI30:
 3251              		.cfi_def_cfa_register 13
 3252              		@ sp needed
 3253 0032 5DF8047B 		ldr	r7, [sp], #4
 3254              	.LCFI31:
 3255              		.cfi_restore 7
 3256              		.cfi_def_cfa_offset 0
 3257 0036 7047     		bx	lr
 3258              		.cfi_endproc
 3259              	.LFE135:
 3261              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 3262              		.align	1
 3263              		.global	HAL_RCC_GetSysClockFreq
 3264              		.syntax unified
 3265              		.thumb
 3266              		.thumb_func
 3267              		.fpu fpv4-sp-d16
 3269              	HAL_RCC_GetSysClockFreq:
 3270              	.LFB136:
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         constant and the selected clock source:
ARM GAS  /tmp/ccs8nK3N.s 			page 94


 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               in voltage and temperature.
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                have wrong result.
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                  
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         value for HSE crystal.
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval SYSCLK frequency
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3271              		.loc 1 966 0
 3272              		.cfi_startproc
 3273              		@ args = 0, pretend = 0, frame = 40
 3274              		@ frame_needed = 1, uses_anonymous_args = 0
 3275              		@ link register save eliminated.
 3276 0000 80B4     		push	{r7}
 3277              	.LCFI32:
 3278              		.cfi_def_cfa_offset 4
 3279              		.cfi_offset 7, -4
 3280 0002 8BB0     		sub	sp, sp, #44
 3281              	.LCFI33:
 3282              		.cfi_def_cfa_offset 48
 3283 0004 00AF     		add	r7, sp, #0
 3284              	.LCFI34:
 3285              		.cfi_def_cfa_register 7
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 3286              		.loc 1 967 0
 3287 0006 0023     		movs	r3, #0
 3288 0008 FB61     		str	r3, [r7, #28]
 3289 000a 0023     		movs	r3, #0
 3290 000c BB61     		str	r3, [r7, #24]
 3291 000e 0023     		movs	r3, #0
 3292 0010 7B62     		str	r3, [r7, #36]
 3293 0012 0023     		movs	r3, #0
 3294 0014 7B61     		str	r3, [r7, #20]
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 3295              		.loc 1 968 0
 3296 0016 0023     		movs	r3, #0
 3297 0018 3B62     		str	r3, [r7, #32]
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
ARM GAS  /tmp/ccs8nK3N.s 			page 95


 3298              		.loc 1 970 0
 3299 001a 2A4B     		ldr	r3, .L219
 3300 001c 5B68     		ldr	r3, [r3, #4]
 3301 001e FB61     		str	r3, [r7, #28]
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 3302              		.loc 1 973 0
 3303 0020 FB69     		ldr	r3, [r7, #28]
 3304 0022 03F00C03 		and	r3, r3, #12
 3305 0026 042B     		cmp	r3, #4
 3306 0028 02D0     		beq	.L210
 3307 002a 082B     		cmp	r3, #8
 3308 002c 03D0     		beq	.L211
 3309 002e 3FE0     		b	.L218
 3310              	.L210:
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 3311              		.loc 1 977 0
 3312 0030 254B     		ldr	r3, .L219+4
 3313 0032 3B62     		str	r3, [r7, #32]
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 3314              		.loc 1 978 0
 3315 0034 3FE0     		b	.L212
 3316              	.L211:
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLL
 3317              		.loc 1 982 0
 3318 0036 FB69     		ldr	r3, [r7, #28]
 3319 0038 03F47013 		and	r3, r3, #3932160
 3320 003c 4FF47012 		mov	r2, #3932160
 3321 0040 BA60     		str	r2, [r7, #8]
 3322              	.LBB325:
 3323              	.LBB326:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3324              		.loc 2 988 0
 3325 0042 BA68     		ldr	r2, [r7, #8]
 3326              		.syntax unified
 3327              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3328 0044 92FAA2F2 		rbit r2, r2
 3329              	@ 0 "" 2
 3330              		.thumb
 3331              		.syntax unified
 3332 0048 7A60     		str	r2, [r7, #4]
 3333              		.loc 2 1001 0
 3334 004a 7A68     		ldr	r2, [r7, #4]
 3335              	.LBE326:
 3336              	.LBE325:
 3337              		.loc 1 982 0
 3338 004c B2FA82F2 		clz	r2, r2
 3339 0050 D2B2     		uxtb	r2, r2
 3340 0052 D340     		lsrs	r3, r3, r2
 3341 0054 1D4A     		ldr	r2, .L219+8
ARM GAS  /tmp/ccs8nK3N.s 			page 96


 3342 0056 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3343 0058 7B61     		str	r3, [r7, #20]
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFG
 3344              		.loc 1 983 0
 3345 005a 1A4B     		ldr	r3, .L219
 3346 005c DB6A     		ldr	r3, [r3, #44]
 3347 005e 03F00F03 		and	r3, r3, #15
 3348 0062 0F22     		movs	r2, #15
 3349 0064 3A61     		str	r2, [r7, #16]
 3350              	.LBB327:
 3351              	.LBB328:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3352              		.loc 2 988 0
 3353 0066 3A69     		ldr	r2, [r7, #16]
 3354              		.syntax unified
 3355              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3356 0068 92FAA2F2 		rbit r2, r2
 3357              	@ 0 "" 2
 3358              		.thumb
 3359              		.syntax unified
 3360 006c FA60     		str	r2, [r7, #12]
 3361              		.loc 2 1001 0
 3362 006e FA68     		ldr	r2, [r7, #12]
 3363              	.LBE328:
 3364              	.LBE327:
 3365              		.loc 1 983 0
 3366 0070 B2FA82F2 		clz	r2, r2
 3367 0074 D2B2     		uxtb	r2, r2
 3368 0076 D340     		lsrs	r3, r3, r2
 3369 0078 154A     		ldr	r2, .L219+12
 3370 007a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3371 007c BB61     		str	r3, [r7, #24]
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC_HSE_PREDIV) == RCC_CFGR_PLLSRC_HSE_PREDIV)
 3372              		.loc 1 996 0
 3373 007e FB69     		ldr	r3, [r7, #28]
 3374 0080 03F48033 		and	r3, r3, #65536
 3375 0084 002B     		cmp	r3, #0
 3376 0086 08D0     		beq	.L215
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 3377              		.loc 1 999 0
 3378 0088 0F4A     		ldr	r2, .L219+4
 3379 008a BB69     		ldr	r3, [r7, #24]
 3380 008c B2FBF3F2 		udiv	r2, r2, r3
ARM GAS  /tmp/ccs8nK3N.s 			page 97


 3381 0090 7B69     		ldr	r3, [r7, #20]
 3382 0092 02FB03F3 		mul	r3, r2, r3
 3383 0096 7B62     		str	r3, [r7, #36]
 3384 0098 07E0     		b	.L216
 3385              	.L215:
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 3386              		.loc 1 1004 0
 3387 009a 0B4A     		ldr	r2, .L219+4
 3388 009c BB69     		ldr	r3, [r7, #24]
 3389 009e B2FBF3F2 		udiv	r2, r2, r3
 3390 00a2 7B69     		ldr	r3, [r7, #20]
 3391 00a4 02FB03F3 		mul	r3, r2, r3
 3392 00a8 7B62     		str	r3, [r7, #36]
 3393              	.L216:
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = pllclk;
 3394              		.loc 1 1007 0
 3395 00aa 7B6A     		ldr	r3, [r7, #36]
 3396 00ac 3B62     		str	r3, [r7, #32]
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 3397              		.loc 1 1008 0
 3398 00ae 02E0     		b	.L212
 3399              	.L218:
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     default: /* HSI used as system clock */
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 3400              		.loc 1 1013 0
 3401 00b0 054B     		ldr	r3, .L219+4
 3402 00b2 3B62     		str	r3, [r7, #32]
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 3403              		.loc 1 1014 0
 3404 00b4 00BF     		nop
 3405              	.L212:
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return sysclockfreq;
 3406              		.loc 1 1017 0
 3407 00b6 3B6A     		ldr	r3, [r7, #32]
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3408              		.loc 1 1018 0
 3409 00b8 1846     		mov	r0, r3
 3410 00ba 2C37     		adds	r7, r7, #44
 3411              	.LCFI35:
 3412              		.cfi_def_cfa_offset 4
 3413 00bc BD46     		mov	sp, r7
 3414              	.LCFI36:
 3415              		.cfi_def_cfa_register 13
 3416              		@ sp needed
 3417 00be 5DF8047B 		ldr	r7, [sp], #4
 3418              	.LCFI37:
ARM GAS  /tmp/ccs8nK3N.s 			page 98


 3419              		.cfi_restore 7
 3420              		.cfi_def_cfa_offset 0
 3421 00c2 7047     		bx	lr
 3422              	.L220:
 3423              		.align	2
 3424              	.L219:
 3425 00c4 00100240 		.word	1073876992
 3426 00c8 00127A00 		.word	8000000
 3427 00cc 00000000 		.word	aPLLMULFactorTable
 3428 00d0 00000000 		.word	aPredivFactorTable
 3429              		.cfi_endproc
 3430              	.LFE136:
 3432              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 3433              		.align	1
 3434              		.global	HAL_RCC_GetHCLKFreq
 3435              		.syntax unified
 3436              		.thumb
 3437              		.thumb_func
 3438              		.fpu fpv4-sp-d16
 3440              	HAL_RCC_GetHCLKFreq:
 3441              	.LFB137:
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * 
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated within this function
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HCLK frequency
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3442              		.loc 1 1030 0
 3443              		.cfi_startproc
 3444              		@ args = 0, pretend = 0, frame = 0
 3445              		@ frame_needed = 1, uses_anonymous_args = 0
 3446              		@ link register save eliminated.
 3447 0000 80B4     		push	{r7}
 3448              	.LCFI38:
 3449              		.cfi_def_cfa_offset 4
 3450              		.cfi_offset 7, -4
 3451 0002 00AF     		add	r7, sp, #0
 3452              	.LCFI39:
 3453              		.cfi_def_cfa_register 7
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return SystemCoreClock;
 3454              		.loc 1 1031 0
 3455 0004 034B     		ldr	r3, .L223
 3456 0006 1B68     		ldr	r3, [r3]
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3457              		.loc 1 1032 0
 3458 0008 1846     		mov	r0, r3
 3459 000a BD46     		mov	sp, r7
 3460              	.LCFI40:
 3461              		.cfi_def_cfa_register 13
 3462              		@ sp needed
 3463 000c 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccs8nK3N.s 			page 99


 3464              	.LCFI41:
 3465              		.cfi_restore 7
 3466              		.cfi_def_cfa_offset 0
 3467 0010 7047     		bx	lr
 3468              	.L224:
 3469 0012 00BF     		.align	2
 3470              	.L223:
 3471 0014 00000000 		.word	SystemCoreClock
 3472              		.cfi_endproc
 3473              	.LFE137:
 3475              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 3476              		.align	1
 3477              		.global	HAL_RCC_GetPCLK1Freq
 3478              		.syntax unified
 3479              		.thumb
 3480              		.thumb_func
 3481              		.fpu fpv4-sp-d16
 3483              	HAL_RCC_GetPCLK1Freq:
 3484              	.LFB138:
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK1 frequency
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3485              		.loc 1 1041 0
 3486              		.cfi_startproc
 3487              		@ args = 0, pretend = 0, frame = 8
 3488              		@ frame_needed = 1, uses_anonymous_args = 0
 3489 0000 80B5     		push	{r7, lr}
 3490              	.LCFI42:
 3491              		.cfi_def_cfa_offset 8
 3492              		.cfi_offset 7, -8
 3493              		.cfi_offset 14, -4
 3494 0002 82B0     		sub	sp, sp, #8
 3495              	.LCFI43:
 3496              		.cfi_def_cfa_offset 16
 3497 0004 00AF     		add	r7, sp, #0
 3498              	.LCFI44:
 3499              		.cfi_def_cfa_register 7
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 3500              		.loc 1 1043 0
 3501 0006 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3502 000a 0146     		mov	r1, r0
 3503 000c 0B4B     		ldr	r3, .L228
 3504 000e 5B68     		ldr	r3, [r3, #4]
 3505 0010 03F4E063 		and	r3, r3, #1792
 3506 0014 4FF4E062 		mov	r2, #1792
 3507 0018 7A60     		str	r2, [r7, #4]
 3508              	.LBB329:
 3509              	.LBB330:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3510              		.loc 2 988 0
ARM GAS  /tmp/ccs8nK3N.s 			page 100


 3511 001a 7A68     		ldr	r2, [r7, #4]
 3512              		.syntax unified
 3513              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3514 001c 92FAA2F2 		rbit r2, r2
 3515              	@ 0 "" 2
 3516              		.thumb
 3517              		.syntax unified
 3518 0020 3A60     		str	r2, [r7]
 3519              		.loc 2 1001 0
 3520 0022 3A68     		ldr	r2, [r7]
 3521              	.LBE330:
 3522              	.LBE329:
 3523              		.loc 1 1043 0
 3524 0024 B2FA82F2 		clz	r2, r2
 3525 0028 D2B2     		uxtb	r2, r2
 3526 002a D340     		lsrs	r3, r3, r2
 3527 002c 044A     		ldr	r2, .L228+4
 3528 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3529 0030 21FA03F3 		lsr	r3, r1, r3
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }    
 3530              		.loc 1 1044 0
 3531 0034 1846     		mov	r0, r3
 3532 0036 0837     		adds	r7, r7, #8
 3533              	.LCFI45:
 3534              		.cfi_def_cfa_offset 8
 3535 0038 BD46     		mov	sp, r7
 3536              	.LCFI46:
 3537              		.cfi_def_cfa_register 13
 3538              		@ sp needed
 3539 003a 80BD     		pop	{r7, pc}
 3540              	.L229:
 3541              		.align	2
 3542              	.L228:
 3543 003c 00100240 		.word	1073876992
 3544 0040 00000000 		.word	APBPrescTable
 3545              		.cfi_endproc
 3546              	.LFE138:
 3548              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 3549              		.align	1
 3550              		.global	HAL_RCC_GetPCLK2Freq
 3551              		.syntax unified
 3552              		.thumb
 3553              		.thumb_func
 3554              		.fpu fpv4-sp-d16
 3556              	HAL_RCC_GetPCLK2Freq:
 3557              	.LFB139:
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK2 frequency
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3558              		.loc 1 1053 0
 3559              		.cfi_startproc
ARM GAS  /tmp/ccs8nK3N.s 			page 101


 3560              		@ args = 0, pretend = 0, frame = 8
 3561              		@ frame_needed = 1, uses_anonymous_args = 0
 3562 0000 80B5     		push	{r7, lr}
 3563              	.LCFI47:
 3564              		.cfi_def_cfa_offset 8
 3565              		.cfi_offset 7, -8
 3566              		.cfi_offset 14, -4
 3567 0002 82B0     		sub	sp, sp, #8
 3568              	.LCFI48:
 3569              		.cfi_def_cfa_offset 16
 3570 0004 00AF     		add	r7, sp, #0
 3571              	.LCFI49:
 3572              		.cfi_def_cfa_register 7
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 3573              		.loc 1 1055 0
 3574 0006 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3575 000a 0146     		mov	r1, r0
 3576 000c 0B4B     		ldr	r3, .L233
 3577 000e 5B68     		ldr	r3, [r3, #4]
 3578 0010 03F46053 		and	r3, r3, #14336
 3579 0014 4FF46052 		mov	r2, #14336
 3580 0018 7A60     		str	r2, [r7, #4]
 3581              	.LBB331:
 3582              	.LBB332:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3583              		.loc 2 988 0
 3584 001a 7A68     		ldr	r2, [r7, #4]
 3585              		.syntax unified
 3586              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3587 001c 92FAA2F2 		rbit r2, r2
 3588              	@ 0 "" 2
 3589              		.thumb
 3590              		.syntax unified
 3591 0020 3A60     		str	r2, [r7]
 3592              		.loc 2 1001 0
 3593 0022 3A68     		ldr	r2, [r7]
 3594              	.LBE332:
 3595              	.LBE331:
 3596              		.loc 1 1055 0
 3597 0024 B2FA82F2 		clz	r2, r2
 3598 0028 D2B2     		uxtb	r2, r2
 3599 002a D340     		lsrs	r3, r3, r2
 3600 002c 044A     		ldr	r2, .L233+4
 3601 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3602 0030 21FA03F3 		lsr	r3, r1, r3
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** } 
 3603              		.loc 1 1056 0
 3604 0034 1846     		mov	r0, r3
 3605 0036 0837     		adds	r7, r7, #8
 3606              	.LCFI50:
 3607              		.cfi_def_cfa_offset 8
 3608 0038 BD46     		mov	sp, r7
 3609              	.LCFI51:
 3610              		.cfi_def_cfa_register 13
 3611              		@ sp needed
 3612 003a 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccs8nK3N.s 			page 102


 3613              	.L234:
 3614              		.align	2
 3615              	.L233:
 3616 003c 00100240 		.word	1073876992
 3617 0040 00000000 		.word	APBPrescTable
 3618              		.cfi_endproc
 3619              	.LFE139:
 3621              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 3622              		.align	1
 3623              		.global	HAL_RCC_GetOscConfig
 3624              		.syntax unified
 3625              		.thumb
 3626              		.thumb_func
 3627              		.fpu fpv4-sp-d16
 3629              	HAL_RCC_GetOscConfig:
 3630              	.LFB140:
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * will be configured.
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3631              		.loc 1 1066 0
 3632              		.cfi_startproc
 3633              		@ args = 0, pretend = 0, frame = 16
 3634              		@ frame_needed = 1, uses_anonymous_args = 0
 3635              		@ link register save eliminated.
 3636 0000 80B4     		push	{r7}
 3637              	.LCFI52:
 3638              		.cfi_def_cfa_offset 4
 3639              		.cfi_offset 7, -4
 3640 0002 85B0     		sub	sp, sp, #20
 3641              	.LCFI53:
 3642              		.cfi_def_cfa_offset 24
 3643 0004 00AF     		add	r7, sp, #0
 3644              	.LCFI54:
 3645              		.cfi_def_cfa_register 7
 3646 0006 7860     		str	r0, [r7, #4]
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 3647              		.loc 1 1071 0
 3648 0008 7B68     		ldr	r3, [r7, #4]
 3649 000a 0F22     		movs	r2, #15
 3650 000c 1A60     		str	r2, [r3]
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 3651              		.loc 1 1076 0
ARM GAS  /tmp/ccs8nK3N.s 			page 103


 3652 000e 424B     		ldr	r3, .L249
 3653 0010 1B68     		ldr	r3, [r3]
 3654 0012 03F48023 		and	r3, r3, #262144
 3655 0016 B3F5802F 		cmp	r3, #262144
 3656 001a 04D1     		bne	.L236
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 3657              		.loc 1 1078 0
 3658 001c 7B68     		ldr	r3, [r7, #4]
 3659 001e 4FF4A022 		mov	r2, #327680
 3660 0022 5A60     		str	r2, [r3, #4]
 3661 0024 0EE0     		b	.L237
 3662              	.L236:
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 3663              		.loc 1 1080 0
 3664 0026 3C4B     		ldr	r3, .L249
 3665 0028 1B68     		ldr	r3, [r3]
 3666 002a 03F48033 		and	r3, r3, #65536
 3667 002e B3F5803F 		cmp	r3, #65536
 3668 0032 04D1     		bne	.L238
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 3669              		.loc 1 1082 0
 3670 0034 7B68     		ldr	r3, [r7, #4]
 3671 0036 4FF48032 		mov	r2, #65536
 3672 003a 5A60     		str	r2, [r3, #4]
 3673 003c 02E0     		b	.L237
 3674              	.L238:
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 3675              		.loc 1 1086 0
 3676 003e 7B68     		ldr	r3, [r7, #4]
 3677 0040 0022     		movs	r2, #0
 3678 0042 5A60     		str	r2, [r3, #4]
 3679              	.L237:
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 3680              		.loc 1 1093 0
 3681 0044 344B     		ldr	r3, .L249
 3682 0046 1B68     		ldr	r3, [r3]
 3683 0048 03F00103 		and	r3, r3, #1
 3684 004c 012B     		cmp	r3, #1
 3685 004e 03D1     		bne	.L239
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 3686              		.loc 1 1095 0
 3687 0050 7B68     		ldr	r3, [r7, #4]
 3688 0052 0122     		movs	r2, #1
 3689 0054 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccs8nK3N.s 			page 104


 3690 0056 02E0     		b	.L240
 3691              	.L239:
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 3692              		.loc 1 1099 0
 3693 0058 7B68     		ldr	r3, [r7, #4]
 3694 005a 0022     		movs	r2, #0
 3695 005c DA60     		str	r2, [r3, #12]
 3696              	.L240:
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 3697              		.loc 1 1102 0
 3698 005e 2E4B     		ldr	r3, .L249
 3699 0060 1B68     		ldr	r3, [r3]
 3700 0062 03F0F803 		and	r3, r3, #248
 3701 0066 F822     		movs	r2, #248
 3702 0068 FA60     		str	r2, [r7, #12]
 3703              	.LBB333:
 3704              	.LBB334:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3705              		.loc 2 988 0
 3706 006a FA68     		ldr	r2, [r7, #12]
 3707              		.syntax unified
 3708              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3709 006c 92FAA2F2 		rbit r2, r2
 3710              	@ 0 "" 2
 3711              		.thumb
 3712              		.syntax unified
 3713 0070 BA60     		str	r2, [r7, #8]
 3714              		.loc 2 1001 0
 3715 0072 BA68     		ldr	r2, [r7, #8]
 3716              	.LBE334:
 3717              	.LBE333:
 3718              		.loc 1 1102 0
 3719 0074 B2FA82F2 		clz	r2, r2
 3720 0078 D2B2     		uxtb	r2, r2
 3721 007a 23FA02F2 		lsr	r2, r3, r2
 3722 007e 7B68     		ldr	r3, [r7, #4]
 3723 0080 1A61     		str	r2, [r3, #16]
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 3724              		.loc 1 1105 0
 3725 0082 254B     		ldr	r3, .L249
 3726 0084 1B6A     		ldr	r3, [r3, #32]
 3727 0086 03F00403 		and	r3, r3, #4
 3728 008a 042B     		cmp	r3, #4
 3729 008c 03D1     		bne	.L242
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 3730              		.loc 1 1107 0
 3731 008e 7B68     		ldr	r3, [r7, #4]
 3732 0090 0522     		movs	r2, #5
 3733 0092 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccs8nK3N.s 			page 105


 3734 0094 0CE0     		b	.L243
 3735              	.L242:
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 3736              		.loc 1 1109 0
 3737 0096 204B     		ldr	r3, .L249
 3738 0098 1B6A     		ldr	r3, [r3, #32]
 3739 009a 03F00103 		and	r3, r3, #1
 3740 009e 012B     		cmp	r3, #1
 3741 00a0 03D1     		bne	.L244
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 3742              		.loc 1 1111 0
 3743 00a2 7B68     		ldr	r3, [r7, #4]
 3744 00a4 0122     		movs	r2, #1
 3745 00a6 9A60     		str	r2, [r3, #8]
 3746 00a8 02E0     		b	.L243
 3747              	.L244:
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 3748              		.loc 1 1115 0
 3749 00aa 7B68     		ldr	r3, [r7, #4]
 3750 00ac 0022     		movs	r2, #0
 3751 00ae 9A60     		str	r2, [r3, #8]
 3752              	.L243:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 3753              		.loc 1 1119 0
 3754 00b0 194B     		ldr	r3, .L249
 3755 00b2 5B6A     		ldr	r3, [r3, #36]
 3756 00b4 03F00103 		and	r3, r3, #1
 3757 00b8 012B     		cmp	r3, #1
 3758 00ba 03D1     		bne	.L245
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 3759              		.loc 1 1121 0
 3760 00bc 7B68     		ldr	r3, [r7, #4]
 3761 00be 0122     		movs	r2, #1
 3762 00c0 5A61     		str	r2, [r3, #20]
 3763 00c2 02E0     		b	.L246
 3764              	.L245:
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 3765              		.loc 1 1125 0
 3766 00c4 7B68     		ldr	r3, [r7, #4]
 3767 00c6 0022     		movs	r2, #0
 3768 00c8 5A61     		str	r2, [r3, #20]
 3769              	.L246:
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
ARM GAS  /tmp/ccs8nK3N.s 			page 106


1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 3770              		.loc 1 1130 0
 3771 00ca 134B     		ldr	r3, .L249
 3772 00cc 1B68     		ldr	r3, [r3]
 3773 00ce 03F08073 		and	r3, r3, #16777216
 3774 00d2 B3F1807F 		cmp	r3, #16777216
 3775 00d6 03D1     		bne	.L247
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 3776              		.loc 1 1132 0
 3777 00d8 7B68     		ldr	r3, [r7, #4]
 3778 00da 0222     		movs	r2, #2
 3779 00dc 9A61     		str	r2, [r3, #24]
 3780 00de 02E0     		b	.L248
 3781              	.L247:
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 3782              		.loc 1 1136 0
 3783 00e0 7B68     		ldr	r3, [r7, #4]
 3784 00e2 0122     		movs	r2, #1
 3785 00e4 9A61     		str	r2, [r3, #24]
 3786              	.L248:
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 3787              		.loc 1 1138 0
 3788 00e6 0C4B     		ldr	r3, .L249
 3789 00e8 5B68     		ldr	r3, [r3, #4]
 3790 00ea 03F4C032 		and	r2, r3, #98304
 3791 00ee 7B68     		ldr	r3, [r7, #4]
 3792 00f0 DA61     		str	r2, [r3, #28]
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 3793              		.loc 1 1139 0
 3794 00f2 094B     		ldr	r3, .L249
 3795 00f4 5B68     		ldr	r3, [r3, #4]
 3796 00f6 03F47012 		and	r2, r3, #3932160
 3797 00fa 7B68     		ldr	r3, [r7, #4]
 3798 00fc 1A62     		str	r2, [r3, #32]
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
 3799              		.loc 1 1141 0
 3800 00fe 064B     		ldr	r3, .L249
 3801 0100 DB6A     		ldr	r3, [r3, #44]
 3802 0102 03F00F02 		and	r2, r3, #15
 3803 0106 7B68     		ldr	r3, [r7, #4]
 3804 0108 5A62     		str	r2, [r3, #36]
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3805              		.loc 1 1143 0
 3806 010a 00BF     		nop
 3807 010c 1437     		adds	r7, r7, #20
 3808              	.LCFI55:
 3809              		.cfi_def_cfa_offset 4
 3810 010e BD46     		mov	sp, r7
 3811              	.LCFI56:
ARM GAS  /tmp/ccs8nK3N.s 			page 107


 3812              		.cfi_def_cfa_register 13
 3813              		@ sp needed
 3814 0110 5DF8047B 		ldr	r7, [sp], #4
 3815              	.LCFI57:
 3816              		.cfi_restore 7
 3817              		.cfi_def_cfa_offset 0
 3818 0114 7047     		bx	lr
 3819              	.L250:
 3820 0116 00BF     		.align	2
 3821              	.L249:
 3822 0118 00100240 		.word	1073876992
 3823              		.cfi_endproc
 3824              	.LFE140:
 3826              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 3827              		.align	1
 3828              		.global	HAL_RCC_GetClockConfig
 3829              		.syntax unified
 3830              		.thumb
 3831              		.thumb_func
 3832              		.fpu fpv4-sp-d16
 3834              	HAL_RCC_GetClockConfig:
 3835              	.LFB141:
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * contains the current clock configuration.
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3836              		.loc 1 1154 0
 3837              		.cfi_startproc
 3838              		@ args = 0, pretend = 0, frame = 8
 3839              		@ frame_needed = 1, uses_anonymous_args = 0
 3840              		@ link register save eliminated.
 3841 0000 80B4     		push	{r7}
 3842              	.LCFI58:
 3843              		.cfi_def_cfa_offset 4
 3844              		.cfi_offset 7, -4
 3845 0002 83B0     		sub	sp, sp, #12
 3846              	.LCFI59:
 3847              		.cfi_def_cfa_offset 16
 3848 0004 00AF     		add	r7, sp, #0
 3849              	.LCFI60:
 3850              		.cfi_def_cfa_register 7
 3851 0006 7860     		str	r0, [r7, #4]
 3852 0008 3960     		str	r1, [r7]
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 3853              		.loc 1 1160 0
ARM GAS  /tmp/ccs8nK3N.s 			page 108


 3854 000a 7B68     		ldr	r3, [r7, #4]
 3855 000c 0F22     		movs	r2, #15
 3856 000e 1A60     		str	r2, [r3]
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 3857              		.loc 1 1163 0
 3858 0010 124B     		ldr	r3, .L252
 3859 0012 5B68     		ldr	r3, [r3, #4]
 3860 0014 03F00302 		and	r2, r3, #3
 3861 0018 7B68     		ldr	r3, [r7, #4]
 3862 001a 5A60     		str	r2, [r3, #4]
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 3863              		.loc 1 1166 0
 3864 001c 0F4B     		ldr	r3, .L252
 3865 001e 5B68     		ldr	r3, [r3, #4]
 3866 0020 03F0F002 		and	r2, r3, #240
 3867 0024 7B68     		ldr	r3, [r7, #4]
 3868 0026 9A60     		str	r2, [r3, #8]
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 3869              		.loc 1 1169 0
 3870 0028 0C4B     		ldr	r3, .L252
 3871 002a 5B68     		ldr	r3, [r3, #4]
 3872 002c 03F4E062 		and	r2, r3, #1792
 3873 0030 7B68     		ldr	r3, [r7, #4]
 3874 0032 DA60     		str	r2, [r3, #12]
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 3875              		.loc 1 1172 0
 3876 0034 094B     		ldr	r3, .L252
 3877 0036 5B68     		ldr	r3, [r3, #4]
 3878 0038 DB08     		lsrs	r3, r3, #3
 3879 003a 03F4E062 		and	r2, r3, #1792
 3880 003e 7B68     		ldr	r3, [r7, #4]
 3881 0040 1A61     		str	r2, [r3, #16]
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 3882              		.loc 1 1175 0
 3883 0042 074B     		ldr	r3, .L252+4
 3884 0044 1B68     		ldr	r3, [r3]
 3885 0046 03F00702 		and	r2, r3, #7
 3886 004a 3B68     		ldr	r3, [r7]
 3887 004c 1A60     		str	r2, [r3]
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3888              		.loc 1 1176 0
 3889 004e 00BF     		nop
 3890 0050 0C37     		adds	r7, r7, #12
 3891              	.LCFI61:
 3892              		.cfi_def_cfa_offset 4
 3893 0052 BD46     		mov	sp, r7
 3894              	.LCFI62:
ARM GAS  /tmp/ccs8nK3N.s 			page 109


 3895              		.cfi_def_cfa_register 13
 3896              		@ sp needed
 3897 0054 5DF8047B 		ldr	r7, [sp], #4
 3898              	.LCFI63:
 3899              		.cfi_restore 7
 3900              		.cfi_def_cfa_offset 0
 3901 0058 7047     		bx	lr
 3902              	.L253:
 3903 005a 00BF     		.align	2
 3904              	.L252:
 3905 005c 00100240 		.word	1073876992
 3906 0060 00200240 		.word	1073881088
 3907              		.cfi_endproc
 3908              	.LFE141:
 3910              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 3911              		.align	1
 3912              		.global	HAL_RCC_NMI_IRQHandler
 3913              		.syntax unified
 3914              		.thumb
 3915              		.thumb_func
 3916              		.fpu fpv4-sp-d16
 3918              	HAL_RCC_NMI_IRQHandler:
 3919              	.LFB142:
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3920              		.loc 1 1184 0
 3921              		.cfi_startproc
 3922              		@ args = 0, pretend = 0, frame = 0
 3923              		@ frame_needed = 1, uses_anonymous_args = 0
 3924 0000 80B5     		push	{r7, lr}
 3925              	.LCFI64:
 3926              		.cfi_def_cfa_offset 8
 3927              		.cfi_offset 7, -8
 3928              		.cfi_offset 14, -4
 3929 0002 00AF     		add	r7, sp, #0
 3930              	.LCFI65:
 3931              		.cfi_def_cfa_register 7
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 3932              		.loc 1 1186 0
 3933 0004 064B     		ldr	r3, .L257
 3934 0006 9B68     		ldr	r3, [r3, #8]
 3935 0008 03F08003 		and	r3, r3, #128
 3936 000c 802B     		cmp	r3, #128
 3937 000e 04D1     		bne	.L256
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 3938              		.loc 1 1189 0
 3939 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
ARM GAS  /tmp/ccs8nK3N.s 			page 110


1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 3940              		.loc 1 1192 0
 3941 0014 034B     		ldr	r3, .L257+4
 3942 0016 8022     		movs	r2, #128
 3943 0018 1A70     		strb	r2, [r3]
 3944              	.L256:
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3945              		.loc 1 1194 0
 3946 001a 00BF     		nop
 3947 001c 80BD     		pop	{r7, pc}
 3948              	.L258:
 3949 001e 00BF     		.align	2
 3950              	.L257:
 3951 0020 00100240 		.word	1073876992
 3952 0024 0A100240 		.word	1073877002
 3953              		.cfi_endproc
 3954              	.LFE142:
 3956              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 3957              		.align	1
 3958              		.weak	HAL_RCC_CSSCallback
 3959              		.syntax unified
 3960              		.thumb
 3961              		.thumb_func
 3962              		.fpu fpv4-sp-d16
 3964              	HAL_RCC_CSSCallback:
 3965              	.LFB143:
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval none
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 3966              		.loc 1 1201 0
 3967              		.cfi_startproc
 3968              		@ args = 0, pretend = 0, frame = 0
 3969              		@ frame_needed = 1, uses_anonymous_args = 0
 3970              		@ link register save eliminated.
 3971 0000 80B4     		push	{r7}
 3972              	.LCFI66:
 3973              		.cfi_def_cfa_offset 4
 3974              		.cfi_offset 7, -4
 3975 0002 00AF     		add	r7, sp, #0
 3976              	.LCFI67:
 3977              		.cfi_def_cfa_register 7
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     */ 
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 3978              		.loc 1 1205 0
 3979 0004 00BF     		nop
 3980 0006 BD46     		mov	sp, r7
 3981              	.LCFI68:
 3982              		.cfi_def_cfa_register 13
 3983              		@ sp needed
ARM GAS  /tmp/ccs8nK3N.s 			page 111


 3984 0008 5DF8047B 		ldr	r7, [sp], #4
 3985              	.LCFI69:
 3986              		.cfi_restore 7
 3987              		.cfi_def_cfa_offset 0
 3988 000c 7047     		bx	lr
 3989              		.cfi_endproc
 3990              	.LFE143:
 3992              		.text
 3993              	.Letext0:
 3994              		.file 3 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_typ
 3995              		.file 4 "/home/ubuntu/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 3996              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 3997              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 3998              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 3999              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 4000              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 4001              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 4002              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 4003              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccs8nK3N.s 			page 112


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_rcc.c
     /tmp/ccs8nK3N.s:22     .rodata.aPLLMULFactorTable:0000000000000000 aPLLMULFactorTable
     /tmp/ccs8nK3N.s:19     .rodata.aPLLMULFactorTable:0000000000000000 $d
     /tmp/ccs8nK3N.s:44     .rodata.aPredivFactorTable:0000000000000000 aPredivFactorTable
     /tmp/ccs8nK3N.s:41     .rodata.aPredivFactorTable:0000000000000000 $d
     /tmp/ccs8nK3N.s:62     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccs8nK3N.s:69     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccs8nK3N.s:275    .text.HAL_RCC_DeInit:0000000000000130 $d
     /tmp/ccs8nK3N.s:285    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccs8nK3N.s:292    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccs8nK3N.s:742    .text.HAL_RCC_OscConfig:00000000000002e4 $d
     /tmp/ccs8nK3N.s:745    .text.HAL_RCC_OscConfig:00000000000002e8 $t
     /tmp/ccs8nK3N.s:1278   .text.HAL_RCC_OscConfig:000000000000063c $d
     /tmp/ccs8nK3N.s:1281   .text.HAL_RCC_OscConfig:0000000000000644 $t
     /tmp/ccs8nK3N.s:1718   .text.HAL_RCC_OscConfig:000000000000091c $d
     /tmp/ccs8nK3N.s:1722   .text.HAL_RCC_OscConfig:0000000000000928 $t
     /tmp/ccs8nK3N.s:2193   .text.HAL_RCC_OscConfig:0000000000000c44 $d
     /tmp/ccs8nK3N.s:2195   .text.HAL_RCC_OscConfig:0000000000000c48 $t
     /tmp/ccs8nK3N.s:2488   .text.HAL_RCC_OscConfig:0000000000000e28 $d
     /tmp/ccs8nK3N.s:2493   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccs8nK3N.s:2500   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccs8nK3N.s:2941   .text.HAL_RCC_ClockConfig:000000000000025c $d
     /tmp/ccs8nK3N.s:2945   .text.HAL_RCC_ClockConfig:0000000000000264 $t
     /tmp/ccs8nK3N.s:3269   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccs8nK3N.s:3030   .text.HAL_RCC_ClockConfig:00000000000002e8 $d
     /tmp/ccs8nK3N.s:3038   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccs8nK3N.s:3045   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccs8nK3N.s:3121   .text.HAL_RCC_MCOConfig:0000000000000064 $d
     /tmp/ccs8nK3N.s:3126   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccs8nK3N.s:3133   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccs8nK3N.s:3194   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccs8nK3N.s:3201   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccs8nK3N.s:3262   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccs8nK3N.s:3425   .text.HAL_RCC_GetSysClockFreq:00000000000000c4 $d
     /tmp/ccs8nK3N.s:3433   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccs8nK3N.s:3440   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccs8nK3N.s:3471   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/ccs8nK3N.s:3476   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccs8nK3N.s:3483   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccs8nK3N.s:3543   .text.HAL_RCC_GetPCLK1Freq:000000000000003c $d
     /tmp/ccs8nK3N.s:3549   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccs8nK3N.s:3556   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccs8nK3N.s:3616   .text.HAL_RCC_GetPCLK2Freq:000000000000003c $d
     /tmp/ccs8nK3N.s:3622   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccs8nK3N.s:3629   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccs8nK3N.s:3822   .text.HAL_RCC_GetOscConfig:0000000000000118 $d
     /tmp/ccs8nK3N.s:3827   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccs8nK3N.s:3834   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccs8nK3N.s:3905   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/ccs8nK3N.s:3911   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccs8nK3N.s:3918   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccs8nK3N.s:3964   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccs8nK3N.s:3951   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
     /tmp/ccs8nK3N.s:3957   .text.HAL_RCC_CSSCallback:0000000000000000 $t

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccs8nK3N.s 			page 113


HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
AHBPrescTable
HAL_GPIO_Init
APBPrescTable
